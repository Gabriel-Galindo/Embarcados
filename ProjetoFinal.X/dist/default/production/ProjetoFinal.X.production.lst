

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Dec 16 16:35:06 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4520 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataBANK0
    84  001874                     __pidataBANK0:
    85                           	callstack 0
    86                           
    87                           ;initializer for main@F2395
    88  001874  0001               	dw	1
    89  001876  0001               	dw	1
    90  001878  0001               	dw	1
    91  00187A  0001               	dw	1
    92  00187C  0002               	dw	2
    93  00187E  0002               	dw	2
    94  001880  0002               	dw	2
    95  001882  0002               	dw	2
    96  001884  0003               	dw	3
    97  001886  0003               	dw	3
    98  001888  0003               	dw	3
    99  00188A  0003               	dw	3
   100  00188C  0004               	dw	4
   101  00188E  0004               	dw	4
   102  001890  0004               	dw	4
   103  001892  0004               	dw	4
   104  001894  0005               	dw	5
   105  001896  0005               	dw	5
   106  001898  0005               	dw	5
   107  00189A  0005               	dw	5
   108  00189C  0006               	dw	6
   109  00189E  0006               	dw	6
   110  0018A0  0006               	dw	6
   111  0018A2  0006               	dw	6
   112  0018A4  0007               	dw	7
   113  0018A6  0007               	dw	7
   114  0018A8  0007               	dw	7
   115  0018AA  0007               	dw	7
   116  0018AC  0008               	dw	8
   117  0018AE  0008               	dw	8
   118  0018B0  0008               	dw	8
   119  0018B2  0008               	dw	8
   120  0018B4  0009               	dw	9
   121  0018B6  0009               	dw	9
   122  0018B8  0009               	dw	9
   123  0018BA  0009               	dw	9
   124  0018BC  000A               	dw	10
   125  0018BE  000A               	dw	10
   126  0018C0  000A               	dw	10
   127  0018C2  000A               	dw	10
   128  0018C4  000B               	dw	11
   129  0018C6  000B               	dw	11
   130  0018C8  000B               	dw	11
   131  0018CA  000B               	dw	11
   132  0018CC  000C               	dw	12
   133  0018CE  000C               	dw	12
   134  0018D0  000C               	dw	12
   135  0018D2  000C               	dw	12
   136  0018D4  000D               	dw	13
   137  0018D6  000D               	dw	13
   138  0018D8  000D               	dw	13
   139  0018DA  000D               	dw	13
   140                           
   141                           	psect	smallconst
   142  000600                     __psmallconst:
   143                           	callstack 0
   144  000600  00                 	db	0
   145  000601                     _valor:
   146                           	callstack 0
   147  000601  3F                 	db	63
   148  000602  06                 	db	6
   149  000603  5B                 	db	91
   150  000604  4F                 	db	79
   151  000605  66                 	db	102
   152  000606  6D                 	db	109
   153  000607  7D                 	db	125
   154  000608  07                 	db	7
   155  000609  7F                 	db	127
   156  00060A  6F                 	db	111
   157  00060B  77                 	db	119
   158  00060C  7C                 	db	124
   159  00060D  39                 	db	57
   160  00060E  5E                 	db	94
   161  00060F  79                 	db	121
   162  000610  71                 	db	113
   163  000611                     __end_of_valor:
   164                           	callstack 0
   165  000611  55                 	db	85
   166  000612  4C                 	db	76
   167  000613  44                 	db	68
   168  000614  52                 	db	82
   169  000615  53                 	db	83
   170  000616  58                 	db	88
   171  000617  41                 	db	65
   172  000618  42                 	db	66
   173  000619  59                 	db	89
   174  00061A  73                 	db	115
   175  00061B                     __end_of_charKey:
   176                           	callstack 0
   177  0000                     _T0CON	set	4053
   178  0000                     _TMR0L	set	4054
   179  0000                     _TMR0H	set	4055
   180  0000                     _INTCON	set	4082
   181  0000                     _TRISE	set	3990
   182  0000                     _TRISD	set	3989
   183  0000                     _TRISC	set	3988
   184  0000                     _TRISB	set	3987
   185  0000                     _TRISA	set	3986
   186  0000                     _PORTE	set	3972
   187  0000                     _PORTD	set	3971
   188  0000                     _PORTC	set	3970
   189  0000                     _PORTB	set	3969
   190  0000                     _PORTA	set	3968
   191  0000                     _ADCON1	set	4033
   192  00061B  00                 	db	0	; dummy byte at the end
   193  0000                     
   194                           ; #config settings
   195                           
   196                           	psect	cinit
   197  0019C8                     __pcinit:
   198                           	callstack 0
   199  0019C8                     start_initialization:
   200                           	callstack 0
   201  0019C8                     __initialization:
   202                           	callstack 0
   203                           
   204                           ; Initialize objects allocated to BANK0 (104 bytes)
   205                           ; load TBLPTR registers with __pidataBANK0
   206  0019C8  0E74               	movlw	low __pidataBANK0
   207  0019CA  6EF6               	movwf	tblptrl,c
   208  0019CC  0E18               	movlw	high __pidataBANK0
   209  0019CE  6EF7               	movwf	tblptrh,c
   210  0019D0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   211  0019D2  6EF8               	movwf	tblptru,c
   212  0019D4  EE00  F080         	lfsr	0,__pdataBANK0
   213  0019D8  EE10 F068          	lfsr	1,104
   214  0019DC                     copy_data0:
   215  0019DC  0009               	tblrd		*+
   216  0019DE  CFF5 FFEE          	movff	tablat,postinc0
   217  0019E2  50E5               	movf	postdec1,w,c
   218  0019E4  50E1               	movf	fsr1l,w,c
   219  0019E6  E1FA               	bnz	copy_data0
   220                           
   221                           ; Clear objects allocated to BANK2 (104 bytes)
   222  0019E8  EE02  F000         	lfsr	0,__pbssBANK2
   223  0019EC  0E68               	movlw	104
   224  0019EE                     clear_0:
   225  0019EE  6AEE               	clrf	postinc0,c
   226  0019F0  06E8               	decf	wreg,f,c
   227  0019F2  E1FD               	bnz	clear_0
   228                           
   229                           ; Clear objects allocated to COMRAM (12 bytes)
   230  0019F4  EE00  F01D         	lfsr	0,__pbssCOMRAM
   231  0019F8  0E0C               	movlw	12
   232  0019FA                     clear_1:
   233  0019FA  6AEE               	clrf	postinc0,c
   234  0019FC  06E8               	decf	wreg,f,c
   235  0019FE  E1FD               	bnz	clear_1
   236  001A00                     end_of_initialization:
   237                           	callstack 0
   238  001A00                     __end_of__initialization:
   239                           	callstack 0
   240  001A00  0E00               	movlw	low (__Lmediumconst shr (0+16))
   241  001A02  6EF8               	movwf	tblptru,c
   242  001A04  0100               	movlb	0
   243  001A06  EF0E  F003         	goto	_main	;jump to C main() function
   244                           
   245                           	psect	bssCOMRAM
   246  00001D                     __pbssCOMRAM:
   247                           	callstack 0
   248  00001D                     kpDebounce@oldRead:
   249                           	callstack 0
   250  00001D                     	ds	2
   251  00001F                     kpDebounce@newRead:
   252                           	callstack 0
   253  00001F                     	ds	2
   254  000021                     _keys:
   255                           	callstack 0
   256  000021                     	ds	2
   257  000023                     _v3:
   258                           	callstack 0
   259  000023                     	ds	1
   260  000024                     _v2:
   261                           	callstack 0
   262  000024                     	ds	1
   263  000025                     _v1:
   264                           	callstack 0
   265  000025                     	ds	1
   266  000026                     _v0:
   267                           	callstack 0
   268  000026                     	ds	1
   269  000027                     _display:
   270                           	callstack 0
   271  000027                     	ds	1
   272  000028                     kpDebounce@tempo:
   273                           	callstack 0
   274  000028                     	ds	1
   275                           
   276                           	psect	dataBANK0
   277  000080                     __pdataBANK0:
   278                           	callstack 0
   279  000080                     main@F2395:
   280                           	callstack 0
   281  000080                     	ds	104
   282                           
   283                           	psect	bssBANK2
   284  000200                     __pbssBANK2:
   285                           	callstack 0
   286  000200                     	ds	104
   287                           
   288                           	psect	cstackBANK1
   289  000100                     __pcstackBANK1:
   290                           	callstack 0
   291  000100                     main@valor:
   292                           	callstack 0
   293                           
   294                           ; 104 bytes @ 0x0
   295  000100                     	ds	104
   296  000168                     main@namesa:
   297                           	callstack 0
   298                           
   299                           ; 104 bytes @ 0x68
   300  000168                     	ds	104
   301  0001D0                     main@cont:
   302                           	callstack 0
   303                           
   304                           ; 4 bytes @ 0xD0
   305  0001D0                     	ds	4
   306  0001D4                     main@terminou:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0xD4
   310  0001D4                     	ds	2
   311  0001D6                     main@tecla:
   312                           	callstack 0
   313                           
   314                           ; 4 bytes @ 0xD6
   315  0001D6                     	ds	4
   316  0001DA                     main@jogando:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0xDA
   320  0001DA                     	ds	2
   321  0001DC                     main@max:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0xDC
   325  0001DC                     	ds	2
   326  0001DE                     main@soma:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0xDE
   330  0001DE                     	ds	2
   331  0001E0                     main@aposta:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0xE0
   335  0001E0                     	ds	2
   336                           
   337                           	psect	cstackCOMRAM
   338  000001                     __pcstackCOMRAM:
   339                           	callstack 0
   340  000001                     ?_kpRead:
   341                           	callstack 0
   342  000001                     ?_digitalRead:
   343                           	callstack 0
   344  000001                     ?___awdiv:
   345                           	callstack 0
   346  000001                     ?___llmod:
   347                           	callstack 0
   348  000001                     mesaReset@namesa:
   349                           	callstack 0
   350  000001                     delayMicro@a:
   351                           	callstack 0
   352  000001                     delayMili@a:
   353                           	callstack 0
   354  000001                     digitalWrite@pin:
   355                           	callstack 0
   356  000001                     digitalRead@pin:
   357                           	callstack 0
   358  000001                     pinMode@pin:
   359                           	callstack 0
   360  000001                     ___awdiv@dividend:
   361                           	callstack 0
   362  000001                     ___llmod@dividend:
   363                           	callstack 0
   364                           
   365                           ; 4 bytes @ 0x0
   366  000001                     	ds	2
   367  000003                     ??_digitalRead:
   368  000003                     ??_delayMili:
   369  000003                     mesaReset@i:
   370                           	callstack 0
   371  000003                     digitalWrite@value:
   372                           	callstack 0
   373  000003                     pinMode@type:
   374                           	callstack 0
   375  000003                     ___awdiv@divisor:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x2
   379  000003                     	ds	1
   380  000004                     delayMili@i:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x3
   384  000004                     	ds	1
   385  000005                     ??_pinMode:
   386  000005                     ??_digitalWrite:
   387  000005                     ___awdiv@counter:
   388                           	callstack 0
   389  000005                     ___llmod@divisor:
   390                           	callstack 0
   391                           
   392                           ; 4 bytes @ 0x4
   393  000005                     	ds	1
   394  000006                     ___awdiv@sign:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x5
   398  000006                     	ds	1
   399  000007                     soWrite@value:
   400                           	callstack 0
   401  000007                     rgbColor@led:
   402                           	callstack 0
   403  000007                     ___awdiv@quotient:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x6
   407  000007                     	ds	2
   408  000009                     ?___wmul:
   409                           	callstack 0
   410  000009                     ?___awmod:
   411                           	callstack 0
   412  000009                     soWrite@i:
   413                           	callstack 0
   414  000009                     ___llmod@counter:
   415                           	callstack 0
   416  000009                     ___wmul@multiplier:
   417                           	callstack 0
   418  000009                     ___awmod@dividend:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x8
   422  000009                     	ds	1
   423  00000A                     ??_kpDebounce:
   424  00000A                     pushNibble@rs:
   425                           	callstack 0
   426  00000A                     pushByte@rs:
   427                           	callstack 0
   428  00000A                     timerReset@tempo:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x9
   432  00000A                     	ds	1
   433  00000B                     ___wmul@multiplicand:
   434                           	callstack 0
   435  00000B                     ___awmod@divisor:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0xA
   439  00000B                     	ds	1
   440  00000C                     ??_pushByte:
   441  00000C                     pushNibble@value:
   442                           	callstack 0
   443  00000C                     timerReset@ciclos:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0xB
   447  00000C                     	ds	1
   448  00000D                     pushByte@value:
   449                           	callstack 0
   450  00000D                     ___awmod@counter:
   451                           	callstack 0
   452  00000D                     kpDebounce@i:
   453                           	callstack 0
   454  00000D                     ___wmul@product:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0xC
   458  00000D                     	ds	1
   459  00000E                     lcdCommand@value:
   460                           	callstack 0
   461  00000E                     lcdChar@value:
   462                           	callstack 0
   463  00000E                     ___awmod@sign:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0xD
   467  00000E                     	ds	1
   468  00000F                     ?_sacaCarta:
   469                           	callstack 0
   470  00000F                     sacaCarta@valor:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xE
   474  00000F                     	ds	2
   475  000011                     sacaCarta@namesa:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x10
   479  000011                     	ds	2
   480  000013                     sacaCarta@cont:
   481                           	callstack 0
   482                           
   483                           ; 4 bytes @ 0x12
   484  000013                     	ds	4
   485  000017                     
   486                           ; 1 bytes @ 0x16
   487  000017                     	ds	2
   488  000019                     ??_main:
   489                           
   490                           ; 1 bytes @ 0x18
   491  000019                     	ds	4
   492                           
   493 ;;
   494 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   495 ;;
   496 ;; *************** function _main *****************
   497 ;; Defined at:
   498 ;;		line 54 in file "main.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;  namesa        104  104[BANK1 ] int [52]
   503 ;;  valor         104    0[BANK1 ] int [52]
   504 ;;  tecla           4  214[BANK1 ] unsigned long 
   505 ;;  cont            4  208[BANK1 ] unsigned long 
   506 ;;  aposta          2  224[BANK1 ] int 
   507 ;;  soma            2  222[BANK1 ] int 
   508 ;;  max             2  220[BANK1 ] int 
   509 ;;  jogando         2  218[BANK1 ] int 
   510 ;;  terminou        2  212[BANK1 ] int 
   511 ;; Return value:  Size  Location     Type
   512 ;;                  2   39[None  ] int 
   513 ;; Registers used:
   514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   520 ;;      Params:         0       0       0       0       0       0       0
   521 ;;      Locals:         0       0     226       0       0       0       0
   522 ;;      Temps:          4       0       0       0       0       0       0
   523 ;;      Totals:         4       0     226       0       0       0       0
   524 ;;Total ram usage:      230 bytes
   525 ;; Hardware stack levels required when called: 6
   526 ;; This function calls:
   527 ;;		___awdiv
   528 ;;		___awmod
   529 ;;		___wmul
   530 ;;		_kpDebounce
   531 ;;		_kpInit
   532 ;;		_kpRead
   533 ;;		_lcdChar
   534 ;;		_lcdCommand
   535 ;;		_lcdInit
   536 ;;		_mesaReset
   537 ;;		_rgbColor
   538 ;;		_rgbInit
   539 ;;		_sacaCarta
   540 ;;		_timerInit
   541 ;; This function is called by:
   542 ;;		Startup code after reset
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           	psect	text0
   547  00061C                     __ptext0:
   548                           	callstack 0
   549  00061C                     _main:
   550                           	callstack 25
   551  00061C                     
   552                           ;main.c: 55:     rgbInit();
   553  00061C  EC26  F00D         	call	_rgbInit	;wreg free
   554                           
   555                           ;main.c: 56:     kpInit();
   556  000620  EC64  F00D         	call	_kpInit	;wreg free
   557                           
   558                           ;main.c: 57:     lcdInit();
   559  000624  ECEC  F00A         	call	_lcdInit	;wreg free
   560                           
   561                           ;main.c: 58:     timerInit();
   562  000628  EC21  F00E         	call	_timerInit	;wreg free
   563  00062C                     
   564                           ;main.c: 59:     int valor[52]={1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,
      +                          8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13};
   565  00062C  EE20  F080         	lfsr	2,main@F2395
   566  000630  EE11  F000         	lfsr	1,main@valor
   567  000634  0E67               	movlw	103
   568  000636                     u2011:
   569  000636  CFDB FFE3          	movff	plusw2,plusw1
   570  00063A  06E8               	decf	wreg,f,c
   571  00063C  E2FC               	bc	u2011
   572  00063E                     
   573                           ;main.c: 60:     int namesa[52]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
      +                          ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
   574  00063E  EE21  F068         	lfsr	2,main@namesa
   575  000642  0E67               	movlw	103
   576  000644                     u2021:
   577  000644  6ADE               	clrf	postinc2,c
   578  000646  06E8               	decf	wreg,f,c
   579  000648  E2FD               	bc	u2021
   580  00064A                     
   581                           ;main.c: 61:     int soma=0;
   582  00064A  0E00               	movlw	0
   583  00064C  0101               	movlb	1	; () banked
   584  00064E  6FDF               	movwf	(main@soma+1)& (0+255),b
   585  000650  0E00               	movlw	0
   586  000652  6FDE               	movwf	main@soma& (0+255),b
   587  000654                     
   588                           ; BSR set to: 1
   589                           ;main.c: 62:     int aposta;;main.c: 63:     int max=100;
   590  000654  0E00               	movlw	0
   591  000656  6FDD               	movwf	(main@max+1)& (0+255),b
   592  000658  0E64               	movlw	100
   593  00065A  6FDC               	movwf	main@max& (0+255),b
   594  00065C                     
   595                           ; BSR set to: 1
   596                           ;main.c: 64:     int jogando;;main.c: 65:     int terminou=0;
   597  00065C  0E00               	movlw	0
   598  00065E  6FD5               	movwf	(main@terminou+1)& (0+255),b
   599  000660  0E00               	movlw	0
   600  000662  6FD4               	movwf	main@terminou& (0+255),b
   601  000664                     
   602                           ; BSR set to: 1
   603                           ;main.c: 66:     unsigned long int tecla=16;
   604  000664  0E10               	movlw	16
   605  000666  6FD6               	movwf	main@tecla& (0+255),b
   606  000668  0E00               	movlw	0
   607  00066A  6FD7               	movwf	(main@tecla+1)& (0+255),b
   608  00066C  0E00               	movlw	0
   609  00066E  6FD8               	movwf	(main@tecla+2)& (0+255),b
   610  000670  0E00               	movlw	0
   611  000672  6FD9               	movwf	(main@tecla+3)& (0+255),b
   612  000674                     
   613                           ; BSR set to: 1
   614                           ;main.c: 67:     unsigned long int cont=0;
   615  000674  0E00               	movlw	0
   616  000676  6FD0               	movwf	main@cont& (0+255),b
   617  000678  0E00               	movlw	0
   618  00067A  6FD1               	movwf	(main@cont+1)& (0+255),b
   619  00067C  0E00               	movlw	0
   620  00067E  6FD2               	movwf	(main@cont+2)& (0+255),b
   621  000680  0E00               	movlw	0
   622  000682  6FD3               	movwf	(main@cont+3)& (0+255),b
   623  000684                     l2057:
   624                           
   625                           ; BSR set to: 1
   626                           ;main.c: 69:         kpDebounce();
   627  000684  ECEF  F009         	call	_kpDebounce	;wreg free
   628  000688                     
   629                           ;main.c: 70:         if(kpRead()!=tecla){
   630  000688  EC1C  F00E         	call	_kpRead	;wreg free
   631  00068C  5001               	movf	?_kpRead^0,w,c
   632  00068E  6E19               	movwf	??_main^0,c
   633  000690  5002               	movf	(?_kpRead+1)^0,w,c
   634  000692  6E1A               	movwf	(??_main+1)^0,c
   635  000694  6A1B               	clrf	(??_main+2)^0,c
   636  000696  6A1C               	clrf	(??_main+3)^0,c
   637  000698  0101               	movlb	1	; () banked
   638  00069A  51D6               	movf	main@tecla& (0+255),w,b
   639  00069C  1819               	xorwf	??_main^0,w,c
   640  00069E  E10F               	bnz	u2030
   641  0006A0  51D7               	movf	(main@tecla+1)& (0+255),w,b
   642  0006A2  181A               	xorwf	(??_main+1)^0,w,c
   643  0006A4  E10C               	bnz	u2030
   644  0006A6  51D8               	movf	(main@tecla+2)& (0+255),w,b
   645  0006A8  181B               	xorwf	(??_main+2)^0,w,c
   646  0006AA  E109               	bnz	u2030
   647  0006AC  51D9               	movf	(main@tecla+3)& (0+255),w,b
   648  0006AE  181C               	xorwf	(??_main+3)^0,w,c
   649  0006B0  B4D8               	btfsc	status,2,c
   650  0006B2  EF5D  F003         	goto	u2031
   651  0006B6  EF5F  F003         	goto	u2030
   652  0006BA                     u2031:
   653  0006BA  EFC5  F004         	goto	l2121
   654  0006BE                     u2030:
   655  0006BE                     
   656                           ; BSR set to: 1
   657                           ;main.c: 71:             tecla=kpRead();
   658  0006BE  EC1C  F00E         	call	_kpRead	;wreg free
   659  0006C2  C001  F1D6         	movff	?_kpRead,main@tecla
   660  0006C6  C002  F1D7         	movff	?_kpRead+1,main@tecla+1
   661  0006CA  0101               	movlb	1	; () banked
   662  0006CC  6BD8               	clrf	(main@tecla+2)& (0+255),b
   663  0006CE  6BD9               	clrf	(main@tecla+3)& (0+255),b
   664  0006D0                     
   665                           ; BSR set to: 1
   666                           ;main.c: 72:             if(((tecla) & (1<<(0)))){if(jogando){jogando=0;lcdCommand(0x01)
      +                          ;terminou=1;}else{jogando=1;lcdCommand(0x01);terminou=0;}}
   667  0006D0  A1D6               	btfss	main@tecla& (0+255),0,b
   668  0006D2  EF6D  F003         	goto	u2041
   669  0006D6  EF6F  F003         	goto	u2040
   670  0006DA                     u2041:
   671  0006DA  EF92  F003         	goto	l2079
   672  0006DE                     u2040:
   673  0006DE                     
   674                           ; BSR set to: 1
   675  0006DE  51DA               	movf	main@jogando& (0+255),w,b
   676  0006E0  11DB               	iorwf	(main@jogando+1)& (0+255),w,b
   677  0006E2  B4D8               	btfsc	status,2,c
   678  0006E4  EF76  F003         	goto	u2051
   679  0006E8  EF78  F003         	goto	u2050
   680  0006EC                     u2051:
   681  0006EC  EF86  F003         	goto	l2073
   682  0006F0                     u2050:
   683  0006F0                     
   684                           ; BSR set to: 1
   685  0006F0  0E00               	movlw	0
   686  0006F2  6FDB               	movwf	(main@jogando+1)& (0+255),b
   687  0006F4  0E00               	movlw	0
   688  0006F6  6FDA               	movwf	main@jogando& (0+255),b
   689  0006F8                     
   690                           ; BSR set to: 1
   691  0006F8  0E01               	movlw	1
   692  0006FA  EC05  F00E         	call	_lcdCommand
   693  0006FE  0E00               	movlw	0
   694  000700  0101               	movlb	1	; () banked
   695  000702  6FD5               	movwf	(main@terminou+1)& (0+255),b
   696  000704  0E01               	movlw	1
   697  000706  6FD4               	movwf	main@terminou& (0+255),b
   698  000708  EF92  F003         	goto	l2079
   699  00070C                     l2073:
   700                           
   701                           ; BSR set to: 1
   702  00070C  0E00               	movlw	0
   703  00070E  6FDB               	movwf	(main@jogando+1)& (0+255),b
   704  000710  0E01               	movlw	1
   705  000712  6FDA               	movwf	main@jogando& (0+255),b
   706  000714                     
   707                           ; BSR set to: 1
   708  000714  0E01               	movlw	1
   709  000716  EC05  F00E         	call	_lcdCommand
   710  00071A  0E00               	movlw	0
   711  00071C  0101               	movlb	1	; () banked
   712  00071E  6FD5               	movwf	(main@terminou+1)& (0+255),b
   713  000720  0E00               	movlw	0
   714  000722  6FD4               	movwf	main@terminou& (0+255),b
   715  000724                     l2079:
   716                           
   717                           ; BSR set to: 1
   718                           ;main.c: 73:             if(((tecla) & (1<<(3)))){if((!jogando)&&(aposta>10)){aposta=apo
      +                          sta-10;lcdCommand(0x01);lcdChar((aposta / 1000) % 10 + 48);lcdChar((aposta / 100) % 10 +
      +                           48);lcdChar((aposta / 10) % 10 + 48);lcdChar(aposta % 10 + 48);}}
   719  000724  A7D6               	btfss	main@tecla& (0+255),3,b
   720  000726  EF97  F003         	goto	u2061
   721  00072A  EF99  F003         	goto	u2060
   722  00072E                     u2061:
   723  00072E  EF0F  F004         	goto	l2097
   724  000732                     u2060:
   725  000732                     
   726                           ; BSR set to: 1
   727  000732  51DA               	movf	main@jogando& (0+255),w,b
   728  000734  11DB               	iorwf	(main@jogando+1)& (0+255),w,b
   729  000736  A4D8               	btfss	status,2,c
   730  000738  EFA0  F003         	goto	u2071
   731  00073C  EFA2  F003         	goto	u2070
   732  000740                     u2071:
   733  000740  EF0F  F004         	goto	l2097
   734  000744                     u2070:
   735  000744                     
   736                           ; BSR set to: 1
   737  000744  BFE1               	btfsc	(main@aposta+1)& (0+255),7,b
   738  000746  EFAE  F003         	goto	u2081
   739  00074A  51E1               	movf	(main@aposta+1)& (0+255),w,b
   740  00074C  E109               	bnz	u2080
   741  00074E  0E0B               	movlw	11
   742  000750  5DE0               	subwf	main@aposta& (0+255),w,b
   743  000752  A0D8               	btfss	status,0,c
   744  000754  EFAE  F003         	goto	u2081
   745  000758  EFB0  F003         	goto	u2080
   746  00075C                     u2081:
   747  00075C  EF0F  F004         	goto	l2097
   748  000760                     u2080:
   749  000760                     
   750                           ; BSR set to: 1
   751  000760  0EF6               	movlw	246
   752  000762  25E0               	addwf	main@aposta& (0+255),w,b
   753  000764  6FE0               	movwf	main@aposta& (0+255),b
   754  000766  0EFF               	movlw	255
   755  000768  21E1               	addwfc	(main@aposta+1)& (0+255),w,b
   756  00076A  6FE1               	movwf	(main@aposta+1)& (0+255),b
   757  00076C                     
   758                           ; BSR set to: 1
   759  00076C  0E01               	movlw	1
   760  00076E  EC05  F00E         	call	_lcdCommand
   761  000772  0E03               	movlw	3
   762  000774  6E04               	movwf	(___awdiv@divisor+1)^0,c
   763  000776  0EE8               	movlw	232
   764  000778  6E03               	movwf	___awdiv@divisor^0,c
   765  00077A  C1E0  F001         	movff	main@aposta,___awdiv@dividend
   766  00077E  C1E1  F002         	movff	main@aposta+1,___awdiv@dividend+1
   767  000782  EC8A  F00A         	call	___awdiv	;wreg free
   768  000786  C001  F009         	movff	?___awdiv,___awmod@dividend
   769  00078A  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   770  00078E  0E00               	movlw	0
   771  000790  6E0C               	movwf	(___awmod@divisor+1)^0,c
   772  000792  0E0A               	movlw	10
   773  000794  6E0B               	movwf	___awmod@divisor^0,c
   774  000796  EC9E  F00B         	call	___awmod	;wreg free
   775  00079A  5009               	movf	?___awmod^0,w,c
   776  00079C  0F30               	addlw	48
   777  00079E  ECF6  F00D         	call	_lcdChar
   778  0007A2  0E00               	movlw	0
   779  0007A4  6E04               	movwf	(___awdiv@divisor+1)^0,c
   780  0007A6  0E64               	movlw	100
   781  0007A8  6E03               	movwf	___awdiv@divisor^0,c
   782  0007AA  C1E0  F001         	movff	main@aposta,___awdiv@dividend
   783  0007AE  C1E1  F002         	movff	main@aposta+1,___awdiv@dividend+1
   784  0007B2  EC8A  F00A         	call	___awdiv	;wreg free
   785  0007B6  C001  F009         	movff	?___awdiv,___awmod@dividend
   786  0007BA  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   787  0007BE  0E00               	movlw	0
   788  0007C0  6E0C               	movwf	(___awmod@divisor+1)^0,c
   789  0007C2  0E0A               	movlw	10
   790  0007C4  6E0B               	movwf	___awmod@divisor^0,c
   791  0007C6  EC9E  F00B         	call	___awmod	;wreg free
   792  0007CA  5009               	movf	?___awmod^0,w,c
   793  0007CC  0F30               	addlw	48
   794  0007CE  ECF6  F00D         	call	_lcdChar
   795  0007D2  0E00               	movlw	0
   796  0007D4  6E04               	movwf	(___awdiv@divisor+1)^0,c
   797  0007D6  0E0A               	movlw	10
   798  0007D8  6E03               	movwf	___awdiv@divisor^0,c
   799  0007DA  C1E0  F001         	movff	main@aposta,___awdiv@dividend
   800  0007DE  C1E1  F002         	movff	main@aposta+1,___awdiv@dividend+1
   801  0007E2  EC8A  F00A         	call	___awdiv	;wreg free
   802  0007E6  C001  F009         	movff	?___awdiv,___awmod@dividend
   803  0007EA  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   804  0007EE  0E00               	movlw	0
   805  0007F0  6E0C               	movwf	(___awmod@divisor+1)^0,c
   806  0007F2  0E0A               	movlw	10
   807  0007F4  6E0B               	movwf	___awmod@divisor^0,c
   808  0007F6  EC9E  F00B         	call	___awmod	;wreg free
   809  0007FA  5009               	movf	?___awmod^0,w,c
   810  0007FC  0F30               	addlw	48
   811  0007FE  ECF6  F00D         	call	_lcdChar
   812  000802  C1E0  F009         	movff	main@aposta,___awmod@dividend
   813  000806  C1E1  F00A         	movff	main@aposta+1,___awmod@dividend+1
   814  00080A  0E00               	movlw	0
   815  00080C  6E0C               	movwf	(___awmod@divisor+1)^0,c
   816  00080E  0E0A               	movlw	10
   817  000810  6E0B               	movwf	___awmod@divisor^0,c
   818  000812  EC9E  F00B         	call	___awmod	;wreg free
   819  000816  5009               	movf	?___awmod^0,w,c
   820  000818  0F30               	addlw	48
   821  00081A  ECF6  F00D         	call	_lcdChar
   822  00081E                     l2097:
   823                           
   824                           ;main.c: 74:             if(((tecla) & (1<<(1)))){if((!jogando)&&(aposta+10<=max)){apost
      +                          a=aposta+10;lcdCommand(0x01);lcdChar((aposta / 1000) % 10 + 48);lcdChar((aposta / 100) %
      +                           10 + 48);lcdChar((aposta / 10) % 10 + 48);lcdChar(aposta % 10 + 48);}if(jogando&&soma<2
      +                          1){soma=soma+sacaCarta(valor,namesa,cont);}}
   825  00081E  0101               	movlb	1	; () banked
   826  000820  A3D6               	btfss	main@tecla& (0+255),1,b
   827  000822  EF15  F004         	goto	u2091
   828  000826  EF17  F004         	goto	u2090
   829  00082A                     u2091:
   830  00082A  EFC5  F004         	goto	l2121
   831  00082E                     u2090:
   832  00082E                     
   833                           ; BSR set to: 1
   834  00082E  51DA               	movf	main@jogando& (0+255),w,b
   835  000830  11DB               	iorwf	(main@jogando+1)& (0+255),w,b
   836  000832  A4D8               	btfss	status,2,c
   837  000834  EF1E  F004         	goto	u2101
   838  000838  EF20  F004         	goto	u2100
   839  00083C                     u2101:
   840  00083C  EF94  F004         	goto	l2115
   841  000840                     u2100:
   842  000840                     
   843                           ; BSR set to: 1
   844  000840  0E0A               	movlw	10
   845  000842  25E0               	addwf	main@aposta& (0+255),w,b
   846  000844  6E19               	movwf	??_main^0,c
   847  000846  0E00               	movlw	0
   848  000848  21E1               	addwfc	(main@aposta+1)& (0+255),w,b
   849  00084A  6E1A               	movwf	(??_main+1)^0,c
   850  00084C  5019               	movf	??_main^0,w,c
   851  00084E  5DDC               	subwf	main@max& (0+255),w,b
   852  000850  51DD               	movf	(main@max+1)& (0+255),w,b
   853  000852  0A80               	xorlw	128
   854  000854  6E1B               	movwf	(??_main+2)^0,c
   855  000856  501A               	movf	(??_main+1)^0,w,c
   856  000858  0A80               	xorlw	128
   857  00085A  581B               	subwfb	(??_main+2)^0,w,c
   858  00085C  A0D8               	btfss	status,0,c
   859  00085E  EF33  F004         	goto	u2111
   860  000862  EF35  F004         	goto	u2110
   861  000866                     u2111:
   862  000866  EF94  F004         	goto	l2115
   863  00086A                     u2110:
   864  00086A                     
   865                           ; BSR set to: 1
   866  00086A  0E0A               	movlw	10
   867  00086C  25E0               	addwf	main@aposta& (0+255),w,b
   868  00086E  6FE0               	movwf	main@aposta& (0+255),b
   869  000870  0E00               	movlw	0
   870  000872  21E1               	addwfc	(main@aposta+1)& (0+255),w,b
   871  000874  6FE1               	movwf	(main@aposta+1)& (0+255),b
   872  000876                     
   873                           ; BSR set to: 1
   874  000876  0E01               	movlw	1
   875  000878  EC05  F00E         	call	_lcdCommand
   876  00087C  0E03               	movlw	3
   877  00087E  6E04               	movwf	(___awdiv@divisor+1)^0,c
   878  000880  0EE8               	movlw	232
   879  000882  6E03               	movwf	___awdiv@divisor^0,c
   880  000884  C1E0  F001         	movff	main@aposta,___awdiv@dividend
   881  000888  C1E1  F002         	movff	main@aposta+1,___awdiv@dividend+1
   882  00088C  EC8A  F00A         	call	___awdiv	;wreg free
   883  000890  C001  F009         	movff	?___awdiv,___awmod@dividend
   884  000894  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   885  000898  0E00               	movlw	0
   886  00089A  6E0C               	movwf	(___awmod@divisor+1)^0,c
   887  00089C  0E0A               	movlw	10
   888  00089E  6E0B               	movwf	___awmod@divisor^0,c
   889  0008A0  EC9E  F00B         	call	___awmod	;wreg free
   890  0008A4  5009               	movf	?___awmod^0,w,c
   891  0008A6  0F30               	addlw	48
   892  0008A8  ECF6  F00D         	call	_lcdChar
   893  0008AC  0E00               	movlw	0
   894  0008AE  6E04               	movwf	(___awdiv@divisor+1)^0,c
   895  0008B0  0E64               	movlw	100
   896  0008B2  6E03               	movwf	___awdiv@divisor^0,c
   897  0008B4  C1E0  F001         	movff	main@aposta,___awdiv@dividend
   898  0008B8  C1E1  F002         	movff	main@aposta+1,___awdiv@dividend+1
   899  0008BC  EC8A  F00A         	call	___awdiv	;wreg free
   900  0008C0  C001  F009         	movff	?___awdiv,___awmod@dividend
   901  0008C4  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   902  0008C8  0E00               	movlw	0
   903  0008CA  6E0C               	movwf	(___awmod@divisor+1)^0,c
   904  0008CC  0E0A               	movlw	10
   905  0008CE  6E0B               	movwf	___awmod@divisor^0,c
   906  0008D0  EC9E  F00B         	call	___awmod	;wreg free
   907  0008D4  5009               	movf	?___awmod^0,w,c
   908  0008D6  0F30               	addlw	48
   909  0008D8  ECF6  F00D         	call	_lcdChar
   910  0008DC  0E00               	movlw	0
   911  0008DE  6E04               	movwf	(___awdiv@divisor+1)^0,c
   912  0008E0  0E0A               	movlw	10
   913  0008E2  6E03               	movwf	___awdiv@divisor^0,c
   914  0008E4  C1E0  F001         	movff	main@aposta,___awdiv@dividend
   915  0008E8  C1E1  F002         	movff	main@aposta+1,___awdiv@dividend+1
   916  0008EC  EC8A  F00A         	call	___awdiv	;wreg free
   917  0008F0  C001  F009         	movff	?___awdiv,___awmod@dividend
   918  0008F4  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   919  0008F8  0E00               	movlw	0
   920  0008FA  6E0C               	movwf	(___awmod@divisor+1)^0,c
   921  0008FC  0E0A               	movlw	10
   922  0008FE  6E0B               	movwf	___awmod@divisor^0,c
   923  000900  EC9E  F00B         	call	___awmod	;wreg free
   924  000904  5009               	movf	?___awmod^0,w,c
   925  000906  0F30               	addlw	48
   926  000908  ECF6  F00D         	call	_lcdChar
   927  00090C  C1E0  F009         	movff	main@aposta,___awmod@dividend
   928  000910  C1E1  F00A         	movff	main@aposta+1,___awmod@dividend+1
   929  000914  0E00               	movlw	0
   930  000916  6E0C               	movwf	(___awmod@divisor+1)^0,c
   931  000918  0E0A               	movlw	10
   932  00091A  6E0B               	movwf	___awmod@divisor^0,c
   933  00091C  EC9E  F00B         	call	___awmod	;wreg free
   934  000920  5009               	movf	?___awmod^0,w,c
   935  000922  0F30               	addlw	48
   936  000924  ECF6  F00D         	call	_lcdChar
   937  000928                     l2115:
   938  000928  0101               	movlb	1	; () banked
   939  00092A  51DA               	movf	main@jogando& (0+255),w,b
   940  00092C  11DB               	iorwf	(main@jogando+1)& (0+255),w,b
   941  00092E  B4D8               	btfsc	status,2,c
   942  000930  EF9C  F004         	goto	u2121
   943  000934  EF9E  F004         	goto	u2120
   944  000938                     u2121:
   945  000938  EFC5  F004         	goto	l2121
   946  00093C                     u2120:
   947  00093C                     
   948                           ; BSR set to: 1
   949  00093C  BFDF               	btfsc	(main@soma+1)& (0+255),7,b
   950  00093E  EFAC  F004         	goto	u2130
   951  000942  51DF               	movf	(main@soma+1)& (0+255),w,b
   952  000944  E107               	bnz	u2131
   953  000946  0E15               	movlw	21
   954  000948  5DDE               	subwf	main@soma& (0+255),w,b
   955  00094A  B0D8               	btfsc	status,0,c
   956  00094C  EFAA  F004         	goto	u2131
   957  000950  EFAC  F004         	goto	u2130
   958  000954                     u2131:
   959  000954  EFC5  F004         	goto	l2121
   960  000958                     u2130:
   961  000958                     
   962                           ; BSR set to: 1
   963  000958  0E00               	movlw	low main@valor
   964  00095A  6E0F               	movwf	sacaCarta@valor^0,c
   965  00095C  0E01               	movlw	high main@valor
   966  00095E  6E10               	movwf	(sacaCarta@valor+1)^0,c
   967  000960  0E68               	movlw	low main@namesa
   968  000962  6E11               	movwf	sacaCarta@namesa^0,c
   969  000964  0E01               	movlw	high main@namesa
   970  000966  6E12               	movwf	(sacaCarta@namesa+1)^0,c
   971  000968  C1D0  F013         	movff	main@cont,sacaCarta@cont
   972  00096C  C1D1  F014         	movff	main@cont+1,sacaCarta@cont+1
   973  000970  C1D2  F015         	movff	main@cont+2,sacaCarta@cont+2
   974  000974  C1D3  F016         	movff	main@cont+3,sacaCarta@cont+3
   975  000978  EC54  F008         	call	_sacaCarta	;wreg free
   976  00097C  0101               	movlb	1	; () banked
   977  00097E  51DE               	movf	main@soma& (0+255),w,b
   978  000980  240F               	addwf	?_sacaCarta^0,w,c
   979  000982  6FDE               	movwf	main@soma& (0+255),b
   980  000984  51DF               	movf	(main@soma+1)& (0+255),w,b
   981  000986  2010               	addwfc	(?_sacaCarta+1)^0,w,c
   982  000988  6FDF               	movwf	(main@soma+1)& (0+255),b
   983  00098A                     l2121:
   984                           
   985                           ; BSR set to: 1
   986                           ;main.c: 77:         if(jogando){
   987  00098A  51DA               	movf	main@jogando& (0+255),w,b
   988  00098C  11DB               	iorwf	(main@jogando+1)& (0+255),w,b
   989  00098E  B4D8               	btfsc	status,2,c
   990  000990  EFCC  F004         	goto	u2141
   991  000994  EFCE  F004         	goto	u2140
   992  000998                     u2141:
   993  000998  EF32  F005         	goto	l2125
   994  00099C                     u2140:
   995  00099C                     
   996                           ; BSR set to: 1
   997                           ;main.c: 78:             rgbColor(4);
   998  00099C  0E00               	movlw	0
   999  00099E  6E08               	movwf	(rgbColor@led+1)^0,c
  1000  0009A0  0E04               	movlw	4
  1001  0009A2  6E07               	movwf	rgbColor@led^0,c
  1002  0009A4  EC46  F00B         	call	_rgbColor	;wreg free
  1003                           
  1004                           ;main.c: 79:             lcdCommand(0xC0);
  1005  0009A8  0EC0               	movlw	192
  1006  0009AA  EC05  F00E         	call	_lcdCommand
  1007                           
  1008                           ;main.c: 80:             lcdChar((soma / 1000) % 10 + 48);
  1009  0009AE  0E03               	movlw	3
  1010  0009B0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1011  0009B2  0EE8               	movlw	232
  1012  0009B4  6E03               	movwf	___awdiv@divisor^0,c
  1013  0009B6  C1DE  F001         	movff	main@soma,___awdiv@dividend
  1014  0009BA  C1DF  F002         	movff	main@soma+1,___awdiv@dividend+1
  1015  0009BE  EC8A  F00A         	call	___awdiv	;wreg free
  1016  0009C2  C001  F009         	movff	?___awdiv,___awmod@dividend
  1017  0009C6  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1018  0009CA  0E00               	movlw	0
  1019  0009CC  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1020  0009CE  0E0A               	movlw	10
  1021  0009D0  6E0B               	movwf	___awmod@divisor^0,c
  1022  0009D2  EC9E  F00B         	call	___awmod	;wreg free
  1023  0009D6  5009               	movf	?___awmod^0,w,c
  1024  0009D8  0F30               	addlw	48
  1025  0009DA  ECF6  F00D         	call	_lcdChar
  1026                           
  1027                           ;main.c: 81:             lcdChar((soma / 100) % 10 + 48);
  1028  0009DE  0E00               	movlw	0
  1029  0009E0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1030  0009E2  0E64               	movlw	100
  1031  0009E4  6E03               	movwf	___awdiv@divisor^0,c
  1032  0009E6  C1DE  F001         	movff	main@soma,___awdiv@dividend
  1033  0009EA  C1DF  F002         	movff	main@soma+1,___awdiv@dividend+1
  1034  0009EE  EC8A  F00A         	call	___awdiv	;wreg free
  1035  0009F2  C001  F009         	movff	?___awdiv,___awmod@dividend
  1036  0009F6  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1037  0009FA  0E00               	movlw	0
  1038  0009FC  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1039  0009FE  0E0A               	movlw	10
  1040  000A00  6E0B               	movwf	___awmod@divisor^0,c
  1041  000A02  EC9E  F00B         	call	___awmod	;wreg free
  1042  000A06  5009               	movf	?___awmod^0,w,c
  1043  000A08  0F30               	addlw	48
  1044  000A0A  ECF6  F00D         	call	_lcdChar
  1045                           
  1046                           ;main.c: 82:             lcdChar((soma / 10) % 10 + 48);
  1047  000A0E  0E00               	movlw	0
  1048  000A10  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1049  000A12  0E0A               	movlw	10
  1050  000A14  6E03               	movwf	___awdiv@divisor^0,c
  1051  000A16  C1DE  F001         	movff	main@soma,___awdiv@dividend
  1052  000A1A  C1DF  F002         	movff	main@soma+1,___awdiv@dividend+1
  1053  000A1E  EC8A  F00A         	call	___awdiv	;wreg free
  1054  000A22  C001  F009         	movff	?___awdiv,___awmod@dividend
  1055  000A26  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1056  000A2A  0E00               	movlw	0
  1057  000A2C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1058  000A2E  0E0A               	movlw	10
  1059  000A30  6E0B               	movwf	___awmod@divisor^0,c
  1060  000A32  EC9E  F00B         	call	___awmod	;wreg free
  1061  000A36  5009               	movf	?___awmod^0,w,c
  1062  000A38  0F30               	addlw	48
  1063  000A3A  ECF6  F00D         	call	_lcdChar
  1064                           
  1065                           ;main.c: 83:             lcdChar((soma / 1) % 10 + 48);
  1066  000A3E  C1DE  F009         	movff	main@soma,___awmod@dividend
  1067  000A42  C1DF  F00A         	movff	main@soma+1,___awmod@dividend+1
  1068  000A46  0E00               	movlw	0
  1069  000A48  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1070  000A4A  0E0A               	movlw	10
  1071  000A4C  6E0B               	movwf	___awmod@divisor^0,c
  1072  000A4E  EC9E  F00B         	call	___awmod	;wreg free
  1073  000A52  5009               	movf	?___awmod^0,w,c
  1074  000A54  0F30               	addlw	48
  1075  000A56  ECF6  F00D         	call	_lcdChar
  1076                           
  1077                           ;main.c: 84:             lcdCommand(0x80);
  1078  000A5A  0E80               	movlw	128
  1079  000A5C  EC05  F00E         	call	_lcdCommand
  1080                           
  1081                           ;main.c: 85:         }
  1082  000A60  EFFB  F005         	goto	l2149
  1083  000A64                     l2125:
  1084                           
  1085                           ; BSR set to: 1
  1086                           ;main.c: 87:             lcdCommand(0xC0);
  1087  000A64  0EC0               	movlw	192
  1088  000A66  EC05  F00E         	call	_lcdCommand
  1089                           
  1090                           ;main.c: 88:             lcdChar((max / 1000) % 10 + 48);
  1091  000A6A  0E03               	movlw	3
  1092  000A6C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1093  000A6E  0EE8               	movlw	232
  1094  000A70  6E03               	movwf	___awdiv@divisor^0,c
  1095  000A72  C1DC  F001         	movff	main@max,___awdiv@dividend
  1096  000A76  C1DD  F002         	movff	main@max+1,___awdiv@dividend+1
  1097  000A7A  EC8A  F00A         	call	___awdiv	;wreg free
  1098  000A7E  C001  F009         	movff	?___awdiv,___awmod@dividend
  1099  000A82  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1100  000A86  0E00               	movlw	0
  1101  000A88  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1102  000A8A  0E0A               	movlw	10
  1103  000A8C  6E0B               	movwf	___awmod@divisor^0,c
  1104  000A8E  EC9E  F00B         	call	___awmod	;wreg free
  1105  000A92  5009               	movf	?___awmod^0,w,c
  1106  000A94  0F30               	addlw	48
  1107  000A96  ECF6  F00D         	call	_lcdChar
  1108                           
  1109                           ;main.c: 89:             lcdChar((max / 100) % 10 + 48);
  1110  000A9A  0E00               	movlw	0
  1111  000A9C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1112  000A9E  0E64               	movlw	100
  1113  000AA0  6E03               	movwf	___awdiv@divisor^0,c
  1114  000AA2  C1DC  F001         	movff	main@max,___awdiv@dividend
  1115  000AA6  C1DD  F002         	movff	main@max+1,___awdiv@dividend+1
  1116  000AAA  EC8A  F00A         	call	___awdiv	;wreg free
  1117  000AAE  C001  F009         	movff	?___awdiv,___awmod@dividend
  1118  000AB2  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1119  000AB6  0E00               	movlw	0
  1120  000AB8  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1121  000ABA  0E0A               	movlw	10
  1122  000ABC  6E0B               	movwf	___awmod@divisor^0,c
  1123  000ABE  EC9E  F00B         	call	___awmod	;wreg free
  1124  000AC2  5009               	movf	?___awmod^0,w,c
  1125  000AC4  0F30               	addlw	48
  1126  000AC6  ECF6  F00D         	call	_lcdChar
  1127                           
  1128                           ;main.c: 90:             lcdChar((max / 10) % 10 + 48);
  1129  000ACA  0E00               	movlw	0
  1130  000ACC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1131  000ACE  0E0A               	movlw	10
  1132  000AD0  6E03               	movwf	___awdiv@divisor^0,c
  1133  000AD2  C1DC  F001         	movff	main@max,___awdiv@dividend
  1134  000AD6  C1DD  F002         	movff	main@max+1,___awdiv@dividend+1
  1135  000ADA  EC8A  F00A         	call	___awdiv	;wreg free
  1136  000ADE  C001  F009         	movff	?___awdiv,___awmod@dividend
  1137  000AE2  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1138  000AE6  0E00               	movlw	0
  1139  000AE8  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1140  000AEA  0E0A               	movlw	10
  1141  000AEC  6E0B               	movwf	___awmod@divisor^0,c
  1142  000AEE  EC9E  F00B         	call	___awmod	;wreg free
  1143  000AF2  5009               	movf	?___awmod^0,w,c
  1144  000AF4  0F30               	addlw	48
  1145  000AF6  ECF6  F00D         	call	_lcdChar
  1146                           
  1147                           ;main.c: 91:             lcdChar((max / 1) % 10 + 48);
  1148  000AFA  C1DC  F009         	movff	main@max,___awmod@dividend
  1149  000AFE  C1DD  F00A         	movff	main@max+1,___awmod@dividend+1
  1150  000B02  0E00               	movlw	0
  1151  000B04  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1152  000B06  0E0A               	movlw	10
  1153  000B08  6E0B               	movwf	___awmod@divisor^0,c
  1154  000B0A  EC9E  F00B         	call	___awmod	;wreg free
  1155  000B0E  5009               	movf	?___awmod^0,w,c
  1156  000B10  0F30               	addlw	48
  1157  000B12  ECF6  F00D         	call	_lcdChar
  1158                           
  1159                           ;main.c: 92:             lcdCommand(0x80);
  1160  000B16  0E80               	movlw	128
  1161  000B18  EC05  F00E         	call	_lcdCommand
  1162  000B1C                     
  1163                           ;main.c: 93:             mesaReset(namesa);
  1164  000B1C  0E68               	movlw	low main@namesa
  1165  000B1E  6E01               	movwf	mesaReset@namesa^0,c
  1166  000B20  0E01               	movlw	high main@namesa
  1167  000B22  6E02               	movwf	(mesaReset@namesa+1)^0,c
  1168  000B24  ECC2  F00C         	call	_mesaReset	;wreg free
  1169  000B28                     
  1170                           ;main.c: 94:             if(terminou){
  1171  000B28  0101               	movlb	1	; () banked
  1172  000B2A  51D4               	movf	main@terminou& (0+255),w,b
  1173  000B2C  11D5               	iorwf	(main@terminou+1)& (0+255),w,b
  1174  000B2E  B4D8               	btfsc	status,2,c
  1175  000B30  EF9C  F005         	goto	u2151
  1176  000B34  EF9E  F005         	goto	u2150
  1177  000B38                     u2151:
  1178  000B38  EFFB  F005         	goto	l2149
  1179  000B3C                     u2150:
  1180  000B3C                     
  1181                           ; BSR set to: 1
  1182                           ;main.c: 95:                 if((soma>21)||(soma<18)){
  1183  000B3C  BFDF               	btfsc	(main@soma+1)& (0+255),7,b
  1184  000B3E  EFAC  F005         	goto	u2160
  1185  000B42  51DF               	movf	(main@soma+1)& (0+255),w,b
  1186  000B44  E107               	bnz	u2161
  1187  000B46  0E16               	movlw	22
  1188  000B48  5DDE               	subwf	main@soma& (0+255),w,b
  1189  000B4A  B0D8               	btfsc	status,0,c
  1190  000B4C  EFAA  F005         	goto	u2161
  1191  000B50  EFAC  F005         	goto	u2160
  1192  000B54                     u2161:
  1193  000B54  EFBA  F005         	goto	l2135
  1194  000B58                     u2160:
  1195  000B58                     
  1196                           ; BSR set to: 1
  1197  000B58  BFDF               	btfsc	(main@soma+1)& (0+255),7,b
  1198  000B5A  EFBA  F005         	goto	u2170
  1199  000B5E  51DF               	movf	(main@soma+1)& (0+255),w,b
  1200  000B60  E107               	bnz	u2171
  1201  000B62  0E12               	movlw	18
  1202  000B64  5DDE               	subwf	main@soma& (0+255),w,b
  1203  000B66  B0D8               	btfsc	status,0,c
  1204  000B68  EFB8  F005         	goto	u2171
  1205  000B6C  EFBA  F005         	goto	u2170
  1206  000B70                     u2171:
  1207  000B70  EFC9  F005         	goto	l2139
  1208  000B74                     u2170:
  1209  000B74                     l2135:
  1210                           
  1211                           ; BSR set to: 1
  1212                           ;main.c: 96:                     rgbColor(1);
  1213  000B74  0E00               	movlw	0
  1214  000B76  6E08               	movwf	(rgbColor@led+1)^0,c
  1215  000B78  0E01               	movlw	1
  1216  000B7A  6E07               	movwf	rgbColor@led^0,c
  1217  000B7C  EC46  F00B         	call	_rgbColor	;wreg free
  1218  000B80                     
  1219                           ;main.c: 97:                     max=max-aposta;
  1220  000B80  0101               	movlb	1	; () banked
  1221  000B82  51E0               	movf	main@aposta& (0+255),w,b
  1222  000B84  5DDC               	subwf	main@max& (0+255),w,b
  1223  000B86  6FDC               	movwf	main@max& (0+255),b
  1224  000B88  51E1               	movf	(main@aposta+1)& (0+255),w,b
  1225  000B8A  59DD               	subwfb	(main@max+1)& (0+255),w,b
  1226  000B8C  6FDD               	movwf	(main@max+1)& (0+255),b
  1227                           
  1228                           ;main.c: 98:                 }else{
  1229  000B8E  EFEE  F005         	goto	l2143
  1230  000B92                     l2139:
  1231                           
  1232                           ; BSR set to: 1
  1233                           ;main.c: 99:                     max=max+2*aposta*((soma/21)+1);
  1234  000B92  0E00               	movlw	0
  1235  000B94  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1236  000B96  0E15               	movlw	21
  1237  000B98  6E03               	movwf	___awdiv@divisor^0,c
  1238  000B9A  C1DE  F001         	movff	main@soma,___awdiv@dividend
  1239  000B9E  C1DF  F002         	movff	main@soma+1,___awdiv@dividend+1
  1240  000BA2  EC8A  F00A         	call	___awdiv	;wreg free
  1241  000BA6  0E01               	movlw	1
  1242  000BA8  2401               	addwf	?___awdiv^0,w,c
  1243  000BAA  6E09               	movwf	___wmul@multiplier^0,c
  1244  000BAC  0E00               	movlw	0
  1245  000BAE  2002               	addwfc	(?___awdiv+1)^0,w,c
  1246  000BB0  6E0A               	movwf	(___wmul@multiplier+1)^0,c
  1247  000BB2  90D8               	bcf	status,0,c
  1248  000BB4  0101               	movlb	1	; () banked
  1249  000BB6  35E0               	rlcf	main@aposta& (0+255),w,b
  1250  000BB8  6E0B               	movwf	___wmul@multiplicand^0,c
  1251  000BBA  35E1               	rlcf	(main@aposta+1)& (0+255),w,b
  1252  000BBC  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
  1253  000BBE  ECD2  F00D         	call	___wmul	;wreg free
  1254  000BC2  0101               	movlb	1	; () banked
  1255  000BC4  51DC               	movf	main@max& (0+255),w,b
  1256  000BC6  2409               	addwf	?___wmul^0,w,c
  1257  000BC8  6FDC               	movwf	main@max& (0+255),b
  1258  000BCA  51DD               	movf	(main@max+1)& (0+255),w,b
  1259  000BCC  200A               	addwfc	(?___wmul+1)^0,w,c
  1260  000BCE  6FDD               	movwf	(main@max+1)& (0+255),b
  1261  000BD0                     
  1262                           ; BSR set to: 1
  1263                           ;main.c: 100:                     rgbColor(2);
  1264  000BD0  0E00               	movlw	0
  1265  000BD2  6E08               	movwf	(rgbColor@led+1)^0,c
  1266  000BD4  0E02               	movlw	2
  1267  000BD6  6E07               	movwf	rgbColor@led^0,c
  1268  000BD8  EC46  F00B         	call	_rgbColor	;wreg free
  1269  000BDC                     l2143:
  1270                           
  1271                           ;main.c: 102:                 aposta=0;
  1272  000BDC  0E00               	movlw	0
  1273  000BDE  0101               	movlb	1	; () banked
  1274  000BE0  6FE1               	movwf	(main@aposta+1)& (0+255),b
  1275  000BE2  0E00               	movlw	0
  1276  000BE4  6FE0               	movwf	main@aposta& (0+255),b
  1277  000BE6                     
  1278                           ; BSR set to: 1
  1279                           ;main.c: 103:                 soma=0;
  1280  000BE6  0E00               	movlw	0
  1281  000BE8  6FDF               	movwf	(main@soma+1)& (0+255),b
  1282  000BEA  0E00               	movlw	0
  1283  000BEC  6FDE               	movwf	main@soma& (0+255),b
  1284  000BEE                     
  1285                           ; BSR set to: 1
  1286                           ;main.c: 104:                 terminou=0;
  1287  000BEE  0E00               	movlw	0
  1288  000BF0  6FD5               	movwf	(main@terminou+1)& (0+255),b
  1289  000BF2  0E00               	movlw	0
  1290  000BF4  6FD4               	movwf	main@terminou& (0+255),b
  1291  000BF6                     l2149:
  1292                           
  1293                           ;main.c: 107:         cont++;
  1294  000BF6  0E01               	movlw	1
  1295  000BF8  0101               	movlb	1	; () banked
  1296  000BFA  27D0               	addwf	main@cont& (0+255),f,b
  1297  000BFC  0E00               	movlw	0
  1298  000BFE  23D1               	addwfc	(main@cont+1)& (0+255),f,b
  1299  000C00  23D2               	addwfc	(main@cont+2)& (0+255),f,b
  1300  000C02  23D3               	addwfc	(main@cont+3)& (0+255),f,b
  1301                           
  1302                           ;main.c: 108:     }
  1303  000C04  EF42  F003         	goto	l2057
  1304  000C08  EF00  F000         	goto	start
  1305  000C0C                     __end_of_main:
  1306                           	callstack 0
  1307                           
  1308 ;; *************** function _timerInit *****************
  1309 ;; Defined at:
  1310 ;;		line 55 in file "timer.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, status,2, status,0
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1324 ;;      Params:         0       0       0       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0       0       0
  1326 ;;      Temps:          0       0       0       0       0       0       0
  1327 ;;      Totals:         0       0       0       0       0       0       0
  1328 ;;Total ram usage:        0 bytes
  1329 ;; Hardware stack levels used: 1
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text1
  1338  001C42                     __ptext1:
  1339                           	callstack 0
  1340  001C42                     _timerInit:
  1341                           	callstack 30
  1342  001C42                     
  1343                           ;timer.c: 57:  T0CON = 0b00001000;
  1344  001C42  0E08               	movlw	8
  1345  001C44  6ED5               	movwf	213,c	;volatile
  1346  001C46                     
  1347                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
  1348  001C46  8ED5               	bsf	213,7,c	;volatile
  1349  001C48  0012               	return		;funcret
  1350  001C4A                     __end_of_timerInit:
  1351                           	callstack 0
  1352                           
  1353 ;; *************** function _sacaCarta *****************
  1354 ;; Defined at:
  1355 ;;		line 31 in file "main.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  valor           2   14[COMRAM] PTR int 
  1358 ;;		 -> main@valor(104), 
  1359 ;;  namesa          2   16[COMRAM] PTR int 
  1360 ;;		 -> main@namesa(104), 
  1361 ;;  cont            4   18[COMRAM] unsigned long 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;		None
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  2   14[COMRAM] int 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1373 ;;      Params:         8       0       0       0       0       0       0
  1374 ;;      Locals:         0       0       0       0       0       0       0
  1375 ;;      Temps:          2       0       0       0       0       0       0
  1376 ;;      Totals:        10       0       0       0       0       0       0
  1377 ;;Total ram usage:       10 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 5
  1380 ;; This function calls:
  1381 ;;		___llmod
  1382 ;;		_lcdChar
  1383 ;;		_timerReset
  1384 ;;		_timerWait
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text2
  1391  0010A8                     __ptext2:
  1392                           	callstack 0
  1393  0010A8                     _sacaCarta:
  1394                           	callstack 25
  1395  0010A8                     
  1396                           ;main.c: 31: int sacaCarta(int *valor,int *namesa,unsigned long int cont);main.c: 32: {;
      +                          main.c: 33:     while(namesa[cont%52]){
  1397  0010A8  EF71  F008         	goto	l1855
  1398  0010AC                     l1851:
  1399                           
  1400                           ;main.c: 34:         timerReset(2*cont%52);
  1401  0010AC  90D8               	bcf	status,0,c
  1402  0010AE  3413               	rlcf	sacaCarta@cont^0,w,c
  1403  0010B0  6E01               	movwf	___llmod@dividend^0,c
  1404  0010B2  3414               	rlcf	(sacaCarta@cont+1)^0,w,c
  1405  0010B4  6E02               	movwf	(___llmod@dividend+1)^0,c
  1406  0010B6  3415               	rlcf	(sacaCarta@cont+2)^0,w,c
  1407  0010B8  6E03               	movwf	(___llmod@dividend+2)^0,c
  1408  0010BA  3416               	rlcf	(sacaCarta@cont+3)^0,w,c
  1409  0010BC  6E04               	movwf	(___llmod@dividend+3)^0,c
  1410  0010BE  0E34               	movlw	52
  1411  0010C0  6E05               	movwf	___llmod@divisor^0,c
  1412  0010C2  0E00               	movlw	0
  1413  0010C4  6E06               	movwf	(___llmod@divisor+1)^0,c
  1414  0010C6  0E00               	movlw	0
  1415  0010C8  6E07               	movwf	(___llmod@divisor+2)^0,c
  1416  0010CA  0E00               	movlw	0
  1417  0010CC  6E08               	movwf	(___llmod@divisor+3)^0,c
  1418  0010CE  ECF6  F00B         	call	___llmod	;wreg free
  1419  0010D2  C001  F00A         	movff	?___llmod,timerReset@tempo
  1420  0010D6  C002  F00B         	movff	?___llmod+1,timerReset@tempo+1
  1421  0010DA  ECE5  F00D         	call	_timerReset	;wreg free
  1422  0010DE                     
  1423                           ;main.c: 35:         timerWait();
  1424  0010DE  EC14  F00E         	call	_timerWait	;wreg free
  1425  0010E2                     l1855:
  1426                           
  1427                           ;main.c: 33:     while(namesa[cont%52]){
  1428  0010E2  C013  F001         	movff	sacaCarta@cont,___llmod@dividend
  1429  0010E6  C014  F002         	movff	sacaCarta@cont+1,___llmod@dividend+1
  1430  0010EA  C015  F003         	movff	sacaCarta@cont+2,___llmod@dividend+2
  1431  0010EE  C016  F004         	movff	sacaCarta@cont+3,___llmod@dividend+3
  1432  0010F2  0E34               	movlw	52
  1433  0010F4  6E05               	movwf	___llmod@divisor^0,c
  1434  0010F6  0E00               	movlw	0
  1435  0010F8  6E06               	movwf	(___llmod@divisor+1)^0,c
  1436  0010FA  0E00               	movlw	0
  1437  0010FC  6E07               	movwf	(___llmod@divisor+2)^0,c
  1438  0010FE  0E00               	movlw	0
  1439  001100  6E08               	movwf	(___llmod@divisor+3)^0,c
  1440  001102  ECF6  F00B         	call	___llmod	;wreg free
  1441  001106  90D8               	bcf	status,0,c
  1442  001108  3601               	rlcf	?___llmod^0,f,c
  1443  00110A  3602               	rlcf	(?___llmod+1)^0,f,c
  1444  00110C  5001               	movf	?___llmod^0,w,c
  1445  00110E  2411               	addwf	sacaCarta@namesa^0,w,c
  1446  001110  6ED9               	movwf	fsr2l,c
  1447  001112  5002               	movf	(?___llmod+1)^0,w,c
  1448  001114  2012               	addwfc	(sacaCarta@namesa+1)^0,w,c
  1449  001116  6EDA               	movwf	fsr2h,c
  1450  001118  50DE               	movf	postinc2,w,c
  1451  00111A  10DE               	iorwf	postinc2,w,c
  1452  00111C  A4D8               	btfss	status,2,c
  1453  00111E  EF93  F008         	goto	u1751
  1454  001122  EF95  F008         	goto	u1750
  1455  001126                     u1751:
  1456  001126  EF56  F008         	goto	l1851
  1457  00112A                     u1750:
  1458  00112A                     
  1459                           ;main.c: 37:     if(valor[cont%52]==1){
  1460  00112A  C013  F001         	movff	sacaCarta@cont,___llmod@dividend
  1461  00112E  C014  F002         	movff	sacaCarta@cont+1,___llmod@dividend+1
  1462  001132  C015  F003         	movff	sacaCarta@cont+2,___llmod@dividend+2
  1463  001136  C016  F004         	movff	sacaCarta@cont+3,___llmod@dividend+3
  1464  00113A  0E34               	movlw	52
  1465  00113C  6E05               	movwf	___llmod@divisor^0,c
  1466  00113E  0E00               	movlw	0
  1467  001140  6E06               	movwf	(___llmod@divisor+1)^0,c
  1468  001142  0E00               	movlw	0
  1469  001144  6E07               	movwf	(___llmod@divisor+2)^0,c
  1470  001146  0E00               	movlw	0
  1471  001148  6E08               	movwf	(___llmod@divisor+3)^0,c
  1472  00114A  ECF6  F00B         	call	___llmod	;wreg free
  1473  00114E  90D8               	bcf	status,0,c
  1474  001150  3601               	rlcf	?___llmod^0,f,c
  1475  001152  3602               	rlcf	(?___llmod+1)^0,f,c
  1476  001154  5001               	movf	?___llmod^0,w,c
  1477  001156  240F               	addwf	sacaCarta@valor^0,w,c
  1478  001158  6ED9               	movwf	fsr2l,c
  1479  00115A  5002               	movf	(?___llmod+1)^0,w,c
  1480  00115C  2010               	addwfc	(sacaCarta@valor+1)^0,w,c
  1481  00115E  6EDA               	movwf	fsr2h,c
  1482  001160  04DE               	decf	postinc2,w,c
  1483  001162  10DE               	iorwf	postinc2,w,c
  1484  001164  A4D8               	btfss	status,2,c
  1485  001166  EFB7  F008         	goto	u1761
  1486  00116A  EFB9  F008         	goto	u1760
  1487  00116E                     u1761:
  1488  00116E  EFC5  F008         	goto	l1865
  1489  001172                     u1760:
  1490  001172                     
  1491                           ;main.c: 38:         lcdChar(49);
  1492  001172  0E31               	movlw	49
  1493  001174  ECF6  F00D         	call	_lcdChar
  1494                           
  1495                           ;main.c: 39:         lcdChar(48);
  1496  001178  0E30               	movlw	48
  1497  00117A  ECF6  F00D         	call	_lcdChar
  1498  00117E                     l1861:
  1499                           
  1500                           ;main.c: 40:         return 10;
  1501  00117E  0E00               	movlw	0
  1502  001180  6E10               	movwf	(?_sacaCarta+1)^0,c
  1503  001182  0E0A               	movlw	10
  1504  001184  6E0F               	movwf	?_sacaCarta^0,c
  1505  001186  EF39  F009         	goto	l34
  1506  00118A                     l1865:
  1507                           
  1508                           ;main.c: 42:     if(valor[cont%52]>=10){
  1509  00118A  C013  F001         	movff	sacaCarta@cont,___llmod@dividend
  1510  00118E  C014  F002         	movff	sacaCarta@cont+1,___llmod@dividend+1
  1511  001192  C015  F003         	movff	sacaCarta@cont+2,___llmod@dividend+2
  1512  001196  C016  F004         	movff	sacaCarta@cont+3,___llmod@dividend+3
  1513  00119A  0E34               	movlw	52
  1514  00119C  6E05               	movwf	___llmod@divisor^0,c
  1515  00119E  0E00               	movlw	0
  1516  0011A0  6E06               	movwf	(___llmod@divisor+1)^0,c
  1517  0011A2  0E00               	movlw	0
  1518  0011A4  6E07               	movwf	(___llmod@divisor+2)^0,c
  1519  0011A6  0E00               	movlw	0
  1520  0011A8  6E08               	movwf	(___llmod@divisor+3)^0,c
  1521  0011AA  ECF6  F00B         	call	___llmod	;wreg free
  1522  0011AE  90D8               	bcf	status,0,c
  1523  0011B0  3601               	rlcf	?___llmod^0,f,c
  1524  0011B2  3602               	rlcf	(?___llmod+1)^0,f,c
  1525  0011B4  5001               	movf	?___llmod^0,w,c
  1526  0011B6  240F               	addwf	sacaCarta@valor^0,w,c
  1527  0011B8  6ED9               	movwf	fsr2l,c
  1528  0011BA  5002               	movf	(?___llmod+1)^0,w,c
  1529  0011BC  2010               	addwfc	(sacaCarta@valor+1)^0,w,c
  1530  0011BE  6EDA               	movwf	fsr2h,c
  1531  0011C0  0E01               	movlw	1
  1532  0011C2  BEDB               	btfsc	plusw2,7,c
  1533  0011C4  EFEE  F008         	goto	u1771
  1534  0011C8  0E01               	movlw	1
  1535  0011CA  50DB               	movf	plusw2,w,c
  1536  0011CC  E109               	bnz	u1770
  1537  0011CE  0E0A               	movlw	10
  1538  0011D0  5CDE               	subwf	postinc2,w,c
  1539  0011D2  A0D8               	btfss	status,0,c
  1540  0011D4  EFEE  F008         	goto	u1771
  1541  0011D8  EFF0  F008         	goto	u1770
  1542  0011DC                     u1771:
  1543  0011DC  EFF8  F008         	goto	l1873
  1544  0011E0                     u1770:
  1545  0011E0                     
  1546                           ;main.c: 43:         lcdChar(49);
  1547  0011E0  0E31               	movlw	49
  1548  0011E2  ECF6  F00D         	call	_lcdChar
  1549                           
  1550                           ;main.c: 44:         lcdChar(48);
  1551  0011E6  0E30               	movlw	48
  1552  0011E8  ECF6  F00D         	call	_lcdChar
  1553  0011EC  EFBF  F008         	goto	l1861
  1554  0011F0                     l1873:
  1555                           
  1556                           ;main.c: 47:     lcdChar(48);
  1557  0011F0  0E30               	movlw	48
  1558  0011F2  ECF6  F00D         	call	_lcdChar
  1559  0011F6                     
  1560                           ;main.c: 48:     lcdChar(valor[cont%52]+48);
  1561  0011F6  C013  F001         	movff	sacaCarta@cont,___llmod@dividend
  1562  0011FA  C014  F002         	movff	sacaCarta@cont+1,___llmod@dividend+1
  1563  0011FE  C015  F003         	movff	sacaCarta@cont+2,___llmod@dividend+2
  1564  001202  C016  F004         	movff	sacaCarta@cont+3,___llmod@dividend+3
  1565  001206  0E34               	movlw	52
  1566  001208  6E05               	movwf	___llmod@divisor^0,c
  1567  00120A  0E00               	movlw	0
  1568  00120C  6E06               	movwf	(___llmod@divisor+1)^0,c
  1569  00120E  0E00               	movlw	0
  1570  001210  6E07               	movwf	(___llmod@divisor+2)^0,c
  1571  001212  0E00               	movlw	0
  1572  001214  6E08               	movwf	(___llmod@divisor+3)^0,c
  1573  001216  ECF6  F00B         	call	___llmod	;wreg free
  1574  00121A  90D8               	bcf	status,0,c
  1575  00121C  3601               	rlcf	?___llmod^0,f,c
  1576  00121E  3602               	rlcf	(?___llmod+1)^0,f,c
  1577  001220  5001               	movf	?___llmod^0,w,c
  1578  001222  240F               	addwf	sacaCarta@valor^0,w,c
  1579  001224  6ED9               	movwf	fsr2l,c
  1580  001226  5002               	movf	(?___llmod+1)^0,w,c
  1581  001228  2010               	addwfc	(sacaCarta@valor+1)^0,w,c
  1582  00122A  6EDA               	movwf	fsr2h,c
  1583  00122C  50DF               	movf	indf2,w,c
  1584  00122E  0F30               	addlw	48
  1585  001230  ECF6  F00D         	call	_lcdChar
  1586  001234                     
  1587                           ;main.c: 49:     return valor[cont%52];
  1588  001234  C013  F001         	movff	sacaCarta@cont,___llmod@dividend
  1589  001238  C014  F002         	movff	sacaCarta@cont+1,___llmod@dividend+1
  1590  00123C  C015  F003         	movff	sacaCarta@cont+2,___llmod@dividend+2
  1591  001240  C016  F004         	movff	sacaCarta@cont+3,___llmod@dividend+3
  1592  001244  0E34               	movlw	52
  1593  001246  6E05               	movwf	___llmod@divisor^0,c
  1594  001248  0E00               	movlw	0
  1595  00124A  6E06               	movwf	(___llmod@divisor+1)^0,c
  1596  00124C  0E00               	movlw	0
  1597  00124E  6E07               	movwf	(___llmod@divisor+2)^0,c
  1598  001250  0E00               	movlw	0
  1599  001252  6E08               	movwf	(___llmod@divisor+3)^0,c
  1600  001254  ECF6  F00B         	call	___llmod	;wreg free
  1601  001258  90D8               	bcf	status,0,c
  1602  00125A  3601               	rlcf	?___llmod^0,f,c
  1603  00125C  3602               	rlcf	(?___llmod+1)^0,f,c
  1604  00125E  5001               	movf	?___llmod^0,w,c
  1605  001260  240F               	addwf	sacaCarta@valor^0,w,c
  1606  001262  6ED9               	movwf	fsr2l,c
  1607  001264  5002               	movf	(?___llmod+1)^0,w,c
  1608  001266  2010               	addwfc	(sacaCarta@valor+1)^0,w,c
  1609  001268  6EDA               	movwf	fsr2h,c
  1610  00126A  CFDE F00F          	movff	postinc2,?_sacaCarta
  1611  00126E  CFDD F010          	movff	postdec2,?_sacaCarta+1
  1612  001272                     l34:
  1613  001272  0012               	return		;funcret
  1614  001274                     __end_of_sacaCarta:
  1615                           	callstack 0
  1616                           
  1617 ;; *************** function _timerWait *****************
  1618 ;; Defined at:
  1619 ;;		line 31 in file "timer.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		None
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1633 ;;      Params:         0       0       0       0       0       0       0
  1634 ;;      Locals:         0       0       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0
  1636 ;;      Totals:         0       0       0       0       0       0       0
  1637 ;;Total ram usage:        0 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_sacaCarta
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text3
  1647  001C28                     __ptext3:
  1648                           	callstack 0
  1649  001C28                     _timerWait:
  1650                           	callstack 29
  1651  001C28                     l332:
  1652  001C28  A4F2               	btfss	242,2,c	;volatile
  1653  001C2A  EF19  F00E         	goto	u1601
  1654  001C2E  EF1B  F00E         	goto	u1600
  1655  001C32                     u1601:
  1656  001C32  EF14  F00E         	goto	l332
  1657  001C36                     u1600:
  1658  001C36  0012               	return		;funcret
  1659  001C38                     __end_of_timerWait:
  1660                           	callstack 0
  1661                           
  1662 ;; *************** function _timerReset *****************
  1663 ;; Defined at:
  1664 ;;		line 37 in file "timer.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  tempo           2    9[COMRAM] unsigned int 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  ciclos          2   11[COMRAM] unsigned int 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1678 ;;      Params:         2       0       0       0       0       0       0
  1679 ;;      Locals:         2       0       0       0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0       0       0
  1681 ;;      Totals:         4       0       0       0       0       0       0
  1682 ;;Total ram usage:        4 bytes
  1683 ;; Hardware stack levels used: 1
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_sacaCarta
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           	psect	text4
  1692  001BCA                     __ptext4:
  1693                           	callstack 0
  1694  001BCA                     _timerReset:
  1695                           	callstack 29
  1696  001BCA                     
  1697                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 39:     unsign
      +                          ed int ciclos;;timer.c: 42:     ciclos = tempo * 2;
  1698  001BCA  90D8               	bcf	status,0,c
  1699  001BCC  340A               	rlcf	timerReset@tempo^0,w,c
  1700  001BCE  6E0C               	movwf	timerReset@ciclos^0,c
  1701  001BD0  340B               	rlcf	(timerReset@tempo+1)^0,w,c
  1702  001BD2  6E0D               	movwf	(timerReset@ciclos+1)^0,c
  1703  001BD4                     
  1704                           ;timer.c: 44:  ciclos = 65535 - ciclos;
  1705  001BD4  1E0C               	comf	timerReset@ciclos^0,f,c
  1706  001BD6  1E0D               	comf	(timerReset@ciclos+1)^0,f,c
  1707  001BD8                     
  1708                           ;timer.c: 47:     ciclos -=50;
  1709  001BD8  0E32               	movlw	50
  1710  001BDA  5E0C               	subwf	timerReset@ciclos^0,f,c
  1711  001BDC  0E00               	movlw	0
  1712  001BDE  5A0D               	subwfb	(timerReset@ciclos+1)^0,f,c
  1713  001BE0                     
  1714                           ;timer.c: 49:  TMR0H = (ciclos >> 8);
  1715  001BE0  500D               	movf	(timerReset@ciclos+1)^0,w,c
  1716  001BE2  6ED7               	movwf	215,c	;volatile
  1717  001BE4                     
  1718                           ;timer.c: 50:  TMR0L = (ciclos & 0x00FF);
  1719  001BE4  C00C  FFD6         	movff	timerReset@ciclos,4054	;volatile
  1720  001BE8                     
  1721                           ;timer.c: 52:  ((INTCON) &= ~(1<<(2)));
  1722  001BE8  94F2               	bcf	242,2,c	;volatile
  1723  001BEA  0012               	return		;funcret
  1724  001BEC                     __end_of_timerReset:
  1725                           	callstack 0
  1726                           
  1727 ;; *************** function _lcdChar *****************
  1728 ;; Defined at:
  1729 ;;		line 52 in file "lcd.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;  value           1    wreg     unsigned char 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  value           1   13[COMRAM] unsigned char 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, status,0, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1743 ;;      Params:         0       0       0       0       0       0       0
  1744 ;;      Locals:         1       0       0       0       0       0       0
  1745 ;;      Temps:          0       0       0       0       0       0       0
  1746 ;;      Totals:         1       0       0       0       0       0       0
  1747 ;;Total ram usage:        1 bytes
  1748 ;; Hardware stack levels used: 1
  1749 ;; Hardware stack levels required when called: 4
  1750 ;; This function calls:
  1751 ;;		_delayMicro
  1752 ;;		_pushByte
  1753 ;; This function is called by:
  1754 ;;		_sacaCarta
  1755 ;;		_main
  1756 ;;		_lcdString
  1757 ;;		_lcdNumber
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	text5
  1762  001BEC                     __ptext5:
  1763                           	callstack 0
  1764  001BEC                     _lcdChar:
  1765                           	callstack 25
  1766                           
  1767                           ;incstack = 0
  1768                           ;lcdChar@value stored from wreg
  1769  001BEC  6E0E               	movwf	lcdChar@value^0,c
  1770  001BEE                     
  1771                           ;lcd.c: 53:  pushByte(value, 1);
  1772  001BEE  0E00               	movlw	0
  1773  001BF0  6E0B               	movwf	(pushByte@rs+1)^0,c
  1774  001BF2  0E01               	movlw	1
  1775  001BF4  6E0A               	movwf	pushByte@rs^0,c
  1776  001BF6  500E               	movf	lcdChar@value^0,w,c
  1777  001BF8  EC6E  F00C         	call	_pushByte
  1778  001BFC                     
  1779                           ;lcd.c: 54:  delayMicro(80);
  1780  001BFC  0E00               	movlw	0
  1781  001BFE  6E02               	movwf	(delayMicro@a+1)^0,c
  1782  001C00  0E50               	movlw	80
  1783  001C02  6E01               	movwf	delayMicro@a^0,c
  1784  001C04  EC25  F00E         	call	_delayMicro	;wreg free
  1785  001C08  0012               	return		;funcret
  1786  001C0A                     __end_of_lcdChar:
  1787                           	callstack 0
  1788                           
  1789 ;; *************** function ___llmod *****************
  1790 ;; Defined at:
  1791 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;  dividend        4    0[COMRAM] unsigned long 
  1794 ;;  divisor         4    4[COMRAM] unsigned long 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  counter         1    8[COMRAM] unsigned char 
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  4    0[COMRAM] unsigned long 
  1799 ;; Registers used:
  1800 ;;		wreg, status,2, status,0
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1806 ;;      Params:         8       0       0       0       0       0       0
  1807 ;;      Locals:         1       0       0       0       0       0       0
  1808 ;;      Temps:          0       0       0       0       0       0       0
  1809 ;;      Totals:         9       0       0       0       0       0       0
  1810 ;;Total ram usage:        9 bytes
  1811 ;; Hardware stack levels used: 1
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_sacaCarta
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text6
  1820  0017EC                     __ptext6:
  1821                           	callstack 0
  1822  0017EC                     ___llmod:
  1823                           	callstack 29
  1824  0017EC  5005               	movf	___llmod@divisor^0,w,c
  1825  0017EE  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  1826  0017F0  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  1827  0017F2  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  1828  0017F4  B4D8               	btfsc	status,2,c
  1829  0017F6  EFFF  F00B         	goto	u1711
  1830  0017FA  EF01  F00C         	goto	u1710
  1831  0017FE                     u1711:
  1832  0017FE  EF31  F00C         	goto	l764
  1833  001802                     u1710:
  1834  001802  0E01               	movlw	1
  1835  001804  6E09               	movwf	___llmod@counter^0,c
  1836  001806  EF0B  F00C         	goto	l1827
  1837  00180A                     l1825:
  1838  00180A  90D8               	bcf	status,0,c
  1839  00180C  3605               	rlcf	___llmod@divisor^0,f,c
  1840  00180E  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  1841  001810  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  1842  001812  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  1843  001814  2A09               	incf	___llmod@counter^0,f,c
  1844  001816                     l1827:
  1845  001816  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  1846  001818  EF10  F00C         	goto	u1721
  1847  00181C  EF12  F00C         	goto	u1720
  1848  001820                     u1721:
  1849  001820  EF05  F00C         	goto	l1825
  1850  001824                     u1720:
  1851  001824                     l1829:
  1852  001824  5005               	movf	___llmod@divisor^0,w,c
  1853  001826  5C01               	subwf	___llmod@dividend^0,w,c
  1854  001828  5006               	movf	(___llmod@divisor+1)^0,w,c
  1855  00182A  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  1856  00182C  5007               	movf	(___llmod@divisor+2)^0,w,c
  1857  00182E  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  1858  001830  5008               	movf	(___llmod@divisor+3)^0,w,c
  1859  001832  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  1860  001834  A0D8               	btfss	status,0,c
  1861  001836  EF1F  F00C         	goto	u1731
  1862  00183A  EF21  F00C         	goto	u1730
  1863  00183E                     u1731:
  1864  00183E  EF29  F00C         	goto	l1833
  1865  001842                     u1730:
  1866  001842  5005               	movf	___llmod@divisor^0,w,c
  1867  001844  5E01               	subwf	___llmod@dividend^0,f,c
  1868  001846  5006               	movf	(___llmod@divisor+1)^0,w,c
  1869  001848  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  1870  00184A  5007               	movf	(___llmod@divisor+2)^0,w,c
  1871  00184C  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  1872  00184E  5008               	movf	(___llmod@divisor+3)^0,w,c
  1873  001850  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  1874  001852                     l1833:
  1875  001852  90D8               	bcf	status,0,c
  1876  001854  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  1877  001856  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  1878  001858  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  1879  00185A  3205               	rrcf	___llmod@divisor^0,f,c
  1880  00185C  2E09               	decfsz	___llmod@counter^0,f,c
  1881  00185E  EF12  F00C         	goto	l1829
  1882  001862                     l764:
  1883  001862  C001  F001         	movff	___llmod@dividend,?___llmod
  1884  001866  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  1885  00186A  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  1886  00186E  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  1887  001872  0012               	return		;funcret
  1888  001874                     __end_of___llmod:
  1889                           	callstack 0
  1890                           
  1891 ;; *************** function _rgbInit *****************
  1892 ;; Defined at:
  1893 ;;		line 45 in file "rgb.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1907 ;;      Params:         0       0       0       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0
  1910 ;;      Totals:         0       0       0       0       0       0       0
  1911 ;;Total ram usage:        0 bytes
  1912 ;; Hardware stack levels used: 1
  1913 ;; Hardware stack levels required when called: 1
  1914 ;; This function calls:
  1915 ;;		_pinMode
  1916 ;; This function is called by:
  1917 ;;		_main
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	text7
  1922  001A4C                     __ptext7:
  1923                           	callstack 0
  1924  001A4C                     _rgbInit:
  1925                           	callstack 29
  1926  001A4C                     
  1927                           ;rgb.c: 46:  pinMode(PIN_D0, 0);
  1928  001A4C  0E00               	movlw	0
  1929  001A4E  6E02               	movwf	(pinMode@pin+1)^0,c
  1930  001A50  0E18               	movlw	24
  1931  001A52  6E01               	movwf	pinMode@pin^0,c
  1932  001A54  0E00               	movlw	0
  1933  001A56  6E04               	movwf	(pinMode@type+1)^0,c
  1934  001A58  0E00               	movlw	0
  1935  001A5A  6E03               	movwf	pinMode@type^0,c
  1936  001A5C  EC06  F006         	call	_pinMode	;wreg free
  1937                           
  1938                           ;rgb.c: 47:  pinMode(PIN_D1, 0);
  1939  001A60  0E00               	movlw	0
  1940  001A62  6E02               	movwf	(pinMode@pin+1)^0,c
  1941  001A64  0E19               	movlw	25
  1942  001A66  6E01               	movwf	pinMode@pin^0,c
  1943  001A68  0E00               	movlw	0
  1944  001A6A  6E04               	movwf	(pinMode@type+1)^0,c
  1945  001A6C  0E00               	movlw	0
  1946  001A6E  6E03               	movwf	pinMode@type^0,c
  1947  001A70  EC06  F006         	call	_pinMode	;wreg free
  1948                           
  1949                           ;rgb.c: 48:  pinMode(PIN_D2, 0);
  1950  001A74  0E00               	movlw	0
  1951  001A76  6E02               	movwf	(pinMode@pin+1)^0,c
  1952  001A78  0E1A               	movlw	26
  1953  001A7A  6E01               	movwf	pinMode@pin^0,c
  1954  001A7C  0E00               	movlw	0
  1955  001A7E  6E04               	movwf	(pinMode@type+1)^0,c
  1956  001A80  0E00               	movlw	0
  1957  001A82  6E03               	movwf	pinMode@type^0,c
  1958  001A84  EC06  F006         	call	_pinMode	;wreg free
  1959  001A88  0012               	return		;funcret
  1960  001A8A                     __end_of_rgbInit:
  1961                           	callstack 0
  1962                           
  1963 ;; *************** function _rgbColor *****************
  1964 ;; Defined at:
  1965 ;;		line 3 in file "rgb.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  led             2    6[COMRAM] int 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;		None
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2, status,0, cstack
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1979 ;;      Params:         2       0       0       0       0       0       0
  1980 ;;      Locals:         0       0       0       0       0       0       0
  1981 ;;      Temps:          0       0       0       0       0       0       0
  1982 ;;      Totals:         2       0       0       0       0       0       0
  1983 ;;Total ram usage:        2 bytes
  1984 ;; Hardware stack levels used: 1
  1985 ;; Hardware stack levels required when called: 1
  1986 ;; This function calls:
  1987 ;;		_digitalWrite
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text8
  1994  00168C                     __ptext8:
  1995                           	callstack 0
  1996  00168C                     _rgbColor:
  1997                           	callstack 29
  1998  00168C                     
  1999                           ;rgb.c: 4:  if (led & 1) {
  2000  00168C  A007               	btfss	rgbColor@led^0,0,c
  2001  00168E  EF4B  F00B         	goto	u1861
  2002  001692  EF4D  F00B         	goto	u1860
  2003  001696                     u1861:
  2004  001696  EF59  F00B         	goto	l1941
  2005  00169A                     u1860:
  2006  00169A                     
  2007                           ;rgb.c: 5:   digitalWrite(PIN_D0, 1);
  2008  00169A  0E00               	movlw	0
  2009  00169C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2010  00169E  0E18               	movlw	24
  2011  0016A0  6E01               	movwf	digitalWrite@pin^0,c
  2012  0016A2  0E00               	movlw	0
  2013  0016A4  6E04               	movwf	(digitalWrite@value+1)^0,c
  2014  0016A6  0E01               	movlw	1
  2015  0016A8  6E03               	movwf	digitalWrite@value^0,c
  2016  0016AA  EC2D  F007         	call	_digitalWrite	;wreg free
  2017                           
  2018                           ;rgb.c: 6:  } else {
  2019  0016AE  EF63  F00B         	goto	l1943
  2020  0016B2                     l1941:
  2021                           
  2022                           ;rgb.c: 7:   digitalWrite(PIN_D0, 0);
  2023  0016B2  0E00               	movlw	0
  2024  0016B4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2025  0016B6  0E18               	movlw	24
  2026  0016B8  6E01               	movwf	digitalWrite@pin^0,c
  2027  0016BA  0E00               	movlw	0
  2028  0016BC  6E04               	movwf	(digitalWrite@value+1)^0,c
  2029  0016BE  0E00               	movlw	0
  2030  0016C0  6E03               	movwf	digitalWrite@value^0,c
  2031  0016C2  EC2D  F007         	call	_digitalWrite	;wreg free
  2032  0016C6                     l1943:
  2033                           
  2034                           ;rgb.c: 9:  if (led & 2) {
  2035  0016C6  A207               	btfss	rgbColor@led^0,1,c
  2036  0016C8  EF68  F00B         	goto	u1871
  2037  0016CC  EF6A  F00B         	goto	u1870
  2038  0016D0                     u1871:
  2039  0016D0  EF76  F00B         	goto	l1947
  2040  0016D4                     u1870:
  2041  0016D4                     
  2042                           ;rgb.c: 10:   digitalWrite(PIN_D1, 1);
  2043  0016D4  0E00               	movlw	0
  2044  0016D6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2045  0016D8  0E19               	movlw	25
  2046  0016DA  6E01               	movwf	digitalWrite@pin^0,c
  2047  0016DC  0E00               	movlw	0
  2048  0016DE  6E04               	movwf	(digitalWrite@value+1)^0,c
  2049  0016E0  0E01               	movlw	1
  2050  0016E2  6E03               	movwf	digitalWrite@value^0,c
  2051  0016E4  EC2D  F007         	call	_digitalWrite	;wreg free
  2052                           
  2053                           ;rgb.c: 11:  } else {
  2054  0016E8  EF80  F00B         	goto	l1949
  2055  0016EC                     l1947:
  2056                           
  2057                           ;rgb.c: 12:   digitalWrite(PIN_D1, 0);
  2058  0016EC  0E00               	movlw	0
  2059  0016EE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2060  0016F0  0E19               	movlw	25
  2061  0016F2  6E01               	movwf	digitalWrite@pin^0,c
  2062  0016F4  0E00               	movlw	0
  2063  0016F6  6E04               	movwf	(digitalWrite@value+1)^0,c
  2064  0016F8  0E00               	movlw	0
  2065  0016FA  6E03               	movwf	digitalWrite@value^0,c
  2066  0016FC  EC2D  F007         	call	_digitalWrite	;wreg free
  2067  001700                     l1949:
  2068                           
  2069                           ;rgb.c: 14:  if (led & 4) {
  2070  001700  A407               	btfss	rgbColor@led^0,2,c
  2071  001702  EF85  F00B         	goto	u1881
  2072  001706  EF87  F00B         	goto	u1880
  2073  00170A                     u1881:
  2074  00170A  EF93  F00B         	goto	l1953
  2075  00170E                     u1880:
  2076  00170E                     
  2077                           ;rgb.c: 15:   digitalWrite(PIN_D2, 1);
  2078  00170E  0E00               	movlw	0
  2079  001710  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2080  001712  0E1A               	movlw	26
  2081  001714  6E01               	movwf	digitalWrite@pin^0,c
  2082  001716  0E00               	movlw	0
  2083  001718  6E04               	movwf	(digitalWrite@value+1)^0,c
  2084  00171A  0E01               	movlw	1
  2085  00171C  6E03               	movwf	digitalWrite@value^0,c
  2086  00171E  EC2D  F007         	call	_digitalWrite	;wreg free
  2087                           
  2088                           ;rgb.c: 16:  } else {
  2089  001722  EF9D  F00B         	goto	l303
  2090  001726                     l1953:
  2091                           
  2092                           ;rgb.c: 17:   digitalWrite(PIN_D2, 0);
  2093  001726  0E00               	movlw	0
  2094  001728  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2095  00172A  0E1A               	movlw	26
  2096  00172C  6E01               	movwf	digitalWrite@pin^0,c
  2097  00172E  0E00               	movlw	0
  2098  001730  6E04               	movwf	(digitalWrite@value+1)^0,c
  2099  001732  0E00               	movlw	0
  2100  001734  6E03               	movwf	digitalWrite@value^0,c
  2101  001736  EC2D  F007         	call	_digitalWrite	;wreg free
  2102  00173A                     l303:
  2103  00173A  0012               	return		;funcret
  2104  00173C                     __end_of_rgbColor:
  2105                           	callstack 0
  2106                           
  2107 ;; *************** function _mesaReset *****************
  2108 ;; Defined at:
  2109 ;;		line 23 in file "main.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  namesa          2    0[COMRAM] PTR int 
  2112 ;;		 -> main@namesa(104), 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  i               2    2[COMRAM] int 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2124 ;;      Params:         2       0       0       0       0       0       0
  2125 ;;      Locals:         2       0       0       0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0       0       0
  2127 ;;      Totals:         4       0       0       0       0       0       0
  2128 ;;Total ram usage:        4 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_main
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text9
  2138  001984                     __ptext9:
  2139                           	callstack 0
  2140  001984                     _mesaReset:
  2141                           	callstack 30
  2142  001984                     
  2143                           ;main.c: 23: void mesaReset(int *namesa);main.c: 24: {;main.c: 25:     int i;;main.c: 26
      +                          :     for(i=0;i<52;i++){
  2144  001984  0E00               	movlw	0
  2145  001986  6E04               	movwf	(mesaReset@i+1)^0,c
  2146  001988  0E00               	movlw	0
  2147  00198A  6E03               	movwf	mesaReset@i^0,c
  2148  00198C                     l1843:
  2149                           
  2150                           ;main.c: 27:         namesa[i]=0;
  2151  00198C  90D8               	bcf	status,0,c
  2152  00198E  3403               	rlcf	mesaReset@i^0,w,c
  2153  001990  6ED9               	movwf	fsr2l,c
  2154  001992  3404               	rlcf	(mesaReset@i+1)^0,w,c
  2155  001994  6EDA               	movwf	fsr2h,c
  2156  001996  5001               	movf	mesaReset@namesa^0,w,c
  2157  001998  26D9               	addwf	fsr2l,f,c
  2158  00199A  5002               	movf	(mesaReset@namesa+1)^0,w,c
  2159  00199C  22DA               	addwfc	fsr2h,f,c
  2160  00199E  0E00               	movlw	0
  2161  0019A0  6EDE               	movwf	postinc2,c
  2162  0019A2  0E00               	movlw	0
  2163  0019A4  6EDD               	movwf	postdec2,c
  2164  0019A6                     
  2165                           ;main.c: 28:     }
  2166  0019A6  4A03               	infsnz	mesaReset@i^0,f,c
  2167  0019A8  2A04               	incf	(mesaReset@i+1)^0,f,c
  2168  0019AA  BE04               	btfsc	(mesaReset@i+1)^0,7,c
  2169  0019AC  EFE1  F00C         	goto	u1741
  2170  0019B0  5004               	movf	(mesaReset@i+1)^0,w,c
  2171  0019B2  E109               	bnz	u1740
  2172  0019B4  0E34               	movlw	52
  2173  0019B6  5C03               	subwf	mesaReset@i^0,w,c
  2174  0019B8  A0D8               	btfss	status,0,c
  2175  0019BA  EFE1  F00C         	goto	u1741
  2176  0019BE  EFE3  F00C         	goto	u1740
  2177  0019C2                     u1741:
  2178  0019C2  EFC6  F00C         	goto	l1843
  2179  0019C6                     u1740:
  2180  0019C6  0012               	return		;funcret
  2181  0019C8                     __end_of_mesaReset:
  2182                           	callstack 0
  2183                           
  2184 ;; *************** function _lcdInit *****************
  2185 ;; Defined at:
  2186 ;;		line 72 in file "lcd.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		wreg, status,2, status,0, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2200 ;;      Params:         0       0       0       0       0       0       0
  2201 ;;      Locals:         0       0       0       0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0       0       0
  2203 ;;      Totals:         0       0       0       0       0       0       0
  2204 ;;Total ram usage:        0 bytes
  2205 ;; Hardware stack levels used: 1
  2206 ;; Hardware stack levels required when called: 5
  2207 ;; This function calls:
  2208 ;;		_delayMicro
  2209 ;;		_delayMili
  2210 ;;		_lcdCommand
  2211 ;;		_pinMode
  2212 ;;		_pushNibble
  2213 ;;		_soInit
  2214 ;; This function is called by:
  2215 ;;		_main
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text10
  2220  0015D8                     __ptext10:
  2221                           	callstack 0
  2222  0015D8                     _lcdInit:
  2223                           	callstack 25
  2224  0015D8                     
  2225                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  2226  0015D8  0E00               	movlw	0
  2227  0015DA  6E02               	movwf	(pinMode@pin+1)^0,c
  2228  0015DC  0E1C               	movlw	28
  2229  0015DE  6E01               	movwf	pinMode@pin^0,c
  2230  0015E0  0E00               	movlw	0
  2231  0015E2  6E04               	movwf	(pinMode@type+1)^0,c
  2232  0015E4  0E00               	movlw	0
  2233  0015E6  6E03               	movwf	pinMode@type^0,c
  2234  0015E8  EC06  F006         	call	_pinMode	;wreg free
  2235                           
  2236                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  2237  0015EC  0E00               	movlw	0
  2238  0015EE  6E02               	movwf	(pinMode@pin+1)^0,c
  2239  0015F0  0E1D               	movlw	29
  2240  0015F2  6E01               	movwf	pinMode@pin^0,c
  2241  0015F4  0E00               	movlw	0
  2242  0015F6  6E04               	movwf	(pinMode@type+1)^0,c
  2243  0015F8  0E00               	movlw	0
  2244  0015FA  6E03               	movwf	pinMode@type^0,c
  2245  0015FC  EC06  F006         	call	_pinMode	;wreg free
  2246                           
  2247                           ;lcd.c: 75:  soInit();
  2248  001600  EC45  F00D         	call	_soInit	;wreg free
  2249                           
  2250                           ;lcd.c: 76:  delayMili(15);
  2251  001604  0E00               	movlw	0
  2252  001606  6E02               	movwf	(delayMili@a+1)^0,c
  2253  001608  0E0F               	movlw	15
  2254  00160A  6E01               	movwf	delayMili@a^0,c
  2255  00160C  EC7D  F00D         	call	_delayMili	;wreg free
  2256                           
  2257                           ;lcd.c: 78:  pushNibble(0x03, 0);
  2258  001610  0E00               	movlw	0
  2259  001612  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2260  001614  0E00               	movlw	0
  2261  001616  6E0A               	movwf	pushNibble@rs^0,c
  2262  001618  0E03               	movlw	3
  2263  00161A  ECBF  F00D         	call	_pushNibble
  2264                           
  2265                           ;lcd.c: 79:  delayMili(5);
  2266  00161E  0E00               	movlw	0
  2267  001620  6E02               	movwf	(delayMili@a+1)^0,c
  2268  001622  0E05               	movlw	5
  2269  001624  6E01               	movwf	delayMili@a^0,c
  2270  001626  EC7D  F00D         	call	_delayMili	;wreg free
  2271                           
  2272                           ;lcd.c: 80:  pushNibble(0x03, 0);
  2273  00162A  0E00               	movlw	0
  2274  00162C  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2275  00162E  0E00               	movlw	0
  2276  001630  6E0A               	movwf	pushNibble@rs^0,c
  2277  001632  0E03               	movlw	3
  2278  001634  ECBF  F00D         	call	_pushNibble
  2279  001638                     
  2280                           ;lcd.c: 81:  delayMicro(160);
  2281  001638  0E00               	movlw	0
  2282  00163A  6E02               	movwf	(delayMicro@a+1)^0,c
  2283  00163C  0EA0               	movlw	160
  2284  00163E  6E01               	movwf	delayMicro@a^0,c
  2285  001640  EC25  F00E         	call	_delayMicro	;wreg free
  2286  001644                     
  2287                           ;lcd.c: 82:  pushNibble(0x03, 0);
  2288  001644  0E00               	movlw	0
  2289  001646  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2290  001648  0E00               	movlw	0
  2291  00164A  6E0A               	movwf	pushNibble@rs^0,c
  2292  00164C  0E03               	movlw	3
  2293  00164E  ECBF  F00D         	call	_pushNibble
  2294                           
  2295                           ;lcd.c: 83:  delayMicro(160);
  2296  001652  0E00               	movlw	0
  2297  001654  6E02               	movwf	(delayMicro@a+1)^0,c
  2298  001656  0EA0               	movlw	160
  2299  001658  6E01               	movwf	delayMicro@a^0,c
  2300  00165A  EC25  F00E         	call	_delayMicro	;wreg free
  2301  00165E                     
  2302                           ;lcd.c: 85:  pushNibble(0x02, 0);
  2303  00165E  0E00               	movlw	0
  2304  001660  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2305  001662  0E00               	movlw	0
  2306  001664  6E0A               	movwf	pushNibble@rs^0,c
  2307  001666  0E02               	movlw	2
  2308  001668  ECBF  F00D         	call	_pushNibble
  2309  00166C                     
  2310                           ;lcd.c: 86:  delayMili(10);
  2311  00166C  0E00               	movlw	0
  2312  00166E  6E02               	movwf	(delayMili@a+1)^0,c
  2313  001670  0E0A               	movlw	10
  2314  001672  6E01               	movwf	delayMili@a^0,c
  2315  001674  EC7D  F00D         	call	_delayMili	;wreg free
  2316  001678                     
  2317                           ;lcd.c: 88:  lcdCommand(0x28);
  2318  001678  0E28               	movlw	40
  2319  00167A  EC05  F00E         	call	_lcdCommand
  2320  00167E                     
  2321                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  2322  00167E  0E0C               	movlw	12
  2323  001680  EC05  F00E         	call	_lcdCommand
  2324  001684                     
  2325                           ;lcd.c: 90:  lcdCommand(0x01);
  2326  001684  0E01               	movlw	1
  2327  001686  EC05  F00E         	call	_lcdCommand
  2328  00168A  0012               	return		;funcret
  2329  00168C                     __end_of_lcdInit:
  2330                           	callstack 0
  2331                           
  2332 ;; *************** function _pushNibble *****************
  2333 ;; Defined at:
  2334 ;;		line 25 in file "lcd.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  value           1    wreg     unsigned char 
  2337 ;;  rs              2    9[COMRAM] int 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  value           1   11[COMRAM] unsigned char 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2349 ;;      Params:         2       0       0       0       0       0       0
  2350 ;;      Locals:         1       0       0       0       0       0       0
  2351 ;;      Temps:          0       0       0       0       0       0       0
  2352 ;;      Totals:         3       0       0       0       0       0       0
  2353 ;;Total ram usage:        3 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; Hardware stack levels required when called: 3
  2356 ;; This function calls:
  2357 ;;		_digitalWrite
  2358 ;;		_pulseEnablePin
  2359 ;;		_soWrite
  2360 ;; This function is called by:
  2361 ;;		_lcdInit
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text11
  2366  001B7E                     __ptext11:
  2367                           	callstack 0
  2368  001B7E                     _pushNibble:
  2369                           	callstack 26
  2370                           
  2371                           ;incstack = 0
  2372                           ;pushNibble@value stored from wreg
  2373  001B7E  6E0C               	movwf	pushNibble@value^0,c
  2374  001B80                     
  2375                           ;lcd.c: 26:  soWrite(value);
  2376  001B80  C00C  F007         	movff	pushNibble@value,soWrite@value
  2377  001B84  6A08               	clrf	(soWrite@value+1)^0,c
  2378  001B86  EC9B  F00C         	call	_soWrite	;wreg free
  2379                           
  2380                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  2381  001B8A  0E00               	movlw	0
  2382  001B8C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2383  001B8E  0E1D               	movlw	29
  2384  001B90  6E01               	movwf	digitalWrite@pin^0,c
  2385  001B92  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  2386  001B96  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  2387  001B9A  EC2D  F007         	call	_digitalWrite	;wreg free
  2388                           
  2389                           ;lcd.c: 28:  pulseEnablePin();
  2390  001B9E  EC05  F00D         	call	_pulseEnablePin	;wreg free
  2391  001BA2  0012               	return		;funcret
  2392  001BA4                     __end_of_pushNibble:
  2393                           	callstack 0
  2394                           
  2395 ;; *************** function _lcdCommand *****************
  2396 ;; Defined at:
  2397 ;;		line 40 in file "lcd.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  value           1    wreg     unsigned char 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  value           1   13[COMRAM] unsigned char 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2411 ;;      Params:         0       0       0       0       0       0       0
  2412 ;;      Locals:         1       0       0       0       0       0       0
  2413 ;;      Temps:          0       0       0       0       0       0       0
  2414 ;;      Totals:         1       0       0       0       0       0       0
  2415 ;;Total ram usage:        1 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; Hardware stack levels required when called: 4
  2418 ;; This function calls:
  2419 ;;		_delayMili
  2420 ;;		_pushByte
  2421 ;; This function is called by:
  2422 ;;		_main
  2423 ;;		_lcdInit
  2424 ;;		_lcdPosition
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text12
  2429  001C0A                     __ptext12:
  2430                           	callstack 0
  2431  001C0A                     _lcdCommand:
  2432                           	callstack 25
  2433                           
  2434                           ;incstack = 0
  2435                           ;lcdCommand@value stored from wreg
  2436  001C0A  6E0E               	movwf	lcdCommand@value^0,c
  2437  001C0C                     
  2438                           ;lcd.c: 41:  pushByte(value, 0);
  2439  001C0C  0E00               	movlw	0
  2440  001C0E  6E0B               	movwf	(pushByte@rs+1)^0,c
  2441  001C10  0E00               	movlw	0
  2442  001C12  6E0A               	movwf	pushByte@rs^0,c
  2443  001C14  500E               	movf	lcdCommand@value^0,w,c
  2444  001C16  EC6E  F00C         	call	_pushByte
  2445                           
  2446                           ;lcd.c: 42:  delayMili(2);
  2447  001C1A  0E00               	movlw	0
  2448  001C1C  6E02               	movwf	(delayMili@a+1)^0,c
  2449  001C1E  0E02               	movlw	2
  2450  001C20  6E01               	movwf	delayMili@a^0,c
  2451  001C22  EC7D  F00D         	call	_delayMili	;wreg free
  2452  001C26  0012               	return		;funcret
  2453  001C28                     __end_of_lcdCommand:
  2454                           	callstack 0
  2455                           
  2456 ;; *************** function _pushByte *****************
  2457 ;; Defined at:
  2458 ;;		line 31 in file "lcd.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  value           1    wreg     unsigned char 
  2461 ;;  rs              2    9[COMRAM] int 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  value           1   12[COMRAM] unsigned char 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2473 ;;      Params:         2       0       0       0       0       0       0
  2474 ;;      Locals:         1       0       0       0       0       0       0
  2475 ;;      Temps:          1       0       0       0       0       0       0
  2476 ;;      Totals:         4       0       0       0       0       0       0
  2477 ;;Total ram usage:        4 bytes
  2478 ;; Hardware stack levels used: 1
  2479 ;; Hardware stack levels required when called: 3
  2480 ;; This function calls:
  2481 ;;		_digitalWrite
  2482 ;;		_pulseEnablePin
  2483 ;;		_soWrite
  2484 ;; This function is called by:
  2485 ;;		_lcdCommand
  2486 ;;		_lcdChar
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text13
  2491  0018DC                     __ptext13:
  2492                           	callstack 0
  2493  0018DC                     _pushByte:
  2494                           	callstack 25
  2495                           
  2496                           ;incstack = 0
  2497                           ;pushByte@value stored from wreg
  2498  0018DC  6E0D               	movwf	pushByte@value^0,c
  2499  0018DE                     
  2500                           ;lcd.c: 32:  soWrite(value >> 4);
  2501  0018DE  C00D  F00C         	movff	pushByte@value,??_pushByte
  2502  0018E2  3A0C               	swapf	??_pushByte^0,f,c
  2503  0018E4  0E0F               	movlw	15
  2504  0018E6  160C               	andwf	??_pushByte^0,f,c
  2505  0018E8  500C               	movf	??_pushByte^0,w,c
  2506  0018EA  6E07               	movwf	soWrite@value^0,c
  2507  0018EC  6A08               	clrf	(soWrite@value+1)^0,c
  2508  0018EE  EC9B  F00C         	call	_soWrite	;wreg free
  2509                           
  2510                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  2511  0018F2  0E00               	movlw	0
  2512  0018F4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2513  0018F6  0E1D               	movlw	29
  2514  0018F8  6E01               	movwf	digitalWrite@pin^0,c
  2515  0018FA  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  2516  0018FE  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  2517  001902  EC2D  F007         	call	_digitalWrite	;wreg free
  2518                           
  2519                           ;lcd.c: 34:  pulseEnablePin();
  2520  001906  EC05  F00D         	call	_pulseEnablePin	;wreg free
  2521                           
  2522                           ;lcd.c: 36:  soWrite(value & 0x0F);
  2523  00190A  C00D  F00C         	movff	pushByte@value,??_pushByte
  2524  00190E  0E0F               	movlw	15
  2525  001910  160C               	andwf	??_pushByte^0,f,c
  2526  001912  500C               	movf	??_pushByte^0,w,c
  2527  001914  6E07               	movwf	soWrite@value^0,c
  2528  001916  6A08               	clrf	(soWrite@value+1)^0,c
  2529  001918  EC9B  F00C         	call	_soWrite	;wreg free
  2530                           
  2531                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  2532  00191C  0E00               	movlw	0
  2533  00191E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2534  001920  0E1D               	movlw	29
  2535  001922  6E01               	movwf	digitalWrite@pin^0,c
  2536  001924  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  2537  001928  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  2538  00192C  EC2D  F007         	call	_digitalWrite	;wreg free
  2539                           
  2540                           ;lcd.c: 38:  pulseEnablePin();
  2541  001930  EC05  F00D         	call	_pulseEnablePin	;wreg free
  2542  001934  0012               	return		;funcret
  2543  001936                     __end_of_pushByte:
  2544                           	callstack 0
  2545                           
  2546 ;; *************** function _pulseEnablePin *****************
  2547 ;; Defined at:
  2548 ;;		line 18 in file "lcd.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;		None
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;		None
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		wreg, status,2, status,0, cstack
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2562 ;;      Params:         0       0       0       0       0       0       0
  2563 ;;      Locals:         0       0       0       0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0       0       0
  2565 ;;      Totals:         0       0       0       0       0       0       0
  2566 ;;Total ram usage:        0 bytes
  2567 ;; Hardware stack levels used: 1
  2568 ;; Hardware stack levels required when called: 1
  2569 ;; This function calls:
  2570 ;;		_delayMicro
  2571 ;;		_digitalWrite
  2572 ;; This function is called by:
  2573 ;;		_pushNibble
  2574 ;;		_pushByte
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text14
  2579  001A0A                     __ptext14:
  2580                           	callstack 0
  2581  001A0A                     _pulseEnablePin:
  2582                           	callstack 26
  2583  001A0A                     
  2584                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  2585  001A0A  0E00               	movlw	0
  2586  001A0C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2587  001A0E  0E1C               	movlw	28
  2588  001A10  6E01               	movwf	digitalWrite@pin^0,c
  2589  001A12  0E00               	movlw	0
  2590  001A14  6E04               	movwf	(digitalWrite@value+1)^0,c
  2591  001A16  0E01               	movlw	1
  2592  001A18  6E03               	movwf	digitalWrite@value^0,c
  2593  001A1A  EC2D  F007         	call	_digitalWrite	;wreg free
  2594  001A1E                     
  2595                           ;lcd.c: 20:  delayMicro(5);
  2596  001A1E  0E00               	movlw	0
  2597  001A20  6E02               	movwf	(delayMicro@a+1)^0,c
  2598  001A22  0E05               	movlw	5
  2599  001A24  6E01               	movwf	delayMicro@a^0,c
  2600  001A26  EC25  F00E         	call	_delayMicro	;wreg free
  2601  001A2A                     
  2602                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  2603  001A2A  0E00               	movlw	0
  2604  001A2C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2605  001A2E  0E1C               	movlw	28
  2606  001A30  6E01               	movwf	digitalWrite@pin^0,c
  2607  001A32  0E00               	movlw	0
  2608  001A34  6E04               	movwf	(digitalWrite@value+1)^0,c
  2609  001A36  0E00               	movlw	0
  2610  001A38  6E03               	movwf	digitalWrite@value^0,c
  2611  001A3A  EC2D  F007         	call	_digitalWrite	;wreg free
  2612                           
  2613                           ;lcd.c: 22:  delayMicro(5);
  2614  001A3E  0E00               	movlw	0
  2615  001A40  6E02               	movwf	(delayMicro@a+1)^0,c
  2616  001A42  0E05               	movlw	5
  2617  001A44  6E01               	movwf	delayMicro@a^0,c
  2618  001A46  EC25  F00E         	call	_delayMicro	;wreg free
  2619  001A4A  0012               	return		;funcret
  2620  001A4C                     __end_of_pulseEnablePin:
  2621                           	callstack 0
  2622                           
  2623 ;; *************** function _delayMicro *****************
  2624 ;; Defined at:
  2625 ;;		line 5 in file "lcd.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  a               2    0[COMRAM] int 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  i               2    0        volatile int 
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1    wreg      void 
  2632 ;; Registers used:
  2633 ;;		None
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2639 ;;      Params:         2       0       0       0       0       0       0
  2640 ;;      Locals:         0       0       0       0       0       0       0
  2641 ;;      Temps:          0       0       0       0       0       0       0
  2642 ;;      Totals:         2       0       0       0       0       0       0
  2643 ;;Total ram usage:        2 bytes
  2644 ;; Hardware stack levels used: 1
  2645 ;; This function calls:
  2646 ;;		Nothing
  2647 ;; This function is called by:
  2648 ;;		_pulseEnablePin
  2649 ;;		_lcdChar
  2650 ;;		_lcdInit
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text15
  2655  001C4A                     __ptext15:
  2656                           	callstack 0
  2657  001C4A                     _delayMicro:
  2658                           	callstack 26
  2659  001C4A  0012               	return		;funcret
  2660  001C4C                     __end_of_delayMicro:
  2661                           	callstack 0
  2662                           
  2663 ;; *************** function _delayMili *****************
  2664 ;; Defined at:
  2665 ;;		line 10 in file "lcd.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  a               2    0[COMRAM] int 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  i               2    3[COMRAM] volatile int 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  1    wreg      void 
  2672 ;; Registers used:
  2673 ;;		wreg, status,2, status,0
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2679 ;;      Params:         2       0       0       0       0       0       0
  2680 ;;      Locals:         2       0       0       0       0       0       0
  2681 ;;      Temps:          1       0       0       0       0       0       0
  2682 ;;      Totals:         5       0       0       0       0       0       0
  2683 ;;Total ram usage:        5 bytes
  2684 ;; Hardware stack levels used: 1
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_lcdCommand
  2689 ;;		_lcdInit
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text16
  2694  001AFA                     __ptext16:
  2695                           	callstack 0
  2696  001AFA                     _delayMili:
  2697                           	callstack 28
  2698  001AFA                     
  2699                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  2700  001AFA  0E00               	movlw	0
  2701  001AFC  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  2702  001AFE  0E00               	movlw	0
  2703  001B00  6E04               	movwf	delayMili@i^0,c	;volatile
  2704  001B02  EF85  F00D         	goto	l1755
  2705  001B06                     l1753:
  2706                           
  2707                           ;lcd.c: 15:  }
  2708  001B06  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  2709  001B08  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  2710  001B0A                     l1755:
  2711  001B0A  5001               	movf	delayMili@a^0,w,c
  2712  001B0C  5C04               	subwf	delayMili@i^0,w,c	;volatile
  2713  001B0E  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  2714  001B10  0A80               	xorlw	128
  2715  001B12  6E03               	movwf	??_delayMili^0,c
  2716  001B14  5002               	movf	(delayMili@a+1)^0,w,c
  2717  001B16  0A80               	xorlw	128
  2718  001B18  5803               	subwfb	??_delayMili^0,w,c
  2719  001B1A  A0D8               	btfss	status,0,c
  2720  001B1C  EF92  F00D         	goto	u1591
  2721  001B20  EF94  F00D         	goto	u1590
  2722  001B24                     u1591:
  2723  001B24  EF83  F00D         	goto	l1753
  2724  001B28                     u1590:
  2725  001B28  0012               	return		;funcret
  2726  001B2A                     __end_of_delayMili:
  2727                           	callstack 0
  2728                           
  2729 ;; *************** function _kpRead *****************
  2730 ;; Defined at:
  2731 ;;		line 14 in file "keypad.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;		None
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;		None
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  2    0[COMRAM] unsigned int 
  2738 ;; Registers used:
  2739 ;;		None
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2745 ;;      Params:         2       0       0       0       0       0       0
  2746 ;;      Locals:         0       0       0       0       0       0       0
  2747 ;;      Temps:          0       0       0       0       0       0       0
  2748 ;;      Totals:         2       0       0       0       0       0       0
  2749 ;;Total ram usage:        2 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		_main
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text17
  2759  001C38                     __ptext17:
  2760                           	callstack 0
  2761  001C38                     _kpRead:
  2762                           	callstack 30
  2763  001C38                     
  2764                           ;keypad.c: 15:     return keys;
  2765  001C38  C021  F001         	movff	_keys,?_kpRead
  2766  001C3C  C022  F002         	movff	_keys+1,?_kpRead+1
  2767  001C40  0012               	return		;funcret
  2768  001C42                     __end_of_kpRead:
  2769                           	callstack 0
  2770                           
  2771 ;; *************** function _kpInit *****************
  2772 ;; Defined at:
  2773 ;;		line 54 in file "keypad.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;		None
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2787 ;;      Params:         0       0       0       0       0       0       0
  2788 ;;      Locals:         0       0       0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0
  2790 ;;      Totals:         0       0       0       0       0       0       0
  2791 ;;Total ram usage:        0 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 2
  2794 ;; This function calls:
  2795 ;;		_pinMode
  2796 ;;		_soInit
  2797 ;; This function is called by:
  2798 ;;		_main
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text18
  2803  001AC8                     __ptext18:
  2804                           	callstack 0
  2805  001AC8                     _kpInit:
  2806                           	callstack 28
  2807  001AC8                     
  2808                           ;keypad.c: 55:   soInit();
  2809  001AC8  EC45  F00D         	call	_soInit	;wreg free
  2810                           
  2811                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  2812  001ACC  0E00               	movlw	0
  2813  001ACE  6E02               	movwf	(pinMode@pin+1)^0,c
  2814  001AD0  0E0A               	movlw	10
  2815  001AD2  6E01               	movwf	pinMode@pin^0,c
  2816  001AD4  0E00               	movlw	0
  2817  001AD6  6E04               	movwf	(pinMode@type+1)^0,c
  2818  001AD8  0E01               	movlw	1
  2819  001ADA  6E03               	movwf	pinMode@type^0,c
  2820  001ADC  EC06  F006         	call	_pinMode	;wreg free
  2821                           
  2822                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  2823  001AE0  0E00               	movlw	0
  2824  001AE2  6E02               	movwf	(pinMode@pin+1)^0,c
  2825  001AE4  0E09               	movlw	9
  2826  001AE6  6E01               	movwf	pinMode@pin^0,c
  2827  001AE8  0E00               	movlw	0
  2828  001AEA  6E04               	movwf	(pinMode@type+1)^0,c
  2829  001AEC  0E01               	movlw	1
  2830  001AEE  6E03               	movwf	pinMode@type^0,c
  2831  001AF0  EC06  F006         	call	_pinMode	;wreg free
  2832  001AF4                     
  2833                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  2834  001AF4  0E0C               	movlw	12
  2835  001AF6  6EC1               	movwf	193,c	;volatile
  2836  001AF8  0012               	return		;funcret
  2837  001AFA                     __end_of_kpInit:
  2838                           	callstack 0
  2839                           
  2840 ;; *************** function _soInit *****************
  2841 ;; Defined at:
  2842 ;;		line 3 in file "so.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2, status,0, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2856 ;;      Params:         0       0       0       0       0       0       0
  2857 ;;      Locals:         0       0       0       0       0       0       0
  2858 ;;      Temps:          0       0       0       0       0       0       0
  2859 ;;      Totals:         0       0       0       0       0       0       0
  2860 ;;Total ram usage:        0 bytes
  2861 ;; Hardware stack levels used: 1
  2862 ;; Hardware stack levels required when called: 1
  2863 ;; This function calls:
  2864 ;;		_pinMode
  2865 ;; This function is called by:
  2866 ;;		_kpInit
  2867 ;;		_lcdInit
  2868 ;;		_ssdInit
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text19
  2873  001A8A                     __ptext19:
  2874                           	callstack 0
  2875  001A8A                     _soInit:
  2876                           	callstack 28
  2877  001A8A                     
  2878                           ;so.c: 4:  pinMode(PIN_D7, 0);
  2879  001A8A  0E00               	movlw	0
  2880  001A8C  6E02               	movwf	(pinMode@pin+1)^0,c
  2881  001A8E  0E1F               	movlw	31
  2882  001A90  6E01               	movwf	pinMode@pin^0,c
  2883  001A92  0E00               	movlw	0
  2884  001A94  6E04               	movwf	(pinMode@type+1)^0,c
  2885  001A96  0E00               	movlw	0
  2886  001A98  6E03               	movwf	pinMode@type^0,c
  2887  001A9A  EC06  F006         	call	_pinMode	;wreg free
  2888                           
  2889                           ;so.c: 5:  pinMode(PIN_B0, 0);
  2890  001A9E  0E00               	movlw	0
  2891  001AA0  6E02               	movwf	(pinMode@pin+1)^0,c
  2892  001AA2  0E08               	movlw	8
  2893  001AA4  6E01               	movwf	pinMode@pin^0,c
  2894  001AA6  0E00               	movlw	0
  2895  001AA8  6E04               	movwf	(pinMode@type+1)^0,c
  2896  001AAA  0E00               	movlw	0
  2897  001AAC  6E03               	movwf	pinMode@type^0,c
  2898  001AAE  EC06  F006         	call	_pinMode	;wreg free
  2899                           
  2900                           ;so.c: 6:  pinMode(PIN_D6, 0);
  2901  001AB2  0E00               	movlw	0
  2902  001AB4  6E02               	movwf	(pinMode@pin+1)^0,c
  2903  001AB6  0E1E               	movlw	30
  2904  001AB8  6E01               	movwf	pinMode@pin^0,c
  2905  001ABA  0E00               	movlw	0
  2906  001ABC  6E04               	movwf	(pinMode@type+1)^0,c
  2907  001ABE  0E00               	movlw	0
  2908  001AC0  6E03               	movwf	pinMode@type^0,c
  2909  001AC2  EC06  F006         	call	_pinMode	;wreg free
  2910  001AC6  0012               	return		;funcret
  2911  001AC8                     __end_of_soInit:
  2912                           	callstack 0
  2913                           
  2914 ;; *************** function _pinMode *****************
  2915 ;; Defined at:
  2916 ;;		line 54 in file "io.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  pin             2    0[COMRAM] int 
  2919 ;;  type            2    2[COMRAM] int 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;		None
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		wreg, status,2, status,0
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2931 ;;      Params:         4       0       0       0       0       0       0
  2932 ;;      Locals:         0       0       0       0       0       0       0
  2933 ;;      Temps:          2       0       0       0       0       0       0
  2934 ;;      Totals:         6       0       0       0       0       0       0
  2935 ;;Total ram usage:        6 bytes
  2936 ;; Hardware stack levels used: 1
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_kpInit
  2941 ;;		_lcdInit
  2942 ;;		_soInit
  2943 ;;		_rgbInit
  2944 ;;		_ssdInit
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text20
  2949  000C0C                     __ptext20:
  2950                           	callstack 0
  2951  000C0C                     _pinMode:
  2952                           	callstack 29
  2953  000C0C                     
  2954                           ;io.c: 56:     if(pin <8){
  2955  000C0C  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2956  000C0E  EF14  F006         	goto	u1390
  2957  000C12  5002               	movf	(pinMode@pin+1)^0,w,c
  2958  000C14  E107               	bnz	u1391
  2959  000C16  0E08               	movlw	8
  2960  000C18  5C01               	subwf	pinMode@pin^0,w,c
  2961  000C1A  B0D8               	btfsc	status,0,c
  2962  000C1C  EF12  F006         	goto	u1391
  2963  000C20  EF14  F006         	goto	u1390
  2964  000C24                     u1391:
  2965  000C24  EF3E  F006         	goto	l1719
  2966  000C28                     u1390:
  2967  000C28                     
  2968                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  2969  000C28  5003               	movf	pinMode@type^0,w,c
  2970  000C2A  1004               	iorwf	(pinMode@type+1)^0,w,c
  2971  000C2C  B4D8               	btfsc	status,2,c
  2972  000C2E  EF1B  F006         	goto	u1401
  2973  000C32  EF1D  F006         	goto	u1400
  2974  000C36                     u1401:
  2975  000C36  EF2D  F006         	goto	l1717
  2976  000C3A                     u1400:
  2977  000C3A  C001  F005         	movff	pinMode@pin,??_pinMode
  2978  000C3E  0E01               	movlw	1
  2979  000C40  6E06               	movwf	(??_pinMode+1)^0,c
  2980  000C42  2A05               	incf	??_pinMode^0,f,c
  2981  000C44  EF26  F006         	goto	u1414
  2982  000C48                     u1415:
  2983  000C48  90D8               	bcf	status,0,c
  2984  000C4A  3606               	rlcf	(??_pinMode+1)^0,f,c
  2985  000C4C                     u1414:
  2986  000C4C  2E05               	decfsz	??_pinMode^0,f,c
  2987  000C4E  EF24  F006         	goto	u1415
  2988  000C52  5006               	movf	(??_pinMode+1)^0,w,c
  2989  000C54  1292               	iorwf	146,f,c	;volatile
  2990  000C56  EF2C  F007         	goto	l272
  2991  000C5A                     l1717:
  2992  000C5A  C001  F005         	movff	pinMode@pin,??_pinMode
  2993  000C5E  0E01               	movlw	1
  2994  000C60  6E06               	movwf	(??_pinMode+1)^0,c
  2995  000C62  2A05               	incf	??_pinMode^0,f,c
  2996  000C64  EF36  F006         	goto	u1424
  2997  000C68                     u1425:
  2998  000C68  90D8               	bcf	status,0,c
  2999  000C6A  3606               	rlcf	(??_pinMode+1)^0,f,c
  3000  000C6C                     u1424:
  3001  000C6C  2E05               	decfsz	??_pinMode^0,f,c
  3002  000C6E  EF34  F006         	goto	u1425
  3003  000C72  5006               	movf	(??_pinMode+1)^0,w,c
  3004  000C74  0AFF               	xorlw	255
  3005  000C76  1692               	andwf	146,f,c	;volatile
  3006  000C78  EF2C  F007         	goto	l272
  3007  000C7C                     l1719:
  3008  000C7C  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3009  000C7E  EF4C  F006         	goto	u1430
  3010  000C82  5002               	movf	(pinMode@pin+1)^0,w,c
  3011  000C84  E107               	bnz	u1431
  3012  000C86  0E10               	movlw	16
  3013  000C88  5C01               	subwf	pinMode@pin^0,w,c
  3014  000C8A  B0D8               	btfsc	status,0,c
  3015  000C8C  EF4A  F006         	goto	u1431
  3016  000C90  EF4C  F006         	goto	u1430
  3017  000C94                     u1431:
  3018  000C94  EF7A  F006         	goto	l1727
  3019  000C98                     u1430:
  3020  000C98                     
  3021                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  3022  000C98  5003               	movf	pinMode@type^0,w,c
  3023  000C9A  1004               	iorwf	(pinMode@type+1)^0,w,c
  3024  000C9C  B4D8               	btfsc	status,2,c
  3025  000C9E  EF53  F006         	goto	u1441
  3026  000CA2  EF55  F006         	goto	u1440
  3027  000CA6                     u1441:
  3028  000CA6  EF67  F006         	goto	l1725
  3029  000CAA                     u1440:
  3030  000CAA  C001  F005         	movff	pinMode@pin,??_pinMode
  3031  000CAE  0EF8               	movlw	-8
  3032  000CB0  2605               	addwf	??_pinMode^0,f,c
  3033  000CB2  0E01               	movlw	1
  3034  000CB4  6E06               	movwf	(??_pinMode+1)^0,c
  3035  000CB6  2A05               	incf	??_pinMode^0,f,c
  3036  000CB8  EF60  F006         	goto	u1454
  3037  000CBC                     u1455:
  3038  000CBC  90D8               	bcf	status,0,c
  3039  000CBE  3606               	rlcf	(??_pinMode+1)^0,f,c
  3040  000CC0                     u1454:
  3041  000CC0  2E05               	decfsz	??_pinMode^0,f,c
  3042  000CC2  EF5E  F006         	goto	u1455
  3043  000CC6  5006               	movf	(??_pinMode+1)^0,w,c
  3044  000CC8  1293               	iorwf	147,f,c	;volatile
  3045  000CCA  EF2C  F007         	goto	l272
  3046  000CCE                     l1725:
  3047  000CCE  C001  F005         	movff	pinMode@pin,??_pinMode
  3048  000CD2  0EF8               	movlw	-8
  3049  000CD4  2605               	addwf	??_pinMode^0,f,c
  3050  000CD6  0E01               	movlw	1
  3051  000CD8  6E06               	movwf	(??_pinMode+1)^0,c
  3052  000CDA  2A05               	incf	??_pinMode^0,f,c
  3053  000CDC  EF72  F006         	goto	u1464
  3054  000CE0                     u1465:
  3055  000CE0  90D8               	bcf	status,0,c
  3056  000CE2  3606               	rlcf	(??_pinMode+1)^0,f,c
  3057  000CE4                     u1464:
  3058  000CE4  2E05               	decfsz	??_pinMode^0,f,c
  3059  000CE6  EF70  F006         	goto	u1465
  3060  000CEA  5006               	movf	(??_pinMode+1)^0,w,c
  3061  000CEC  0AFF               	xorlw	255
  3062  000CEE  1693               	andwf	147,f,c	;volatile
  3063  000CF0  EF2C  F007         	goto	l272
  3064  000CF4                     l1727:
  3065  000CF4  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3066  000CF6  EF88  F006         	goto	u1470
  3067  000CFA  5002               	movf	(pinMode@pin+1)^0,w,c
  3068  000CFC  E107               	bnz	u1471
  3069  000CFE  0E18               	movlw	24
  3070  000D00  5C01               	subwf	pinMode@pin^0,w,c
  3071  000D02  B0D8               	btfsc	status,0,c
  3072  000D04  EF86  F006         	goto	u1471
  3073  000D08  EF88  F006         	goto	u1470
  3074  000D0C                     u1471:
  3075  000D0C  EFB6  F006         	goto	l1735
  3076  000D10                     u1470:
  3077  000D10                     
  3078                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  3079  000D10  5003               	movf	pinMode@type^0,w,c
  3080  000D12  1004               	iorwf	(pinMode@type+1)^0,w,c
  3081  000D14  B4D8               	btfsc	status,2,c
  3082  000D16  EF8F  F006         	goto	u1481
  3083  000D1A  EF91  F006         	goto	u1480
  3084  000D1E                     u1481:
  3085  000D1E  EFA3  F006         	goto	l1733
  3086  000D22                     u1480:
  3087  000D22  C001  F005         	movff	pinMode@pin,??_pinMode
  3088  000D26  0EF0               	movlw	-16
  3089  000D28  2605               	addwf	??_pinMode^0,f,c
  3090  000D2A  0E01               	movlw	1
  3091  000D2C  6E06               	movwf	(??_pinMode+1)^0,c
  3092  000D2E  2A05               	incf	??_pinMode^0,f,c
  3093  000D30  EF9C  F006         	goto	u1494
  3094  000D34                     u1495:
  3095  000D34  90D8               	bcf	status,0,c
  3096  000D36  3606               	rlcf	(??_pinMode+1)^0,f,c
  3097  000D38                     u1494:
  3098  000D38  2E05               	decfsz	??_pinMode^0,f,c
  3099  000D3A  EF9A  F006         	goto	u1495
  3100  000D3E  5006               	movf	(??_pinMode+1)^0,w,c
  3101  000D40  1294               	iorwf	148,f,c	;volatile
  3102  000D42  EF2C  F007         	goto	l272
  3103  000D46                     l1733:
  3104  000D46  C001  F005         	movff	pinMode@pin,??_pinMode
  3105  000D4A  0EF0               	movlw	-16
  3106  000D4C  2605               	addwf	??_pinMode^0,f,c
  3107  000D4E  0E01               	movlw	1
  3108  000D50  6E06               	movwf	(??_pinMode+1)^0,c
  3109  000D52  2A05               	incf	??_pinMode^0,f,c
  3110  000D54  EFAE  F006         	goto	u1504
  3111  000D58                     u1505:
  3112  000D58  90D8               	bcf	status,0,c
  3113  000D5A  3606               	rlcf	(??_pinMode+1)^0,f,c
  3114  000D5C                     u1504:
  3115  000D5C  2E05               	decfsz	??_pinMode^0,f,c
  3116  000D5E  EFAC  F006         	goto	u1505
  3117  000D62  5006               	movf	(??_pinMode+1)^0,w,c
  3118  000D64  0AFF               	xorlw	255
  3119  000D66  1694               	andwf	148,f,c	;volatile
  3120  000D68  EF2C  F007         	goto	l272
  3121  000D6C                     l1735:
  3122  000D6C  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3123  000D6E  EFC4  F006         	goto	u1510
  3124  000D72  5002               	movf	(pinMode@pin+1)^0,w,c
  3125  000D74  E107               	bnz	u1511
  3126  000D76  0E20               	movlw	32
  3127  000D78  5C01               	subwf	pinMode@pin^0,w,c
  3128  000D7A  B0D8               	btfsc	status,0,c
  3129  000D7C  EFC2  F006         	goto	u1511
  3130  000D80  EFC4  F006         	goto	u1510
  3131  000D84                     u1511:
  3132  000D84  EFF2  F006         	goto	l1743
  3133  000D88                     u1510:
  3134  000D88                     
  3135                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  3136  000D88  5003               	movf	pinMode@type^0,w,c
  3137  000D8A  1004               	iorwf	(pinMode@type+1)^0,w,c
  3138  000D8C  B4D8               	btfsc	status,2,c
  3139  000D8E  EFCB  F006         	goto	u1521
  3140  000D92  EFCD  F006         	goto	u1520
  3141  000D96                     u1521:
  3142  000D96  EFDF  F006         	goto	l1741
  3143  000D9A                     u1520:
  3144  000D9A  C001  F005         	movff	pinMode@pin,??_pinMode
  3145  000D9E  0EE8               	movlw	-24
  3146  000DA0  2605               	addwf	??_pinMode^0,f,c
  3147  000DA2  0E01               	movlw	1
  3148  000DA4  6E06               	movwf	(??_pinMode+1)^0,c
  3149  000DA6  2A05               	incf	??_pinMode^0,f,c
  3150  000DA8  EFD8  F006         	goto	u1534
  3151  000DAC                     u1535:
  3152  000DAC  90D8               	bcf	status,0,c
  3153  000DAE  3606               	rlcf	(??_pinMode+1)^0,f,c
  3154  000DB0                     u1534:
  3155  000DB0  2E05               	decfsz	??_pinMode^0,f,c
  3156  000DB2  EFD6  F006         	goto	u1535
  3157  000DB6  5006               	movf	(??_pinMode+1)^0,w,c
  3158  000DB8  1295               	iorwf	149,f,c	;volatile
  3159  000DBA  EF2C  F007         	goto	l272
  3160  000DBE                     l1741:
  3161  000DBE  C001  F005         	movff	pinMode@pin,??_pinMode
  3162  000DC2  0EE8               	movlw	-24
  3163  000DC4  2605               	addwf	??_pinMode^0,f,c
  3164  000DC6  0E01               	movlw	1
  3165  000DC8  6E06               	movwf	(??_pinMode+1)^0,c
  3166  000DCA  2A05               	incf	??_pinMode^0,f,c
  3167  000DCC  EFEA  F006         	goto	u1544
  3168  000DD0                     u1545:
  3169  000DD0  90D8               	bcf	status,0,c
  3170  000DD2  3606               	rlcf	(??_pinMode+1)^0,f,c
  3171  000DD4                     u1544:
  3172  000DD4  2E05               	decfsz	??_pinMode^0,f,c
  3173  000DD6  EFE8  F006         	goto	u1545
  3174  000DDA  5006               	movf	(??_pinMode+1)^0,w,c
  3175  000DDC  0AFF               	xorlw	255
  3176  000DDE  1695               	andwf	149,f,c	;volatile
  3177  000DE0  EF2C  F007         	goto	l272
  3178  000DE4                     l1743:
  3179  000DE4  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3180  000DE6  EF00  F007         	goto	u1550
  3181  000DEA  5002               	movf	(pinMode@pin+1)^0,w,c
  3182  000DEC  E107               	bnz	u1551
  3183  000DEE  0E28               	movlw	40
  3184  000DF0  5C01               	subwf	pinMode@pin^0,w,c
  3185  000DF2  B0D8               	btfsc	status,0,c
  3186  000DF4  EFFE  F006         	goto	u1551
  3187  000DF8  EF00  F007         	goto	u1550
  3188  000DFC                     u1551:
  3189  000DFC  EF2C  F007         	goto	l272
  3190  000E00                     u1550:
  3191  000E00                     
  3192                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  3193  000E00  5003               	movf	pinMode@type^0,w,c
  3194  000E02  1004               	iorwf	(pinMode@type+1)^0,w,c
  3195  000E04  B4D8               	btfsc	status,2,c
  3196  000E06  EF07  F007         	goto	u1561
  3197  000E0A  EF09  F007         	goto	u1560
  3198  000E0E                     u1561:
  3199  000E0E  EF1B  F007         	goto	l1749
  3200  000E12                     u1560:
  3201  000E12  C001  F005         	movff	pinMode@pin,??_pinMode
  3202  000E16  0EE0               	movlw	-32
  3203  000E18  2605               	addwf	??_pinMode^0,f,c
  3204  000E1A  0E01               	movlw	1
  3205  000E1C  6E06               	movwf	(??_pinMode+1)^0,c
  3206  000E1E  2A05               	incf	??_pinMode^0,f,c
  3207  000E20  EF14  F007         	goto	u1574
  3208  000E24                     u1575:
  3209  000E24  90D8               	bcf	status,0,c
  3210  000E26  3606               	rlcf	(??_pinMode+1)^0,f,c
  3211  000E28                     u1574:
  3212  000E28  2E05               	decfsz	??_pinMode^0,f,c
  3213  000E2A  EF12  F007         	goto	u1575
  3214  000E2E  5006               	movf	(??_pinMode+1)^0,w,c
  3215  000E30  1296               	iorwf	150,f,c	;volatile
  3216  000E32  EF2C  F007         	goto	l272
  3217  000E36                     l1749:
  3218  000E36  C001  F005         	movff	pinMode@pin,??_pinMode
  3219  000E3A  0EE0               	movlw	-32
  3220  000E3C  2605               	addwf	??_pinMode^0,f,c
  3221  000E3E  0E01               	movlw	1
  3222  000E40  6E06               	movwf	(??_pinMode+1)^0,c
  3223  000E42  2A05               	incf	??_pinMode^0,f,c
  3224  000E44  EF26  F007         	goto	u1584
  3225  000E48                     u1585:
  3226  000E48  90D8               	bcf	status,0,c
  3227  000E4A  3606               	rlcf	(??_pinMode+1)^0,f,c
  3228  000E4C                     u1584:
  3229  000E4C  2E05               	decfsz	??_pinMode^0,f,c
  3230  000E4E  EF24  F007         	goto	u1585
  3231  000E52  5006               	movf	(??_pinMode+1)^0,w,c
  3232  000E54  0AFF               	xorlw	255
  3233  000E56  1696               	andwf	150,f,c	;volatile
  3234  000E58                     l272:
  3235  000E58  0012               	return		;funcret
  3236  000E5A                     __end_of_pinMode:
  3237                           	callstack 0
  3238                           
  3239 ;; *************** function _kpDebounce *****************
  3240 ;; Defined at:
  3241 ;;		line 27 in file "keypad.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;		None
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;  i               2   12[COMRAM] int 
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  1    wreg      void 
  3248 ;; Registers used:
  3249 ;;		wreg, status,2, status,0, cstack
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3255 ;;      Params:         0       0       0       0       0       0       0
  3256 ;;      Locals:         2       0       0       0       0       0       0
  3257 ;;      Temps:          3       0       0       0       0       0       0
  3258 ;;      Totals:         5       0       0       0       0       0       0
  3259 ;;Total ram usage:        5 bytes
  3260 ;; Hardware stack levels used: 1
  3261 ;; Hardware stack levels required when called: 3
  3262 ;; This function calls:
  3263 ;;		_digitalRead
  3264 ;;		_soWrite
  3265 ;; This function is called by:
  3266 ;;		_main
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text21
  3271  0013DE                     __ptext21:
  3272                           	callstack 0
  3273  0013DE                     _kpDebounce:
  3274                           	callstack 27
  3275  0013DE                     
  3276                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  3277  0013DE  0E00               	movlw	0
  3278  0013E0  6E20               	movwf	(kpDebounce@newRead+1)^0,c
  3279  0013E2  0E00               	movlw	0
  3280  0013E4  6E1F               	movwf	kpDebounce@newRead^0,c
  3281                           
  3282                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  3283  0013E6  0E00               	movlw	0
  3284  0013E8  6E0E               	movwf	(kpDebounce@i+1)^0,c
  3285  0013EA  0E00               	movlw	0
  3286  0013EC  6E0D               	movwf	kpDebounce@i^0,c
  3287  0013EE                     l1909:
  3288  0013EE  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  3289  0013F0  EF03  F00A         	goto	u1781
  3290  0013F4  500E               	movf	(kpDebounce@i+1)^0,w,c
  3291  0013F6  E109               	bnz	u1780
  3292  0013F8  0E05               	movlw	5
  3293  0013FA  5C0D               	subwf	kpDebounce@i^0,w,c
  3294  0013FC  A0D8               	btfss	status,0,c
  3295  0013FE  EF03  F00A         	goto	u1781
  3296  001402  EF05  F00A         	goto	u1780
  3297  001406                     u1781:
  3298  001406  EF07  F00A         	goto	l1913
  3299  00140A                     u1780:
  3300  00140A  EF68  F00A         	goto	l1925
  3301  00140E                     l1913:
  3302                           
  3303                           ;keypad.c: 35:       soWrite(1<<(i+3));
  3304  00140E  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3305  001412  0E03               	movlw	3
  3306  001414  260A               	addwf	??_kpDebounce^0,f,c
  3307  001416  0E01               	movlw	1
  3308  001418  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3309  00141A  0E00               	movlw	0
  3310  00141C  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3311  00141E  2A0A               	incf	??_kpDebounce^0,f,c
  3312  001420  EF15  F00A         	goto	u1794
  3313  001424                     u1795:
  3314  001424  90D8               	bcf	status,0,c
  3315  001426  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3316  001428  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3317  00142A                     u1794:
  3318  00142A  2E0A               	decfsz	??_kpDebounce^0,f,c
  3319  00142C  EF12  F00A         	goto	u1795
  3320  001430  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  3321  001434  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  3322  001438  EC9B  F00C         	call	_soWrite	;wreg free
  3323                           
  3324                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  3325  00143C  0E00               	movlw	0
  3326  00143E  6E02               	movwf	(digitalRead@pin+1)^0,c
  3327  001440  0E0A               	movlw	10
  3328  001442  6E01               	movwf	digitalRead@pin^0,c
  3329  001444  EC3A  F009         	call	_digitalRead	;wreg free
  3330  001448  5001               	movf	?_digitalRead^0,w,c
  3331  00144A  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3332  00144C  B4D8               	btfsc	status,2,c
  3333  00144E  EF2B  F00A         	goto	u1801
  3334  001452  EF2D  F00A         	goto	u1800
  3335  001456                     u1801:
  3336  001456  EF40  F00A         	goto	l1917
  3337  00145A                     u1800:
  3338  00145A                     
  3339                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  3340  00145A  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3341  00145E  0E01               	movlw	1
  3342  001460  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3343  001462  0E00               	movlw	0
  3344  001464  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3345  001466  2A0A               	incf	??_kpDebounce^0,f,c
  3346  001468  EF39  F00A         	goto	u1814
  3347  00146C                     u1815:
  3348  00146C  90D8               	bcf	status,0,c
  3349  00146E  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3350  001470  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3351  001472                     u1814:
  3352  001472  2E0A               	decfsz	??_kpDebounce^0,f,c
  3353  001474  EF36  F00A         	goto	u1815
  3354  001478  500B               	movf	(??_kpDebounce+1)^0,w,c
  3355  00147A  121F               	iorwf	kpDebounce@newRead^0,f,c
  3356  00147C  500C               	movf	(??_kpDebounce+2)^0,w,c
  3357  00147E  1220               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3358  001480                     l1917:
  3359                           
  3360                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  3361  001480  0E00               	movlw	0
  3362  001482  6E02               	movwf	(digitalRead@pin+1)^0,c
  3363  001484  0E09               	movlw	9
  3364  001486  6E01               	movwf	digitalRead@pin^0,c
  3365  001488  EC3A  F009         	call	_digitalRead	;wreg free
  3366  00148C  5001               	movf	?_digitalRead^0,w,c
  3367  00148E  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3368  001490  B4D8               	btfsc	status,2,c
  3369  001492  EF4D  F00A         	goto	u1821
  3370  001496  EF4F  F00A         	goto	u1820
  3371  00149A                     u1821:
  3372  00149A  EF64  F00A         	goto	l1921
  3373  00149E                     u1820:
  3374  00149E                     
  3375                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  3376  00149E  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3377  0014A2  0E05               	movlw	5
  3378  0014A4  260A               	addwf	??_kpDebounce^0,f,c
  3379  0014A6  0E01               	movlw	1
  3380  0014A8  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3381  0014AA  0E00               	movlw	0
  3382  0014AC  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3383  0014AE  2A0A               	incf	??_kpDebounce^0,f,c
  3384  0014B0  EF5D  F00A         	goto	u1834
  3385  0014B4                     u1835:
  3386  0014B4  90D8               	bcf	status,0,c
  3387  0014B6  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3388  0014B8  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3389  0014BA                     u1834:
  3390  0014BA  2E0A               	decfsz	??_kpDebounce^0,f,c
  3391  0014BC  EF5A  F00A         	goto	u1835
  3392  0014C0  500B               	movf	(??_kpDebounce+1)^0,w,c
  3393  0014C2  121F               	iorwf	kpDebounce@newRead^0,f,c
  3394  0014C4  500C               	movf	(??_kpDebounce+2)^0,w,c
  3395  0014C6  1220               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3396  0014C8                     l1921:
  3397                           
  3398                           ;keypad.c: 42:     }
  3399  0014C8  4A0D               	infsnz	kpDebounce@i^0,f,c
  3400  0014CA  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  3401  0014CC  EFF7  F009         	goto	l1909
  3402  0014D0                     l1925:
  3403                           
  3404                           ;keypad.c: 43:     if (oldRead == newRead) {
  3405  0014D0  501F               	movf	kpDebounce@newRead^0,w,c
  3406  0014D2  181D               	xorwf	kpDebounce@oldRead^0,w,c
  3407  0014D4  E107               	bnz	u1841
  3408  0014D6  5020               	movf	(kpDebounce@newRead+1)^0,w,c
  3409  0014D8  181E               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  3410  0014DA  A4D8               	btfss	status,2,c
  3411  0014DC  EF72  F00A         	goto	u1841
  3412  0014E0  EF74  F00A         	goto	u1840
  3413  0014E4                     u1841:
  3414  0014E4  EF77  F00A         	goto	l1929
  3415  0014E8                     u1840:
  3416  0014E8                     
  3417                           ;keypad.c: 44:         tempo--;
  3418  0014E8  0628               	decf	kpDebounce@tempo^0,f,c
  3419                           
  3420                           ;keypad.c: 45:     } else {
  3421  0014EA  EF7D  F00A         	goto	l99
  3422  0014EE                     l1929:
  3423                           
  3424                           ;keypad.c: 46:         tempo = 1;
  3425  0014EE  0E01               	movlw	1
  3426  0014F0  6E28               	movwf	kpDebounce@tempo^0,c
  3427  0014F2                     
  3428                           ;keypad.c: 47:         oldRead = newRead;
  3429  0014F2  C01F  F01D         	movff	kpDebounce@newRead,kpDebounce@oldRead
  3430  0014F6  C020  F01E         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  3431  0014FA                     l99:
  3432                           
  3433                           ;keypad.c: 49:     if (tempo == 0) {
  3434  0014FA  5028               	movf	kpDebounce@tempo^0,w,c
  3435  0014FC  A4D8               	btfss	status,2,c
  3436  0014FE  EF83  F00A         	goto	u1851
  3437  001502  EF85  F00A         	goto	u1850
  3438  001506                     u1851:
  3439  001506  EF89  F00A         	goto	l101
  3440  00150A                     u1850:
  3441  00150A                     
  3442                           ;keypad.c: 50:         keys = oldRead;
  3443  00150A  C01D  F021         	movff	kpDebounce@oldRead,_keys
  3444  00150E  C01E  F022         	movff	kpDebounce@oldRead+1,_keys+1
  3445  001512                     l101:
  3446  001512  0012               	return		;funcret
  3447  001514                     __end_of_kpDebounce:
  3448                           	callstack 0
  3449                           
  3450 ;; *************** function _soWrite *****************
  3451 ;; Defined at:
  3452 ;;		line 18 in file "so.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  value           2    6[COMRAM] int 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  i               1    8[COMRAM] unsigned char 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2, status,0, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3466 ;;      Params:         2       0       0       0       0       0       0
  3467 ;;      Locals:         1       0       0       0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0       0       0
  3469 ;;      Totals:         3       0       0       0       0       0       0
  3470 ;;Total ram usage:        3 bytes
  3471 ;; Hardware stack levels used: 1
  3472 ;; Hardware stack levels required when called: 2
  3473 ;; This function calls:
  3474 ;;		_PulseClockData
  3475 ;;		_PulseEnClock
  3476 ;;		_digitalWrite
  3477 ;; This function is called by:
  3478 ;;		_kpDebounce
  3479 ;;		_pushNibble
  3480 ;;		_pushByte
  3481 ;;		_ssdUpdate
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485                           	psect	text22
  3486  001936                     __ptext22:
  3487                           	callstack 0
  3488  001936                     _soWrite:
  3489                           	callstack 25
  3490  001936                     
  3491                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  3492  001936  0E00               	movlw	0
  3493  001938  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3494  00193A  0E08               	movlw	8
  3495  00193C  6E01               	movwf	digitalWrite@pin^0,c
  3496  00193E  0E00               	movlw	0
  3497  001940  6E04               	movwf	(digitalWrite@value+1)^0,c
  3498  001942  0E00               	movlw	0
  3499  001944  6E03               	movwf	digitalWrite@value^0,c
  3500  001946  EC2D  F007         	call	_digitalWrite	;wreg free
  3501  00194A                     
  3502                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  3503  00194A  0E00               	movlw	0
  3504  00194C  6E09               	movwf	soWrite@i^0,c
  3505  00194E                     l1695:
  3506                           
  3507                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  3508  00194E  0E00               	movlw	0
  3509  001950  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3510  001952  0E1E               	movlw	30
  3511  001954  6E01               	movwf	digitalWrite@pin^0,c
  3512  001956  0E80               	movlw	128
  3513  001958  1407               	andwf	soWrite@value^0,w,c
  3514  00195A  6E03               	movwf	digitalWrite@value^0,c
  3515  00195C  6A04               	clrf	(digitalWrite@value+1)^0,c
  3516  00195E  EC2D  F007         	call	_digitalWrite	;wreg free
  3517                           
  3518                           ;so.c: 23:   PulseClockData();
  3519  001962  ECAA  F00D         	call	_PulseClockData	;wreg free
  3520  001966                     
  3521                           ;so.c: 24:   value <<= 1;
  3522  001966  90D8               	bcf	status,0,c
  3523  001968  3607               	rlcf	soWrite@value^0,f,c
  3524  00196A  3608               	rlcf	(soWrite@value+1)^0,f,c
  3525  00196C                     
  3526                           ;so.c: 25:  }
  3527  00196C  2A09               	incf	soWrite@i^0,f,c
  3528  00196E  0E07               	movlw	7
  3529  001970  6409               	cpfsgt	soWrite@i^0,c
  3530  001972  EFBD  F00C         	goto	u1381
  3531  001976  EFBF  F00C         	goto	u1380
  3532  00197A                     u1381:
  3533  00197A  EFA7  F00C         	goto	l1695
  3534  00197E                     u1380:
  3535  00197E                     
  3536                           ;so.c: 26:  PulseEnClock();
  3537  00197E  EC95  F00D         	call	_PulseEnClock	;wreg free
  3538  001982  0012               	return		;funcret
  3539  001984                     __end_of_soWrite:
  3540                           	callstack 0
  3541                           
  3542 ;; *************** function _PulseEnClock *****************
  3543 ;; Defined at:
  3544 ;;		line 9 in file "so.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2, status,0, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3558 ;;      Params:         0       0       0       0       0       0       0
  3559 ;;      Locals:         0       0       0       0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0       0       0
  3561 ;;      Totals:         0       0       0       0       0       0       0
  3562 ;;Total ram usage:        0 bytes
  3563 ;; Hardware stack levels used: 1
  3564 ;; Hardware stack levels required when called: 1
  3565 ;; This function calls:
  3566 ;;		_digitalWrite
  3567 ;; This function is called by:
  3568 ;;		_soWrite
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text23
  3573  001B2A                     __ptext23:
  3574                           	callstack 0
  3575  001B2A                     _PulseEnClock:
  3576                           	callstack 25
  3577  001B2A                     
  3578                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  3579  001B2A  0E00               	movlw	0
  3580  001B2C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3581  001B2E  0E1F               	movlw	31
  3582  001B30  6E01               	movwf	digitalWrite@pin^0,c
  3583  001B32  0E00               	movlw	0
  3584  001B34  6E04               	movwf	(digitalWrite@value+1)^0,c
  3585  001B36  0E01               	movlw	1
  3586  001B38  6E03               	movwf	digitalWrite@value^0,c
  3587  001B3A  EC2D  F007         	call	_digitalWrite	;wreg free
  3588                           
  3589                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  3590  001B3E  0E00               	movlw	0
  3591  001B40  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3592  001B42  0E1F               	movlw	31
  3593  001B44  6E01               	movwf	digitalWrite@pin^0,c
  3594  001B46  0E00               	movlw	0
  3595  001B48  6E04               	movwf	(digitalWrite@value+1)^0,c
  3596  001B4A  0E00               	movlw	0
  3597  001B4C  6E03               	movwf	digitalWrite@value^0,c
  3598  001B4E  EC2D  F007         	call	_digitalWrite	;wreg free
  3599  001B52  0012               	return		;funcret
  3600  001B54                     __end_of_PulseEnClock:
  3601                           	callstack 0
  3602                           
  3603 ;; *************** function _PulseClockData *****************
  3604 ;; Defined at:
  3605 ;;		line 14 in file "so.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3619 ;;      Params:         0       0       0       0       0       0       0
  3620 ;;      Locals:         0       0       0       0       0       0       0
  3621 ;;      Temps:          0       0       0       0       0       0       0
  3622 ;;      Totals:         0       0       0       0       0       0       0
  3623 ;;Total ram usage:        0 bytes
  3624 ;; Hardware stack levels used: 1
  3625 ;; Hardware stack levels required when called: 1
  3626 ;; This function calls:
  3627 ;;		_digitalWrite
  3628 ;; This function is called by:
  3629 ;;		_soWrite
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           	psect	text24
  3634  001B54                     __ptext24:
  3635                           	callstack 0
  3636  001B54                     _PulseClockData:
  3637                           	callstack 25
  3638  001B54                     
  3639                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  3640  001B54  0E00               	movlw	0
  3641  001B56  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3642  001B58  0E08               	movlw	8
  3643  001B5A  6E01               	movwf	digitalWrite@pin^0,c
  3644  001B5C  0E00               	movlw	0
  3645  001B5E  6E04               	movwf	(digitalWrite@value+1)^0,c
  3646  001B60  0E01               	movlw	1
  3647  001B62  6E03               	movwf	digitalWrite@value^0,c
  3648  001B64  EC2D  F007         	call	_digitalWrite	;wreg free
  3649                           
  3650                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  3651  001B68  0E00               	movlw	0
  3652  001B6A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3653  001B6C  0E08               	movlw	8
  3654  001B6E  6E01               	movwf	digitalWrite@pin^0,c
  3655  001B70  0E00               	movlw	0
  3656  001B72  6E04               	movwf	(digitalWrite@value+1)^0,c
  3657  001B74  0E00               	movlw	0
  3658  001B76  6E03               	movwf	digitalWrite@value^0,c
  3659  001B78  EC2D  F007         	call	_digitalWrite	;wreg free
  3660  001B7C  0012               	return		;funcret
  3661  001B7E                     __end_of_PulseClockData:
  3662                           	callstack 0
  3663                           
  3664 ;; *************** function _digitalWrite *****************
  3665 ;; Defined at:
  3666 ;;		line 14 in file "io.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  pin             2    0[COMRAM] int 
  3669 ;;  value           2    2[COMRAM] int 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2, status,0
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3681 ;;      Params:         4       0       0       0       0       0       0
  3682 ;;      Locals:         0       0       0       0       0       0       0
  3683 ;;      Temps:          2       0       0       0       0       0       0
  3684 ;;      Totals:         6       0       0       0       0       0       0
  3685 ;;Total ram usage:        6 bytes
  3686 ;; Hardware stack levels used: 1
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_pulseEnablePin
  3691 ;;		_pushNibble
  3692 ;;		_pushByte
  3693 ;;		_PulseEnClock
  3694 ;;		_PulseClockData
  3695 ;;		_soWrite
  3696 ;;		_rgbColor
  3697 ;;		_ssdUpdate
  3698 ;;		_turnOn
  3699 ;;		_turnOff
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text25
  3704  000E5A                     __ptext25:
  3705                           	callstack 0
  3706  000E5A                     _digitalWrite:
  3707                           	callstack 26
  3708  000E5A                     
  3709                           ;io.c: 16:     if(pin <8){
  3710  000E5A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3711  000E5C  EF3B  F007         	goto	u1180
  3712  000E60  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3713  000E62  E107               	bnz	u1181
  3714  000E64  0E08               	movlw	8
  3715  000E66  5C01               	subwf	digitalWrite@pin^0,w,c
  3716  000E68  B0D8               	btfsc	status,0,c
  3717  000E6A  EF39  F007         	goto	u1181
  3718  000E6E  EF3B  F007         	goto	u1180
  3719  000E72                     u1181:
  3720  000E72  EF65  F007         	goto	l1651
  3721  000E76                     u1180:
  3722  000E76                     
  3723                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  3724  000E76  5003               	movf	digitalWrite@value^0,w,c
  3725  000E78  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3726  000E7A  B4D8               	btfsc	status,2,c
  3727  000E7C  EF42  F007         	goto	u1191
  3728  000E80  EF44  F007         	goto	u1190
  3729  000E84                     u1191:
  3730  000E84  EF54  F007         	goto	l1649
  3731  000E88                     u1190:
  3732  000E88  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3733  000E8C  0E01               	movlw	1
  3734  000E8E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3735  000E90  2A05               	incf	??_digitalWrite^0,f,c
  3736  000E92  EF4D  F007         	goto	u1204
  3737  000E96                     u1205:
  3738  000E96  90D8               	bcf	status,0,c
  3739  000E98  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3740  000E9A                     u1204:
  3741  000E9A  2E05               	decfsz	??_digitalWrite^0,f,c
  3742  000E9C  EF4B  F007         	goto	u1205
  3743  000EA0  5006               	movf	(??_digitalWrite+1)^0,w,c
  3744  000EA2  1280               	iorwf	128,f,c	;volatile
  3745  000EA4  EF53  F008         	goto	l238
  3746  000EA8                     l1649:
  3747  000EA8  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3748  000EAC  0E01               	movlw	1
  3749  000EAE  6E06               	movwf	(??_digitalWrite+1)^0,c
  3750  000EB0  2A05               	incf	??_digitalWrite^0,f,c
  3751  000EB2  EF5D  F007         	goto	u1214
  3752  000EB6                     u1215:
  3753  000EB6  90D8               	bcf	status,0,c
  3754  000EB8  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3755  000EBA                     u1214:
  3756  000EBA  2E05               	decfsz	??_digitalWrite^0,f,c
  3757  000EBC  EF5B  F007         	goto	u1215
  3758  000EC0  5006               	movf	(??_digitalWrite+1)^0,w,c
  3759  000EC2  0AFF               	xorlw	255
  3760  000EC4  1680               	andwf	128,f,c	;volatile
  3761  000EC6  EF53  F008         	goto	l238
  3762  000ECA                     l1651:
  3763  000ECA  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3764  000ECC  EF73  F007         	goto	u1220
  3765  000ED0  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3766  000ED2  E107               	bnz	u1221
  3767  000ED4  0E10               	movlw	16
  3768  000ED6  5C01               	subwf	digitalWrite@pin^0,w,c
  3769  000ED8  B0D8               	btfsc	status,0,c
  3770  000EDA  EF71  F007         	goto	u1221
  3771  000EDE  EF73  F007         	goto	u1220
  3772  000EE2                     u1221:
  3773  000EE2  EFA1  F007         	goto	l1659
  3774  000EE6                     u1220:
  3775  000EE6                     
  3776                           ;io.c: 20:         pin -=8;
  3777  000EE6  0EF8               	movlw	248
  3778  000EE8  2601               	addwf	digitalWrite@pin^0,f,c
  3779  000EEA  0EFF               	movlw	255
  3780  000EEC  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3781                           
  3782                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  3783  000EEE  5003               	movf	digitalWrite@value^0,w,c
  3784  000EF0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3785  000EF2  B4D8               	btfsc	status,2,c
  3786  000EF4  EF7E  F007         	goto	u1231
  3787  000EF8  EF80  F007         	goto	u1230
  3788  000EFC                     u1231:
  3789  000EFC  EF90  F007         	goto	l1657
  3790  000F00                     u1230:
  3791  000F00  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3792  000F04  0E01               	movlw	1
  3793  000F06  6E06               	movwf	(??_digitalWrite+1)^0,c
  3794  000F08  2A05               	incf	??_digitalWrite^0,f,c
  3795  000F0A  EF89  F007         	goto	u1244
  3796  000F0E                     u1245:
  3797  000F0E  90D8               	bcf	status,0,c
  3798  000F10  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3799  000F12                     u1244:
  3800  000F12  2E05               	decfsz	??_digitalWrite^0,f,c
  3801  000F14  EF87  F007         	goto	u1245
  3802  000F18  5006               	movf	(??_digitalWrite+1)^0,w,c
  3803  000F1A  1281               	iorwf	129,f,c	;volatile
  3804  000F1C  EF53  F008         	goto	l238
  3805  000F20                     l1657:
  3806  000F20  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3807  000F24  0E01               	movlw	1
  3808  000F26  6E06               	movwf	(??_digitalWrite+1)^0,c
  3809  000F28  2A05               	incf	??_digitalWrite^0,f,c
  3810  000F2A  EF99  F007         	goto	u1254
  3811  000F2E                     u1255:
  3812  000F2E  90D8               	bcf	status,0,c
  3813  000F30  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3814  000F32                     u1254:
  3815  000F32  2E05               	decfsz	??_digitalWrite^0,f,c
  3816  000F34  EF97  F007         	goto	u1255
  3817  000F38  5006               	movf	(??_digitalWrite+1)^0,w,c
  3818  000F3A  0AFF               	xorlw	255
  3819  000F3C  1681               	andwf	129,f,c	;volatile
  3820  000F3E  EF53  F008         	goto	l238
  3821  000F42                     l1659:
  3822  000F42  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3823  000F44  EFAF  F007         	goto	u1260
  3824  000F48  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3825  000F4A  E107               	bnz	u1261
  3826  000F4C  0E18               	movlw	24
  3827  000F4E  5C01               	subwf	digitalWrite@pin^0,w,c
  3828  000F50  B0D8               	btfsc	status,0,c
  3829  000F52  EFAD  F007         	goto	u1261
  3830  000F56  EFAF  F007         	goto	u1260
  3831  000F5A                     u1261:
  3832  000F5A  EFDD  F007         	goto	l1667
  3833  000F5E                     u1260:
  3834  000F5E                     
  3835                           ;io.c: 24:         pin -=16;
  3836  000F5E  0EF0               	movlw	240
  3837  000F60  2601               	addwf	digitalWrite@pin^0,f,c
  3838  000F62  0EFF               	movlw	255
  3839  000F64  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3840                           
  3841                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  3842  000F66  5003               	movf	digitalWrite@value^0,w,c
  3843  000F68  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3844  000F6A  B4D8               	btfsc	status,2,c
  3845  000F6C  EFBA  F007         	goto	u1271
  3846  000F70  EFBC  F007         	goto	u1270
  3847  000F74                     u1271:
  3848  000F74  EFCC  F007         	goto	l1665
  3849  000F78                     u1270:
  3850  000F78  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3851  000F7C  0E01               	movlw	1
  3852  000F7E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3853  000F80  2A05               	incf	??_digitalWrite^0,f,c
  3854  000F82  EFC5  F007         	goto	u1284
  3855  000F86                     u1285:
  3856  000F86  90D8               	bcf	status,0,c
  3857  000F88  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3858  000F8A                     u1284:
  3859  000F8A  2E05               	decfsz	??_digitalWrite^0,f,c
  3860  000F8C  EFC3  F007         	goto	u1285
  3861  000F90  5006               	movf	(??_digitalWrite+1)^0,w,c
  3862  000F92  1282               	iorwf	130,f,c	;volatile
  3863  000F94  EF53  F008         	goto	l238
  3864  000F98                     l1665:
  3865  000F98  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3866  000F9C  0E01               	movlw	1
  3867  000F9E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3868  000FA0  2A05               	incf	??_digitalWrite^0,f,c
  3869  000FA2  EFD5  F007         	goto	u1294
  3870  000FA6                     u1295:
  3871  000FA6  90D8               	bcf	status,0,c
  3872  000FA8  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3873  000FAA                     u1294:
  3874  000FAA  2E05               	decfsz	??_digitalWrite^0,f,c
  3875  000FAC  EFD3  F007         	goto	u1295
  3876  000FB0  5006               	movf	(??_digitalWrite+1)^0,w,c
  3877  000FB2  0AFF               	xorlw	255
  3878  000FB4  1682               	andwf	130,f,c	;volatile
  3879  000FB6  EF53  F008         	goto	l238
  3880  000FBA                     l1667:
  3881  000FBA  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3882  000FBC  EFEB  F007         	goto	u1300
  3883  000FC0  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3884  000FC2  E107               	bnz	u1301
  3885  000FC4  0E20               	movlw	32
  3886  000FC6  5C01               	subwf	digitalWrite@pin^0,w,c
  3887  000FC8  B0D8               	btfsc	status,0,c
  3888  000FCA  EFE9  F007         	goto	u1301
  3889  000FCE  EFEB  F007         	goto	u1300
  3890  000FD2                     u1301:
  3891  000FD2  EF19  F008         	goto	l1675
  3892  000FD6                     u1300:
  3893  000FD6                     
  3894                           ;io.c: 28:         pin -=24;
  3895  000FD6  0EE8               	movlw	232
  3896  000FD8  2601               	addwf	digitalWrite@pin^0,f,c
  3897  000FDA  0EFF               	movlw	255
  3898  000FDC  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3899                           
  3900                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  3901  000FDE  5003               	movf	digitalWrite@value^0,w,c
  3902  000FE0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3903  000FE2  B4D8               	btfsc	status,2,c
  3904  000FE4  EFF6  F007         	goto	u1311
  3905  000FE8  EFF8  F007         	goto	u1310
  3906  000FEC                     u1311:
  3907  000FEC  EF08  F008         	goto	l1673
  3908  000FF0                     u1310:
  3909  000FF0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3910  000FF4  0E01               	movlw	1
  3911  000FF6  6E06               	movwf	(??_digitalWrite+1)^0,c
  3912  000FF8  2A05               	incf	??_digitalWrite^0,f,c
  3913  000FFA  EF01  F008         	goto	u1324
  3914  000FFE                     u1325:
  3915  000FFE  90D8               	bcf	status,0,c
  3916  001000  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3917  001002                     u1324:
  3918  001002  2E05               	decfsz	??_digitalWrite^0,f,c
  3919  001004  EFFF  F007         	goto	u1325
  3920  001008  5006               	movf	(??_digitalWrite+1)^0,w,c
  3921  00100A  1283               	iorwf	131,f,c	;volatile
  3922  00100C  EF53  F008         	goto	l238
  3923  001010                     l1673:
  3924  001010  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3925  001014  0E01               	movlw	1
  3926  001016  6E06               	movwf	(??_digitalWrite+1)^0,c
  3927  001018  2A05               	incf	??_digitalWrite^0,f,c
  3928  00101A  EF11  F008         	goto	u1334
  3929  00101E                     u1335:
  3930  00101E  90D8               	bcf	status,0,c
  3931  001020  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3932  001022                     u1334:
  3933  001022  2E05               	decfsz	??_digitalWrite^0,f,c
  3934  001024  EF0F  F008         	goto	u1335
  3935  001028  5006               	movf	(??_digitalWrite+1)^0,w,c
  3936  00102A  0AFF               	xorlw	255
  3937  00102C  1683               	andwf	131,f,c	;volatile
  3938  00102E  EF53  F008         	goto	l238
  3939  001032                     l1675:
  3940  001032  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3941  001034  EF27  F008         	goto	u1340
  3942  001038  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3943  00103A  E107               	bnz	u1341
  3944  00103C  0E28               	movlw	40
  3945  00103E  5C01               	subwf	digitalWrite@pin^0,w,c
  3946  001040  B0D8               	btfsc	status,0,c
  3947  001042  EF25  F008         	goto	u1341
  3948  001046  EF27  F008         	goto	u1340
  3949  00104A                     u1341:
  3950  00104A  EF53  F008         	goto	l238
  3951  00104E                     u1340:
  3952  00104E                     
  3953                           ;io.c: 32:         pin -=32;
  3954  00104E  0EE0               	movlw	224
  3955  001050  2601               	addwf	digitalWrite@pin^0,f,c
  3956  001052  0EFF               	movlw	255
  3957  001054  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3958                           
  3959                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  3960  001056  5003               	movf	digitalWrite@value^0,w,c
  3961  001058  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3962  00105A  B4D8               	btfsc	status,2,c
  3963  00105C  EF32  F008         	goto	u1351
  3964  001060  EF34  F008         	goto	u1350
  3965  001064                     u1351:
  3966  001064  EF44  F008         	goto	l1681
  3967  001068                     u1350:
  3968  001068  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3969  00106C  0E01               	movlw	1
  3970  00106E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3971  001070  2A05               	incf	??_digitalWrite^0,f,c
  3972  001072  EF3D  F008         	goto	u1364
  3973  001076                     u1365:
  3974  001076  90D8               	bcf	status,0,c
  3975  001078  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3976  00107A                     u1364:
  3977  00107A  2E05               	decfsz	??_digitalWrite^0,f,c
  3978  00107C  EF3B  F008         	goto	u1365
  3979  001080  5006               	movf	(??_digitalWrite+1)^0,w,c
  3980  001082  1284               	iorwf	132,f,c	;volatile
  3981  001084  EF53  F008         	goto	l238
  3982  001088                     l1681:
  3983  001088  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3984  00108C  0E01               	movlw	1
  3985  00108E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3986  001090  2A05               	incf	??_digitalWrite^0,f,c
  3987  001092  EF4D  F008         	goto	u1374
  3988  001096                     u1375:
  3989  001096  90D8               	bcf	status,0,c
  3990  001098  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3991  00109A                     u1374:
  3992  00109A  2E05               	decfsz	??_digitalWrite^0,f,c
  3993  00109C  EF4B  F008         	goto	u1375
  3994  0010A0  5006               	movf	(??_digitalWrite+1)^0,w,c
  3995  0010A2  0AFF               	xorlw	255
  3996  0010A4  1684               	andwf	132,f,c	;volatile
  3997  0010A6                     l238:
  3998  0010A6  0012               	return		;funcret
  3999  0010A8                     __end_of_digitalWrite:
  4000                           	callstack 0
  4001                           
  4002 ;; *************** function _digitalRead *****************
  4003 ;; Defined at:
  4004 ;;		line 39 in file "io.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  pin             2    0[COMRAM] int 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;		None
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  2    0[COMRAM] int 
  4011 ;; Registers used:
  4012 ;;		wreg, status,2, status,0
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4018 ;;      Params:         2       0       0       0       0       0       0
  4019 ;;      Locals:         0       0       0       0       0       0       0
  4020 ;;      Temps:          3       0       0       0       0       0       0
  4021 ;;      Totals:         5       0       0       0       0       0       0
  4022 ;;Total ram usage:        5 bytes
  4023 ;; Hardware stack levels used: 1
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_kpDebounce
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text26
  4032  001274                     __ptext26:
  4033                           	callstack 0
  4034  001274                     _digitalRead:
  4035                           	callstack 29
  4036  001274                     
  4037                           ;io.c: 40:     if(pin <8){
  4038  001274  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4039  001276  EF48  F009         	goto	u1610
  4040  00127A  5002               	movf	(digitalRead@pin+1)^0,w,c
  4041  00127C  E107               	bnz	u1611
  4042  00127E  0E08               	movlw	8
  4043  001280  5C01               	subwf	digitalRead@pin^0,w,c
  4044  001282  B0D8               	btfsc	status,0,c
  4045  001284  EF46  F009         	goto	u1611
  4046  001288  EF48  F009         	goto	u1610
  4047  00128C                     u1611:
  4048  00128C  EF5C  F009         	goto	l1787
  4049  001290                     u1610:
  4050  001290                     
  4051                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  4052  001290  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4053  001294  0E01               	movlw	1
  4054  001296  6E04               	movwf	(??_digitalRead+1)^0,c
  4055  001298  2A03               	incf	??_digitalRead^0,f,c
  4056  00129A  EF51  F009         	goto	u1624
  4057  00129E                     u1625:
  4058  00129E  90D8               	bcf	status,0,c
  4059  0012A0  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4060  0012A2                     u1624:
  4061  0012A2  2E03               	decfsz	??_digitalRead^0,f,c
  4062  0012A4  EF4F  F009         	goto	u1625
  4063  0012A8  5004               	movf	(??_digitalRead+1)^0,w,c
  4064  0012AA  1480               	andwf	128,w,c	;volatile
  4065  0012AC  6E05               	movwf	(??_digitalRead+2)^0,c
  4066  0012AE  5005               	movf	(??_digitalRead+2)^0,w,c
  4067  0012B0  6E01               	movwf	?_digitalRead^0,c
  4068  0012B2  6A02               	clrf	(?_digitalRead+1)^0,c
  4069  0012B4  EFEE  F009         	goto	l242
  4070  0012B8                     l1787:
  4071  0012B8  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4072  0012BA  EF6A  F009         	goto	u1630
  4073  0012BE  5002               	movf	(digitalRead@pin+1)^0,w,c
  4074  0012C0  E107               	bnz	u1631
  4075  0012C2  0E10               	movlw	16
  4076  0012C4  5C01               	subwf	digitalRead@pin^0,w,c
  4077  0012C6  B0D8               	btfsc	status,0,c
  4078  0012C8  EF68  F009         	goto	u1631
  4079  0012CC  EF6A  F009         	goto	u1630
  4080  0012D0                     u1631:
  4081  0012D0  EF80  F009         	goto	l1795
  4082  0012D4                     u1630:
  4083  0012D4                     
  4084                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  4085  0012D4  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4086  0012D8  0EF8               	movlw	-8
  4087  0012DA  2603               	addwf	??_digitalRead^0,f,c
  4088  0012DC  0E01               	movlw	1
  4089  0012DE  6E04               	movwf	(??_digitalRead+1)^0,c
  4090  0012E0  2A03               	incf	??_digitalRead^0,f,c
  4091  0012E2  EF75  F009         	goto	u1644
  4092  0012E6                     u1645:
  4093  0012E6  90D8               	bcf	status,0,c
  4094  0012E8  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4095  0012EA                     u1644:
  4096  0012EA  2E03               	decfsz	??_digitalRead^0,f,c
  4097  0012EC  EF73  F009         	goto	u1645
  4098  0012F0  5004               	movf	(??_digitalRead+1)^0,w,c
  4099  0012F2  1481               	andwf	129,w,c	;volatile
  4100  0012F4  6E05               	movwf	(??_digitalRead+2)^0,c
  4101  0012F6  5005               	movf	(??_digitalRead+2)^0,w,c
  4102  0012F8  6E01               	movwf	?_digitalRead^0,c
  4103  0012FA  6A02               	clrf	(?_digitalRead+1)^0,c
  4104  0012FC  EFEE  F009         	goto	l242
  4105  001300                     l1795:
  4106  001300  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4107  001302  EF8E  F009         	goto	u1650
  4108  001306  5002               	movf	(digitalRead@pin+1)^0,w,c
  4109  001308  E107               	bnz	u1651
  4110  00130A  0E18               	movlw	24
  4111  00130C  5C01               	subwf	digitalRead@pin^0,w,c
  4112  00130E  B0D8               	btfsc	status,0,c
  4113  001310  EF8C  F009         	goto	u1651
  4114  001314  EF8E  F009         	goto	u1650
  4115  001318                     u1651:
  4116  001318  EFA4  F009         	goto	l1803
  4117  00131C                     u1650:
  4118  00131C                     
  4119                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  4120  00131C  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4121  001320  0EF0               	movlw	-16
  4122  001322  2603               	addwf	??_digitalRead^0,f,c
  4123  001324  0E01               	movlw	1
  4124  001326  6E04               	movwf	(??_digitalRead+1)^0,c
  4125  001328  2A03               	incf	??_digitalRead^0,f,c
  4126  00132A  EF99  F009         	goto	u1664
  4127  00132E                     u1665:
  4128  00132E  90D8               	bcf	status,0,c
  4129  001330  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4130  001332                     u1664:
  4131  001332  2E03               	decfsz	??_digitalRead^0,f,c
  4132  001334  EF97  F009         	goto	u1665
  4133  001338  5004               	movf	(??_digitalRead+1)^0,w,c
  4134  00133A  1482               	andwf	130,w,c	;volatile
  4135  00133C  6E05               	movwf	(??_digitalRead+2)^0,c
  4136  00133E  5005               	movf	(??_digitalRead+2)^0,w,c
  4137  001340  6E01               	movwf	?_digitalRead^0,c
  4138  001342  6A02               	clrf	(?_digitalRead+1)^0,c
  4139  001344  EFEE  F009         	goto	l242
  4140  001348                     l1803:
  4141  001348  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4142  00134A  EFB2  F009         	goto	u1670
  4143  00134E  5002               	movf	(digitalRead@pin+1)^0,w,c
  4144  001350  E107               	bnz	u1671
  4145  001352  0E20               	movlw	32
  4146  001354  5C01               	subwf	digitalRead@pin^0,w,c
  4147  001356  B0D8               	btfsc	status,0,c
  4148  001358  EFB0  F009         	goto	u1671
  4149  00135C  EFB2  F009         	goto	u1670
  4150  001360                     u1671:
  4151  001360  EFC8  F009         	goto	l1811
  4152  001364                     u1670:
  4153  001364                     
  4154                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  4155  001364  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4156  001368  0EE8               	movlw	-24
  4157  00136A  2603               	addwf	??_digitalRead^0,f,c
  4158  00136C  0E01               	movlw	1
  4159  00136E  6E04               	movwf	(??_digitalRead+1)^0,c
  4160  001370  2A03               	incf	??_digitalRead^0,f,c
  4161  001372  EFBD  F009         	goto	u1684
  4162  001376                     u1685:
  4163  001376  90D8               	bcf	status,0,c
  4164  001378  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4165  00137A                     u1684:
  4166  00137A  2E03               	decfsz	??_digitalRead^0,f,c
  4167  00137C  EFBB  F009         	goto	u1685
  4168  001380  5004               	movf	(??_digitalRead+1)^0,w,c
  4169  001382  1483               	andwf	131,w,c	;volatile
  4170  001384  6E05               	movwf	(??_digitalRead+2)^0,c
  4171  001386  5005               	movf	(??_digitalRead+2)^0,w,c
  4172  001388  6E01               	movwf	?_digitalRead^0,c
  4173  00138A  6A02               	clrf	(?_digitalRead+1)^0,c
  4174  00138C  EFEE  F009         	goto	l242
  4175  001390                     l1811:
  4176  001390  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4177  001392  EFD6  F009         	goto	u1690
  4178  001396  5002               	movf	(digitalRead@pin+1)^0,w,c
  4179  001398  E107               	bnz	u1691
  4180  00139A  0E28               	movlw	40
  4181  00139C  5C01               	subwf	digitalRead@pin^0,w,c
  4182  00139E  B0D8               	btfsc	status,0,c
  4183  0013A0  EFD4  F009         	goto	u1691
  4184  0013A4  EFD6  F009         	goto	u1690
  4185  0013A8                     u1691:
  4186  0013A8  EFEC  F009         	goto	l247
  4187  0013AC                     u1690:
  4188  0013AC                     
  4189                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  4190  0013AC  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4191  0013B0  0EE0               	movlw	-32
  4192  0013B2  2603               	addwf	??_digitalRead^0,f,c
  4193  0013B4  0E01               	movlw	1
  4194  0013B6  6E04               	movwf	(??_digitalRead+1)^0,c
  4195  0013B8  2A03               	incf	??_digitalRead^0,f,c
  4196  0013BA  EFE1  F009         	goto	u1704
  4197  0013BE                     u1705:
  4198  0013BE  90D8               	bcf	status,0,c
  4199  0013C0  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4200  0013C2                     u1704:
  4201  0013C2  2E03               	decfsz	??_digitalRead^0,f,c
  4202  0013C4  EFDF  F009         	goto	u1705
  4203  0013C8  5004               	movf	(??_digitalRead+1)^0,w,c
  4204  0013CA  1484               	andwf	132,w,c	;volatile
  4205  0013CC  6E05               	movwf	(??_digitalRead+2)^0,c
  4206  0013CE  5005               	movf	(??_digitalRead+2)^0,w,c
  4207  0013D0  6E01               	movwf	?_digitalRead^0,c
  4208  0013D2  6A02               	clrf	(?_digitalRead+1)^0,c
  4209  0013D4  EFEE  F009         	goto	l242
  4210  0013D8                     l247:
  4211  0013D8                     
  4212                           ;io.c: 51:     return -1;
  4213  0013D8  6801               	setf	?_digitalRead^0,c
  4214  0013DA  6802               	setf	(?_digitalRead+1)^0,c
  4215  0013DC                     l242:
  4216  0013DC  0012               	return		;funcret
  4217  0013DE                     __end_of_digitalRead:
  4218                           	callstack 0
  4219                           
  4220 ;; *************** function ___wmul *****************
  4221 ;; Defined at:
  4222 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;  multiplier      2    8[COMRAM] unsigned int 
  4225 ;;  multiplicand    2   10[COMRAM] unsigned int 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;  product         2   12[COMRAM] unsigned int 
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  2    8[COMRAM] unsigned int 
  4230 ;; Registers used:
  4231 ;;		wreg, status,2, status,0, prodl, prodh
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4237 ;;      Params:         4       0       0       0       0       0       0
  4238 ;;      Locals:         2       0       0       0       0       0       0
  4239 ;;      Temps:          0       0       0       0       0       0       0
  4240 ;;      Totals:         6       0       0       0       0       0       0
  4241 ;;Total ram usage:        6 bytes
  4242 ;; Hardware stack levels used: 1
  4243 ;; This function calls:
  4244 ;;		Nothing
  4245 ;; This function is called by:
  4246 ;;		_main
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           	psect	text27
  4251  001BA4                     __ptext27:
  4252                           	callstack 0
  4253  001BA4                     ___wmul:
  4254                           	callstack 30
  4255  001BA4  5009               	movf	___wmul@multiplier^0,w,c
  4256  001BA6  020B               	mulwf	___wmul@multiplicand^0,c
  4257  001BA8  CFF3 F00D          	movff	prodl,___wmul@product
  4258  001BAC  CFF4 F00E          	movff	prodh,___wmul@product+1
  4259  001BB0  5009               	movf	___wmul@multiplier^0,w,c
  4260  001BB2  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  4261  001BB4  50F3               	movf	243,w,c
  4262  001BB6  260E               	addwf	(___wmul@product+1)^0,f,c
  4263  001BB8  500A               	movf	(___wmul@multiplier+1)^0,w,c
  4264  001BBA  020B               	mulwf	___wmul@multiplicand^0,c
  4265  001BBC  50F3               	movf	243,w,c
  4266  001BBE  260E               	addwf	(___wmul@product+1)^0,f,c
  4267  001BC0  C00D  F009         	movff	___wmul@product,?___wmul
  4268  001BC4  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  4269  001BC8  0012               	return		;funcret
  4270  001BCA                     __end_of___wmul:
  4271                           	callstack 0
  4272                           
  4273 ;; *************** function ___awmod *****************
  4274 ;; Defined at:
  4275 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  dividend        2    8[COMRAM] int 
  4278 ;;  divisor         2   10[COMRAM] int 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;  sign            1   13[COMRAM] unsigned char 
  4281 ;;  counter         1   12[COMRAM] unsigned char 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  2    8[COMRAM] int 
  4284 ;; Registers used:
  4285 ;;		wreg, status,2, status,0
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4291 ;;      Params:         4       0       0       0       0       0       0
  4292 ;;      Locals:         2       0       0       0       0       0       0
  4293 ;;      Temps:          0       0       0       0       0       0       0
  4294 ;;      Totals:         6       0       0       0       0       0       0
  4295 ;;Total ram usage:        6 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; This function calls:
  4298 ;;		Nothing
  4299 ;; This function is called by:
  4300 ;;		_main
  4301 ;;		_lcdNumber
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           	psect	text28
  4306  00173C                     __ptext28:
  4307                           	callstack 0
  4308  00173C                     ___awmod:
  4309                           	callstack 30
  4310  00173C  0E00               	movlw	0
  4311  00173E  6E0E               	movwf	___awmod@sign^0,c
  4312  001740  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  4313  001742  EFA7  F00B         	goto	u1950
  4314  001746  EFA5  F00B         	goto	u1951
  4315  00174A                     u1951:
  4316  00174A  EFAD  F00B         	goto	l2013
  4317  00174E                     u1950:
  4318  00174E  6C09               	negf	___awmod@dividend^0,c
  4319  001750  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4320  001752  B0D8               	btfsc	status,0,c
  4321  001754  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4322  001756  0E01               	movlw	1
  4323  001758  6E0E               	movwf	___awmod@sign^0,c
  4324  00175A                     l2013:
  4325  00175A  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  4326  00175C  EFB4  F00B         	goto	u1960
  4327  001760  EFB2  F00B         	goto	u1961
  4328  001764                     u1961:
  4329  001764  EFB8  F00B         	goto	l2017
  4330  001768                     u1960:
  4331  001768  6C0B               	negf	___awmod@divisor^0,c
  4332  00176A  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  4333  00176C  B0D8               	btfsc	status,0,c
  4334  00176E  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  4335  001770                     l2017:
  4336  001770  500B               	movf	___awmod@divisor^0,w,c
  4337  001772  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  4338  001774  B4D8               	btfsc	status,2,c
  4339  001776  EFBF  F00B         	goto	u1971
  4340  00177A  EFC1  F00B         	goto	u1970
  4341  00177E                     u1971:
  4342  00177E  EFE5  F00B         	goto	l2033
  4343  001782                     u1970:
  4344  001782  0E01               	movlw	1
  4345  001784  6E0D               	movwf	___awmod@counter^0,c
  4346  001786  EFC9  F00B         	goto	l2023
  4347  00178A                     l2021:
  4348  00178A  90D8               	bcf	status,0,c
  4349  00178C  360B               	rlcf	___awmod@divisor^0,f,c
  4350  00178E  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  4351  001790  2A0D               	incf	___awmod@counter^0,f,c
  4352  001792                     l2023:
  4353  001792  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  4354  001794  EFCE  F00B         	goto	u1981
  4355  001798  EFD0  F00B         	goto	u1980
  4356  00179C                     u1981:
  4357  00179C  EFC5  F00B         	goto	l2021
  4358  0017A0                     u1980:
  4359  0017A0                     l2025:
  4360  0017A0  500B               	movf	___awmod@divisor^0,w,c
  4361  0017A2  5C09               	subwf	___awmod@dividend^0,w,c
  4362  0017A4  500C               	movf	(___awmod@divisor+1)^0,w,c
  4363  0017A6  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  4364  0017A8  A0D8               	btfss	status,0,c
  4365  0017AA  EFD9  F00B         	goto	u1991
  4366  0017AE  EFDB  F00B         	goto	u1990
  4367  0017B2                     u1991:
  4368  0017B2  EFDF  F00B         	goto	l2029
  4369  0017B6                     u1990:
  4370  0017B6  500B               	movf	___awmod@divisor^0,w,c
  4371  0017B8  5E09               	subwf	___awmod@dividend^0,f,c
  4372  0017BA  500C               	movf	(___awmod@divisor+1)^0,w,c
  4373  0017BC  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  4374  0017BE                     l2029:
  4375  0017BE  90D8               	bcf	status,0,c
  4376  0017C0  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  4377  0017C2  320B               	rrcf	___awmod@divisor^0,f,c
  4378  0017C4  2E0D               	decfsz	___awmod@counter^0,f,c
  4379  0017C6  EFD0  F00B         	goto	l2025
  4380  0017CA                     l2033:
  4381  0017CA  500E               	movf	___awmod@sign^0,w,c
  4382  0017CC  B4D8               	btfsc	status,2,c
  4383  0017CE  EFEB  F00B         	goto	u2001
  4384  0017D2  EFED  F00B         	goto	u2000
  4385  0017D6                     u2001:
  4386  0017D6  EFF1  F00B         	goto	l2037
  4387  0017DA                     u2000:
  4388  0017DA  6C09               	negf	___awmod@dividend^0,c
  4389  0017DC  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4390  0017DE  B0D8               	btfsc	status,0,c
  4391  0017E0  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4392  0017E2                     l2037:
  4393  0017E2  C009  F009         	movff	___awmod@dividend,?___awmod
  4394  0017E6  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  4395  0017EA  0012               	return		;funcret
  4396  0017EC                     __end_of___awmod:
  4397                           	callstack 0
  4398                           
  4399 ;; *************** function ___awdiv *****************
  4400 ;; Defined at:
  4401 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  dividend        2    0[COMRAM] int 
  4404 ;;  divisor         2    2[COMRAM] int 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;  quotient        2    6[COMRAM] int 
  4407 ;;  sign            1    5[COMRAM] unsigned char 
  4408 ;;  counter         1    4[COMRAM] unsigned char 
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  2    0[COMRAM] int 
  4411 ;; Registers used:
  4412 ;;		wreg, status,2, status,0
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4418 ;;      Params:         4       0       0       0       0       0       0
  4419 ;;      Locals:         4       0       0       0       0       0       0
  4420 ;;      Temps:          0       0       0       0       0       0       0
  4421 ;;      Totals:         8       0       0       0       0       0       0
  4422 ;;Total ram usage:        8 bytes
  4423 ;; Hardware stack levels used: 1
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		_main
  4428 ;;		_lcdNumber
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           	psect	text29
  4433  001514                     __ptext29:
  4434                           	callstack 0
  4435  001514                     ___awdiv:
  4436                           	callstack 30
  4437  001514  0E00               	movlw	0
  4438  001516  6E06               	movwf	___awdiv@sign^0,c
  4439  001518  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4440  00151A  EF93  F00A         	goto	u1890
  4441  00151E  EF91  F00A         	goto	u1891
  4442  001522                     u1891:
  4443  001522  EF99  F00A         	goto	l1969
  4444  001526                     u1890:
  4445  001526  6C03               	negf	___awdiv@divisor^0,c
  4446  001528  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4447  00152A  B0D8               	btfsc	status,0,c
  4448  00152C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4449  00152E  0E01               	movlw	1
  4450  001530  6E06               	movwf	___awdiv@sign^0,c
  4451  001532                     l1969:
  4452  001532  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4453  001534  EFA0  F00A         	goto	u1900
  4454  001538  EF9E  F00A         	goto	u1901
  4455  00153C                     u1901:
  4456  00153C  EFA6  F00A         	goto	l1975
  4457  001540                     u1900:
  4458  001540  6C01               	negf	___awdiv@dividend^0,c
  4459  001542  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4460  001544  B0D8               	btfsc	status,0,c
  4461  001546  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4462  001548  0E01               	movlw	1
  4463  00154A  1A06               	xorwf	___awdiv@sign^0,f,c
  4464  00154C                     l1975:
  4465  00154C  0E00               	movlw	0
  4466  00154E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4467  001550  0E00               	movlw	0
  4468  001552  6E07               	movwf	___awdiv@quotient^0,c
  4469  001554  5003               	movf	___awdiv@divisor^0,w,c
  4470  001556  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4471  001558  B4D8               	btfsc	status,2,c
  4472  00155A  EFB1  F00A         	goto	u1911
  4473  00155E  EFB3  F00A         	goto	u1910
  4474  001562                     u1911:
  4475  001562  EFDB  F00A         	goto	l1997
  4476  001566                     u1910:
  4477  001566  0E01               	movlw	1
  4478  001568  6E05               	movwf	___awdiv@counter^0,c
  4479  00156A  EFBB  F00A         	goto	l1983
  4480  00156E                     l1981:
  4481  00156E  90D8               	bcf	status,0,c
  4482  001570  3603               	rlcf	___awdiv@divisor^0,f,c
  4483  001572  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4484  001574  2A05               	incf	___awdiv@counter^0,f,c
  4485  001576                     l1983:
  4486  001576  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4487  001578  EFC0  F00A         	goto	u1921
  4488  00157C  EFC2  F00A         	goto	u1920
  4489  001580                     u1921:
  4490  001580  EFB7  F00A         	goto	l1981
  4491  001584                     u1920:
  4492  001584                     l1985:
  4493  001584  90D8               	bcf	status,0,c
  4494  001586  3607               	rlcf	___awdiv@quotient^0,f,c
  4495  001588  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4496  00158A  5003               	movf	___awdiv@divisor^0,w,c
  4497  00158C  5C01               	subwf	___awdiv@dividend^0,w,c
  4498  00158E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4499  001590  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4500  001592  A0D8               	btfss	status,0,c
  4501  001594  EFCE  F00A         	goto	u1931
  4502  001598  EFD0  F00A         	goto	u1930
  4503  00159C                     u1931:
  4504  00159C  EFD5  F00A         	goto	l1993
  4505  0015A0                     u1930:
  4506  0015A0  5003               	movf	___awdiv@divisor^0,w,c
  4507  0015A2  5E01               	subwf	___awdiv@dividend^0,f,c
  4508  0015A4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4509  0015A6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4510  0015A8  8007               	bsf	___awdiv@quotient^0,0,c
  4511  0015AA                     l1993:
  4512  0015AA  90D8               	bcf	status,0,c
  4513  0015AC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4514  0015AE  3203               	rrcf	___awdiv@divisor^0,f,c
  4515  0015B0  2E05               	decfsz	___awdiv@counter^0,f,c
  4516  0015B2  EFC2  F00A         	goto	l1985
  4517  0015B6                     l1997:
  4518  0015B6  5006               	movf	___awdiv@sign^0,w,c
  4519  0015B8  B4D8               	btfsc	status,2,c
  4520  0015BA  EFE1  F00A         	goto	u1941
  4521  0015BE  EFE3  F00A         	goto	u1940
  4522  0015C2                     u1941:
  4523  0015C2  EFE7  F00A         	goto	l2001
  4524  0015C6                     u1940:
  4525  0015C6  6C07               	negf	___awdiv@quotient^0,c
  4526  0015C8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4527  0015CA  B0D8               	btfsc	status,0,c
  4528  0015CC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4529  0015CE                     l2001:
  4530  0015CE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4531  0015D2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4532  0015D6  0012               	return		;funcret
  4533  0015D8                     __end_of___awdiv:
  4534                           	callstack 0
  4535                           
  4536                           	psect	rparam
  4537  0000                     
  4538                           	psect	idloc
  4539                           
  4540                           ;Config register IDLOC0 @ 0x200000
  4541                           ;	unspecified, using default values
  4542  200000                     	org	2097152
  4543  200000  FF                 	db	255
  4544                           
  4545                           ;Config register IDLOC1 @ 0x200001
  4546                           ;	unspecified, using default values
  4547  200001                     	org	2097153
  4548  200001  FF                 	db	255
  4549                           
  4550                           ;Config register IDLOC2 @ 0x200002
  4551                           ;	unspecified, using default values
  4552  200002                     	org	2097154
  4553  200002  FF                 	db	255
  4554                           
  4555                           ;Config register IDLOC3 @ 0x200003
  4556                           ;	unspecified, using default values
  4557  200003                     	org	2097155
  4558  200003  FF                 	db	255
  4559                           
  4560                           ;Config register IDLOC4 @ 0x200004
  4561                           ;	unspecified, using default values
  4562  200004                     	org	2097156
  4563  200004  FF                 	db	255
  4564                           
  4565                           ;Config register IDLOC5 @ 0x200005
  4566                           ;	unspecified, using default values
  4567  200005                     	org	2097157
  4568  200005  FF                 	db	255
  4569                           
  4570                           ;Config register IDLOC6 @ 0x200006
  4571                           ;	unspecified, using default values
  4572  200006                     	org	2097158
  4573  200006  FF                 	db	255
  4574                           
  4575                           ;Config register IDLOC7 @ 0x200007
  4576                           ;	unspecified, using default values
  4577  200007                     	org	2097159
  4578  200007  FF                 	db	255
  4579                           
  4580                           	psect	config
  4581                           
  4582                           ; Padding undefined space
  4583  300000                     	org	3145728
  4584  300000  FF                 	db	255
  4585                           
  4586                           ;Config register CONFIG1H @ 0x300001
  4587                           ;	Oscillator Selection bits
  4588                           ;	OSC = HS, HS oscillator
  4589                           ;	Fail-Safe Clock Monitor Enable bit
  4590                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4591                           ;	Internal/External Oscillator Switchover bit
  4592                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4593  300001                     	org	3145729
  4594  300001  02                 	db	2
  4595                           
  4596                           ;Config register CONFIG2L @ 0x300002
  4597                           ;	Power-up Timer Enable bit
  4598                           ;	PWRT = OFF, PWRT disabled
  4599                           ;	Brown-out Reset Enable bits
  4600                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4601                           ;	Brown Out Reset Voltage bits
  4602                           ;	BORV = 0x2E, user specified literal
  4603  300002                     	org	3145730
  4604  300002  71                 	db	369
  4605                           
  4606                           ;Config register CONFIG2H @ 0x300003
  4607                           ;	Watchdog Timer Enable bit
  4608                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4609                           ;	Watchdog Timer Postscale Select bits
  4610                           ;	WDTPS = 1, 1:1
  4611  300003                     	org	3145731
  4612  300003  00                 	db	0
  4613                           
  4614                           ; Padding undefined space
  4615  300004                     	org	3145732
  4616  300004  FF                 	db	255
  4617                           
  4618                           ;Config register CONFIG3H @ 0x300005
  4619                           ;	CCP2 MUX bit
  4620                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4621                           ;	PORTB A/D Enable bit
  4622                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4623                           ;	Low-Power Timer1 Oscillator Enable bit
  4624                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4625                           ;	MCLR Pin Enable bit
  4626                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4627  300005                     	org	3145733
  4628  300005  83                 	db	131
  4629                           
  4630                           ;Config register CONFIG4L @ 0x300006
  4631                           ;	Stack Full/Underflow Reset Enable bit
  4632                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4633                           ;	Single-Supply ICSP Enable bit
  4634                           ;	LVP = OFF, Single-Supply ICSP disabled
  4635                           ;	Extended Instruction Set Enable bit
  4636                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4637                           ;	Background Debugger Enable bit
  4638                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4639  300006                     	org	3145734
  4640  300006  80                 	db	128
  4641                           
  4642                           ; Padding undefined space
  4643  300007                     	org	3145735
  4644  300007  FF                 	db	255
  4645                           
  4646                           ;Config register CONFIG5L @ 0x300008
  4647                           ;	Code Protection bit
  4648                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4649                           ;	Code Protection bit
  4650                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4651                           ;	Code Protection bit
  4652                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4653                           ;	Code Protection bit
  4654                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4655  300008                     	org	3145736
  4656  300008  0F                 	db	15
  4657                           
  4658                           ;Config register CONFIG5H @ 0x300009
  4659                           ;	Boot Block Code Protection bit
  4660                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4661                           ;	Data EEPROM Code Protection bit
  4662                           ;	CPD = OFF, Data EEPROM not code-protected
  4663  300009                     	org	3145737
  4664  300009  C0                 	db	192
  4665                           
  4666                           ;Config register CONFIG6L @ 0x30000A
  4667                           ;	Write Protection bit
  4668                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4669                           ;	Write Protection bit
  4670                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4671                           ;	Write Protection bit
  4672                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4673                           ;	Write Protection bit
  4674                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4675  30000A                     	org	3145738
  4676  30000A  0F                 	db	15
  4677                           
  4678                           ;Config register CONFIG6H @ 0x30000B
  4679                           ;	Configuration Register Write Protection bit
  4680                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4681                           ;	Boot Block Write Protection bit
  4682                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4683                           ;	Data EEPROM Write Protection bit
  4684                           ;	WRTD = OFF, Data EEPROM not write-protected
  4685  30000B                     	org	3145739
  4686  30000B  E0                 	db	224
  4687                           
  4688                           ;Config register CONFIG7L @ 0x30000C
  4689                           ;	Table Read Protection bit
  4690                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4691                           ;	Table Read Protection bit
  4692                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4693                           ;	Table Read Protection bit
  4694                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4695                           ;	Table Read Protection bit
  4696                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4697  30000C                     	org	3145740
  4698  30000C  0F                 	db	15
  4699                           
  4700                           ;Config register CONFIG7H @ 0x30000D
  4701                           ;	Boot Block Table Read Protection bit
  4702                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4703  30000D                     	org	3145741
  4704  30000D  40                 	db	64
  4705                           tosu	equ	0xFFF
  4706                           tosh	equ	0xFFE
  4707                           tosl	equ	0xFFD
  4708                           stkptr	equ	0xFFC
  4709                           pclatu	equ	0xFFB
  4710                           pclath	equ	0xFFA
  4711                           pcl	equ	0xFF9
  4712                           tblptru	equ	0xFF8
  4713                           tblptrh	equ	0xFF7
  4714                           tblptrl	equ	0xFF6
  4715                           tablat	equ	0xFF5
  4716                           prodh	equ	0xFF4
  4717                           prodl	equ	0xFF3
  4718                           indf0	equ	0xFEF
  4719                           postinc0	equ	0xFEE
  4720                           postdec0	equ	0xFED
  4721                           preinc0	equ	0xFEC
  4722                           plusw0	equ	0xFEB
  4723                           fsr0h	equ	0xFEA
  4724                           fsr0l	equ	0xFE9
  4725                           wreg	equ	0xFE8
  4726                           indf1	equ	0xFE7
  4727                           postinc1	equ	0xFE6
  4728                           postdec1	equ	0xFE5
  4729                           preinc1	equ	0xFE4
  4730                           plusw1	equ	0xFE3
  4731                           fsr1h	equ	0xFE2
  4732                           fsr1l	equ	0xFE1
  4733                           bsr	equ	0xFE0
  4734                           indf2	equ	0xFDF
  4735                           postinc2	equ	0xFDE
  4736                           postdec2	equ	0xFDD
  4737                           preinc2	equ	0xFDC
  4738                           plusw2	equ	0xFDB
  4739                           fsr2h	equ	0xFDA
  4740                           fsr2l	equ	0xFD9
  4741                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    26
    Data        104
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     28      40
    BANK0           128      0     104
    BANK1           256    226     226
    BANK2           256      0     104
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sacaCarta@valor	PTR int  size(2) Largest target is 104
		 -> main@valor(BANK1[104]), 

    sacaCarta@namesa	PTR int  size(2) Largest target is 104
		 -> main@namesa(BANK1[104]), 

    mesaReset@namesa	PTR int  size(2) Largest target is 104
		 -> main@namesa(BANK1[104]), 


Critical Paths under _main in COMRAM

    _main->_sacaCarta
    _sacaCarta->_lcdChar
    _timerReset->___llmod
    _lcdChar->_pushByte
    _rgbInit->_pinMode
    _rgbColor->_digitalWrite
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    ___wmul->___awdiv
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               230   230      0  181787
                                             24 COMRAM     4     4      0
                                              0 BANK1    226   226      0
                            ___awdiv
                            ___awmod
                             ___wmul
                         _kpDebounce
                             _kpInit
                             _kpRead
                            _lcdChar
                         _lcdCommand
                            _lcdInit
                          _mesaReset
                           _rgbColor
                            _rgbInit
                          _sacaCarta
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sacaCarta                                           10     2      8   29263
                                             14 COMRAM    10     2      8
                            ___llmod
                            _lcdChar
                         _timerReset
                          _timerWait
 ---------------------------------------------------------------------------------
 (2) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timerReset                                           4     2      2     167
                                              9 COMRAM     4     2      2
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0   27555
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1071
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) _rgbInit                                              0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _rgbColor                                             2     0      2    5450
                                              6 COMRAM     2     0      2
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _mesaReset                                            4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   60652
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   27261
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   27525
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   27153
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    5536
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    5136
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    2568
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   16705
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _soWrite                                              3     1      2   16221
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _PulseEnClock                                         0     0      0    5156
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _PulseClockData                                       0     0      0    5156
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _digitalWrite                                         6     2      4    5156
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    2880
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    2580
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___wmul
     ___awdiv (ARG)
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _kpRead
   _lcdChar
     _delayMicro
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
   _lcdCommand
     _delayMili
     _pushByte
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _mesaReset
   _rgbColor
     _digitalWrite
   _rgbInit
     _pinMode
   _sacaCarta
     ___llmod
     _lcdChar
     _timerReset
       ___llmod (ARG)
     _timerWait
   _timerInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      68       9       40.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     E2      E2       7       88.3%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      68       5       81.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1C      28       1       31.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DA      15        0.0%
DATA                 0      0     1DA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Dec 16 16:35:06 2021

         _pulseEnablePin 1A0A                       l34 1272                       l27 19C6  
                     l79 1C40                       l99 14FA             ___awdiv@sign 0006  
                     _v0 0026                       _v1 0025                       _v2 0024  
                     _v3 0023      ___wmul@multiplicand 000B                      l101 1512  
                    l104 1AF8                      l121 1B28                      l130 1934  
                    l115 1C4A                      l124 1A4A                      l133 1C26  
                    l141 1C08                      l127 1BA2                      l303 173A  
                    l242 13DC                      l243 13D8                      l156 168A  
                    l332 1C28                      l341 1C48                      l238 10A6  
                    l318 1A88                      l247 13D8                      l335 1C36  
                    l344 1BC8                      l272 0E58                      l282 1B52  
                    l290 1982                      l338 1BEA                      l285 1B7C  
                    l279 1AC6                      l575 15D6                      l771 1872  
                    l588 17EA                      l764 1862             ___awmod@sign 000E  
                    wreg 000FE8                     l2001 15CE                     l2011 1756  
                   l2021 178A                     l2013 175A                     l2005 173C  
                   l2101 0840                     l2031 17C4                     l2023 1792  
                   l2015 1768                     l2007 1740                     l2111 08DC  
                   l2103 086A                     l2025 17A0                     l2033 17CA  
                   l2017 1770                     l2009 174E                     l2113 090C  
                   l2105 0876                     l2121 098A                     l2041 061C  
                   l2035 17DA                     l2027 17B6                     l2019 1782  
                   l2131 0B3C                     l2123 099C                     l2107 087C  
                   l2115 0928                     l2051 065C                     l2043 062C  
                   l2037 17E2                     l2029 17BE                     l2141 0BD0  
                   l2133 0B58                     l2125 0A64                     l2117 093C  
                   l2109 08AC                     l2061 06BE                     l2053 0664  
                   l2045 063E                     l2143 0BDC                     l2135 0B74  
                   l2127 0B1C                     l2119 0958                     l2071 06FE  
                   l2063 06D0                     l2055 0674                     l2047 064A  
                   l2145 0BE6                     l2137 0B80                     l2129 0B28  
                   l2081 0732                     l2073 070C                     l2065 06DE  
                   l2057 0684                     l2049 0654                     l2147 0BEE  
                   l2139 0B92                     l2091 07A2                     l2083 0744  
                   l2075 0714                     l2067 06F0                     l2059 0688  
                   l1701 196E                     l2149 0BF6                     l2093 07D2  
                   l2085 0760                     l2077 071A                     l2069 06F8  
                   l1703 197E                     l1711 0C0C                     l2095 0802  
                   l2087 076C                     l2079 0724                     l1721 0C98  
                   l1713 0C28                     l1705 1A0A                     l2089 0772  
                   l2097 081E                     l1811 1390                     l1803 1348  
                   l1651 0ECA                     l1643 0E5A                     l1731 0D22  
                   l1723 0CAA                     l1715 0C3A                     l1707 1A1E  
                   l2099 082E                     l1813 13AC                     l1805 1364  
                   l1661 0F5E                     l1653 0EE6                     l1645 0E76  
                   l1741 0DBE                     l1733 0D46                     l1725 0CCE  
                   l1717 0C5A                     l1709 1A2A                     l1901 1684  
                   l1821 17EC                     l1671 0FF0                     l1663 0F78  
                   l1655 0F00                     l1647 0E88                     l1743 0DE4  
                   l1735 0D6C                     l1727 0CF4                     l1719 0C7C  
                   l1751 1AFA                     l1831 1842                     l1823 1802  
                   l1903 1C42                     l1681 1088                     l1673 1010  
                   l1665 0F98                     l1657 0F20                     l1649 0EA8  
                   l1921 14C8                     l1913 140E                     l1745 0E00  
                   l1737 0D88                     l1729 0D10                     l1817 1A8A  
                   l1753 1B06                     l1833 1852                     l1825 180A  
                   l1761 1BD4                     l1905 1C46                     l1675 1032  
                   l1667 0FBA                     l1659 0F42                     l1683 1B2A  
                   l1931 14F2                     l1915 145A                     l1907 13DE  
                   l1747 0E12                     l1739 0D9A                     l1755 1B0A  
                   l1819 1B80                     l1843 198C                     l1835 185C  
                   l1827 1816                     l1763 1BD8                     l1771 1C28  
                   l1851 10AC                     l1781 1290                     l1677 104E  
                   l1669 0FD6                     l1685 1B54                     l1933 150A  
                   l1917 1480                     l1925 14D0                     l1909 13EE  
                   l1749 0E36                     l1757 18DE                     l1845 19A6  
                   l1837 1984                     l1941 16B2                     l1829 1824  
                   l1773 1BEE                     l1765 1BE0                     l1861 117E  
                   l1853 10DE                     l1679 1068                     l1695 194E  
                   l1687 1936                     l1927 14E8                     l1919 149E  
                   l1935 1C38                     l1847 19AA                     l1951 170E  
                   l1943 16C6                     l1775 1BFC                     l1767 1BE4  
                   l1759 1BCA                     l1855 10E2                     l1961 1514  
                   l1697 1966                     l1689 194A                     l1929 14EE  
                   l1777 1C0C                     l1953 1726                     l1945 16D4  
                   l1937 168C                     l1881 1A4C                     l1769 1BE8  
                   l1873 11F0                     l1865 118A                     l1857 112A  
                   l1849 10A8                     l1971 1540                     l1963 1518  
                   l1955 1BA4                     l1795 1300                     l1787 12B8  
                   l1779 1274                     l1699 196C                     l1883 1AC8  
                   l1891 1644                     l1947 16EC                     l1939 169A  
                   l1875 11F6                     l1867 11E0                     l1859 1172  
                   l1981 156E                     l1973 1548                     l1965 1526  
                   l1957 1BC0                     l1797 131C                     l1789 12D4  
                   l1885 1AF4                     l1893 165E                     l1949 1700  
                   l1877 1234                     l1991 15A8                     l1983 1576  
                   l1975 154C                     l1967 152E                     l1895 166C  
                   l1887 15D8                     l1993 15AA                     l1985 1584  
                   l1977 1554                     l1969 1532                     l1897 1678  
                   l1889 1638                     l1995 15B0                     l1987 158A  
                   l1979 1566                     l1899 167E                     l1989 15A0  
                   l1997 15B6                     l1999 15C6                     u2000 17DA  
                   u2001 17D6                     u2011 0636                     u1300 0FD6  
                   u1220 0EE6                     u1204 0E9A                     u2100 0840  
                   u1301 0FD2                     u1221 0EE2                     u1205 0E96  
                   u2101 083C                     u2021 0644                     u1310 0FF0  
                   u1230 0F00                     u1214 0EBA                     u2110 086A  
                   u2030 06BE                     u1311 0FEC                     u1231 0EFC  
                   u1215 0EB6                     u2111 0866                     u2031 06BA  
                   u1400 0C3A                     u2120 093C                     u2040 06DE  
                   u1401 0C36                     u2121 0938                     u2041 06DA  
                   u2130 0958                     u2050 06F0                     u2131 0954  
                   u2051 06EC                     u1340 104E                     u1324 1002  
                   u1260 0F5E                     u1244 0F12                     u1180 0E76  
                   u2140 099C                     u2060 0732                     u1341 104A  
                   u1325 0FFE                     u1261 0F5A                     u1245 0F0E  
                   u1181 0E72                     u2141 0998                     u2061 072E  
                   u1350 1068                     u1334 1022                     u1270 0F78  
                   u1254 0F32                     u1190 0E88                     u1510 0D88  
                   u1430 0C98                     u1414 0C4C                     u2150 0B3C  
                   u2070 0744                     u1351 1064                     u1335 101E  
                   u1271 0F74                     u1255 0F2E                     u1191 0E84  
                   u1511 0D84                     u1431 0C94                     u1415 0C48  
                   u2151 0B38                     u2071 0740                     u1520 0D9A  
                   u1504 0D5C                     u1440 0CAA                     u1424 0C6C  
                   u1600 1C36                     u2160 0B58                     u2080 0760  
                   u1521 0D96                     u1505 0D58                     u1441 0CA6  
                   u1425 0C68                     u1601 1C32                     u2161 0B54  
                   u2081 075C                     u1610 1290                     u2170 0B74  
                   u2090 082E                     u1611 128C                     u2171 0B70  
                   u2091 082A                     u1364 107A                     u1284 0F8A  
                   u1380 197E                     u1365 1076                     u1285 0F86  
                   u1381 197A                     u1630 12D4                     u1374 109A  
                   u1294 0FAA                     u1550 0E00                     u1534 0DB0  
                   u1470 0D10                     u1454 0CC0                     u1390 0C28  
                   u1710 1802                     u1631 12D0                     u1375 1096  
                   u1295 0FA6                     u1551 0DFC                     u1535 0DAC  
                   u1471 0D0C                     u1455 0CBC                     u1391 0C24  
                   u1711 17FE                     u1704 13C2                     u1624 12A2  
                   u1800 145A                     u1560 0E12                     u1544 0DD4  
                   u1480 0D22                     u1464 0CE4                     u1720 1824  
                   u1705 13BE                     u1625 129E                     u1801 1456  
                   u1561 0E0E                     u1545 0DD0                     u1481 0D1E  
                   u1465 0CE0                     u1721 1820                     u1650 131C  
                   u1730 1842                     u1651 1318                     u1731 183E  
                   u1900 1540                     u1644 12EA                     u1820 149E  
                   u1740 19C6                     u1901 153C                     u1645 12E6  
                   u1821 149A                     u1741 19C2                     u1910 1566  
                   u1670 1364                     u1814 1472                     u1574 0E28  
                   u1494 0D38                     u1590 1B28                     u1750 112A  
                   u1911 1562                     u1671 1360                     u1815 146C  
                   u1575 0E24                     u1495 0D34                     u1591 1B24  
                   u1751 1126                     u1920 1584                     u1664 1332  
                   u1840 14E8                     u1584 0E4C                     u1760 1172  
                   u1921 1580                     u1665 132E                     u1841 14E4  
                   u1585 0E48                     u1761 116E                     u1930 15A0  
                   u1690 13AC                     u1850 150A                     u1834 14BA  
                   u1770 11E0                     u1931 159C                     u1691 13A8  
                   u1851 1506                     u1835 14B4                     u1771 11DC  
                   u1940 15C6                     u1684 137A                     u1780 140A  
                   u1860 169A                     u1941 15C2                     u1685 1376  
                   u1781 1406                     u1861 1696                     u1950 174E  
                   u1870 16D4                     u1951 174A                     u1871 16D0  
                   u1960 1768                     u1880 170E                     u1961 1764  
                   u1881 170A                     u1890 1526                     u1970 1782  
                   u1794 142A                     u1891 1522                     u1971 177E  
                   u1795 1424                     u1980 17A0                     u1981 179C  
                   u1990 17B6                     u1991 17B2              main@jogando 01DA  
                   _main 061C                     _keys 0021         ??_PulseClockData 0007  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000          pushNibble@value 000C             ___param_bank 000000  
 __end_of_pulseEnablePin 1A4C                    ?_main 0001          __end_of___awdiv 15D8  
        __end_of___awmod 17EC                    _T0CON 000FD5          ___awdiv@divisor 0003  
        __end_of___llmod 1874          ___awdiv@counter 0005                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
        __end_of_charKey 061B                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lcdChar 1C0A          __end_of_lcdInit 168C          __end_of_rgbInit 1A8A  
        __end_of_pinMode 0E5A                    _valor 0601             main@terminou 01D4  
        __end_of_soWrite 1984                    tablat 000FF5                    plusw1 000FE3  
                  plusw2 000FDB                    status 000FD8             pushNibble@rs 000A  
   __end_of_digitalWrite 10A8          __initialization 19C8          ?_pulseEnablePin 0001  
           __end_of_main 0C0C           sacaCarta@valor 000F                   ??_main 0019  
          __activetblptr 000002     __size_of_digitalRead 016A                   _ADCON1 000FC1  
       ___llmod@dividend 0001         ___awdiv@dividend 0001              rgbColor@led 0007  
                 _INTCON 000FF2                   ___wmul 1BA4                ??___awdiv 0005  
              ??___awmod 000D                ??___llmod 0009                   _kpInit 1AC8  
                 _kpRead 1C38         __end_of_rgbColor 173C                   clear_0 19EE  
                 clear_1 19FA                   _soInit 1A8A         ___awdiv@quotient 0007  
        ___awmod@divisor 000B                ??_lcdChar 000E                   isa$std 000001  
              ??_lcdInit 000F          ___awmod@counter 000D                ??_rgbInit 0007  
              ??_pinMode 0005             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_soWrite 0009  
       __end_of_pushByte 1936               __accesstop 0080  __end_of__initialization 1A00  
          ___rparam_used 000001            pushByte@value 000D              pinMode@type 0003  
         __pcstackCOMRAM 0001             __pidataBANK0 1874            __end_of_valor 0611  
     __size_of_delayMili 0030          sacaCarta@namesa 0011               __pbssBANK2 0200  
     __size_of_sacaCarta 01CC    __size_of_digitalWrite 024E       __size_of_mesaReset 0044  
             _delayMicro 1C4A               _lcdCommand 1C0A                  ?___wmul 0009  
                ?_kpInit 0001                  ?_kpRead 0001                  ?_soInit 0001  
             _kpDebounce 13DE       __size_of_timerInit 0008       __size_of_timerWait 0010  
           _digitalWrite 0E5A        __end_of_delayMili 1B2A                ?_rgbColor 0007  
       ??_pulseEnablePin 0007                  __Hparam 0000                  __Lparam 0000  
        kpDebounce@tempo 0028                  ___awdiv 1514                  ___awmod 173C  
              ?_pushByte 000A          __size_of___wmul 0026                  ___llmod 17EC  
           __psmallconst 0600          __size_of_kpInit 0032          __size_of_kpRead 000A  
                _charKey 0611                  __pcinit 19C8                  _lcdChar 1BEC  
                __ramtop 0600          __size_of_soInit 003E        __end_of_sacaCarta 1274  
                _lcdInit 15D8                  __ptext0 061C                  __ptext1 1C42  
                __ptext2 10A8                  __ptext3 1C28                  __ptext4 1BCA  
                __ptext5 1BEC                  __ptext6 17EC                  __ptext7 1A4C  
                __ptext8 168C                  __ptext9 1984                  _display 0027  
      __end_of_mesaReset 19C8                  _rgbInit 1A4C                  _pinMode 0C0C  
       ___awmod@dividend 0009               delayMili@a 0001               delayMili@i 0004  
                _soWrite 1936                  main@max 01DC     end_of_initialization 1A00  
          ?_PulseEnClock 0001               ??_rgbColor 0009            __Lmediumconst 0000  
         digitalRead@pin 0001              ?_delayMicro 0001        __end_of_timerInit 1C4A  
      __end_of_timerWait 1C38                  postdec1 000FE5                  postdec2 000FDD  
            ?_lcdCommand 0001                  postinc0 000FEE                  postinc2 000FDE  
             ??_pushByte 000C  __size_of_PulseClockData 002A            ??_digitalRead 0003  
             _timerReset 1BCA              ?_kpDebounce 0001               _pushNibble 1B7E  
         ??_PulseEnClock 0007               main@aposta 01E0               main@namesa 0168  
         __end_of___wmul 1BCA           __end_of_kpInit 1AFA           __end_of_kpRead 1C42  
         __end_of_soInit 1AC8      __size_of_delayMicro 0002      start_initialization 19C8  
    __end_of_digitalRead 13DE            sacaCarta@cont 0013      __size_of_lcdCommand 001E  
    __size_of_kpDebounce 0136          ___llmod@divisor 0005               mesaReset@i 0003  
        ___llmod@counter 0009        kpDebounce@oldRead 001D        kpDebounce@newRead 001F  
               ??___wmul 000D                 ??_kpInit 0007                 ??_kpRead 0003  
            __pdataBANK0 0080              ?_timerReset 000A                 ??_soInit 0007  
            __pbssCOMRAM 001D            __pcstackBANK1 0100              ?_pushNibble 000A  
             pinMode@pin 0001        __size_of_rgbColor 00B0                _delayMili 1AFA  
               ?___awdiv 0001                 ?___awmod 0009                 ?___llmod 0001  
         _PulseClockData 1B54     __end_of_PulseEnClock 1B54              _digitalRead 1274  
               ?_lcdChar 0001        __size_of_pushByte 005A                 ?_lcdInit 0001  
            __smallconst 0600                 ?_rgbInit 0001                 ?_pinMode 0001  
              _sacaCarta 10A8                 ?_soWrite 0007                _mesaReset 1984  
    __size_of_timerReset 0022           ___wmul@product 000D             ??_delayMicro 0003  
             ?_delayMili 0001   __end_of_PulseClockData 1B7E      __size_of_pushNibble 0026  
           ??_lcdCommand 000E                main@F2395 0080                main@F2397 0200  
              _timerInit 1C42                _timerWait 1C28             ??_kpDebounce 000A  
      ___wmul@multiplier 0009          lcdCommand@value 000E                main@tecla 01D6  
             ?_sacaCarta 000F                main@valor 0100       __end_of_delayMicro 1C4C  
             ?_mesaReset 0001         timerReset@ciclos 000C                copy_data0 19DC  
     __end_of_lcdCommand 1C28               pushByte@rs 000A             lcdChar@value 000E  
     __end_of_kpDebounce 1514                 __Hrparam 0000                 __Lrparam 0000  
        ?_PulseClockData 0001               ?_timerInit 0001               ?_timerWait 0001  
       __size_of___awdiv 00C4         __size_of___awmod 00B0  __size_of_pulseEnablePin 0042  
       __size_of___llmod 0088         __size_of_lcdChar 001E         __size_of_lcdInit 00B4  
       __size_of_rgbInit 003E         __size_of_pinMode 024E                 __ptext10 15D8  
               __ptext11 1B7E                 __ptext20 0C0C                 __ptext12 1C0A  
               __ptext21 13DE                 __ptext13 18DC                 __ptext22 1936  
               __ptext14 1A0A                 __ptext23 1B2A                 __ptext15 1C4A  
               __ptext24 1B54                 __ptext16 1AFA                 __ptext25 0E5A  
               __ptext17 1C38                 __ptext26 1274                 __ptext18 1AC8  
               __ptext27 1BA4                 __ptext19 1A8A                 __ptext28 173C  
               __ptext29 1514         __size_of_soWrite 004E                 _rgbColor 168C  
        mesaReset@namesa 0001            __size_of_main 05F0              ??_delayMili 0003  
  __size_of_PulseEnClock 002A              delayMicro@a 0001                 isa$xinst 000000  
           soWrite@value 0007                 _pushByte 18DC             ??_timerReset 000C  
               main@cont 01D0                 main@soma 01DE          timerReset@tempo 000A  
            ??_sacaCarta 0017             ??_pushNibble 000C            ?_digitalWrite 0001  
            ??_mesaReset 0003             _PulseEnClock 1B2A        digitalWrite@value 0003  
     __end_of_timerReset 1BEC                 soWrite@i 0009              ??_timerInit 0001  
            ??_timerWait 0001       __end_of_pushNibble 1BA4             ?_digitalRead 0001  
            kpDebounce@i 000D           ??_digitalWrite 0005          digitalWrite@pin 0001  
