

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Dec 16 14:15:37 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F4520 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataBANK0
    83  00184A                     __pidataBANK0:
    84                           	callstack 0
    85                           
    86                           ;initializer for main@F2395
    87  00184A  0001               	dw	1
    88  00184C  0001               	dw	1
    89  00184E  0001               	dw	1
    90  001850  0001               	dw	1
    91  001852  0002               	dw	2
    92  001854  0002               	dw	2
    93  001856  0002               	dw	2
    94  001858  0002               	dw	2
    95  00185A  0003               	dw	3
    96  00185C  0003               	dw	3
    97  00185E  0003               	dw	3
    98  001860  0003               	dw	3
    99  001862  0004               	dw	4
   100  001864  0004               	dw	4
   101  001866  0004               	dw	4
   102  001868  0004               	dw	4
   103  00186A  0005               	dw	5
   104  00186C  0005               	dw	5
   105  00186E  0005               	dw	5
   106  001870  0005               	dw	5
   107  001872  0006               	dw	6
   108  001874  0006               	dw	6
   109  001876  0006               	dw	6
   110  001878  0006               	dw	6
   111  00187A  0007               	dw	7
   112  00187C  0007               	dw	7
   113  00187E  0007               	dw	7
   114  001880  0007               	dw	7
   115  001882  0008               	dw	8
   116  001884  0008               	dw	8
   117  001886  0008               	dw	8
   118  001888  0008               	dw	8
   119  00188A  0009               	dw	9
   120  00188C  0009               	dw	9
   121  00188E  0009               	dw	9
   122  001890  0009               	dw	9
   123  001892  000A               	dw	10
   124  001894  000A               	dw	10
   125  001896  000A               	dw	10
   126  001898  000A               	dw	10
   127  00189A  000B               	dw	11
   128  00189C  000B               	dw	11
   129  00189E  000B               	dw	11
   130  0018A0  000B               	dw	11
   131  0018A2  000C               	dw	12
   132  0018A4  000C               	dw	12
   133  0018A6  000C               	dw	12
   134  0018A8  000C               	dw	12
   135  0018AA  000D               	dw	13
   136  0018AC  000D               	dw	13
   137  0018AE  000D               	dw	13
   138  0018B0  000D               	dw	13
   139                           
   140                           	psect	smallconst
   141  000600                     __psmallconst:
   142                           	callstack 0
   143  000600  00                 	db	0
   144  000601                     _valor:
   145                           	callstack 0
   146  000601  3F                 	db	63
   147  000602  06                 	db	6
   148  000603  5B                 	db	91
   149  000604  4F                 	db	79
   150  000605  66                 	db	102
   151  000606  6D                 	db	109
   152  000607  7D                 	db	125
   153  000608  07                 	db	7
   154  000609  7F                 	db	127
   155  00060A  6F                 	db	111
   156  00060B  77                 	db	119
   157  00060C  7C                 	db	124
   158  00060D  39                 	db	57
   159  00060E  5E                 	db	94
   160  00060F  79                 	db	121
   161  000610  71                 	db	113
   162  000611                     __end_of_valor:
   163                           	callstack 0
   164  000611  55                 	db	85
   165  000612  4C                 	db	76
   166  000613  44                 	db	68
   167  000614  52                 	db	82
   168  000615  53                 	db	83
   169  000616  58                 	db	88
   170  000617  41                 	db	65
   171  000618  42                 	db	66
   172  000619  59                 	db	89
   173  00061A  73                 	db	115
   174  00061B                     __end_of_charKey:
   175                           	callstack 0
   176  0000                     _T0CON	set	4053
   177  0000                     _TMR0L	set	4054
   178  0000                     _TMR0H	set	4055
   179  0000                     _INTCON	set	4082
   180  0000                     _TRISE	set	3990
   181  0000                     _TRISD	set	3989
   182  0000                     _TRISC	set	3988
   183  0000                     _TRISB	set	3987
   184  0000                     _TRISA	set	3986
   185  0000                     _PORTE	set	3972
   186  0000                     _PORTD	set	3971
   187  0000                     _PORTC	set	3970
   188  0000                     _PORTB	set	3969
   189  0000                     _PORTA	set	3968
   190  0000                     _ADCON1	set	4033
   191  00061B  00                 	db	0	; dummy byte at the end
   192  0000                     
   193                           ; #config settings
   194                           
   195                           	psect	cinit
   196  00199E                     __pcinit:
   197                           	callstack 0
   198  00199E                     start_initialization:
   199                           	callstack 0
   200  00199E                     __initialization:
   201                           	callstack 0
   202                           
   203                           ; Initialize objects allocated to BANK0 (104 bytes)
   204                           ; load TBLPTR registers with __pidataBANK0
   205  00199E  0E4A               	movlw	low __pidataBANK0
   206  0019A0  6EF6               	movwf	tblptrl,c
   207  0019A2  0E18               	movlw	high __pidataBANK0
   208  0019A4  6EF7               	movwf	tblptrh,c
   209  0019A6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   210  0019A8  6EF8               	movwf	tblptru,c
   211  0019AA  EE00  F080         	lfsr	0,__pdataBANK0
   212  0019AE  EE10 F068          	lfsr	1,104
   213  0019B2                     copy_data0:
   214  0019B2  0009               	tblrd		*+
   215  0019B4  CFF5 FFEE          	movff	tablat,postinc0
   216  0019B8  50E5               	movf	postdec1,w,c
   217  0019BA  50E1               	movf	fsr1l,w,c
   218  0019BC  E1FA               	bnz	copy_data0
   219                           
   220                           ; Clear objects allocated to BANK2 (104 bytes)
   221  0019BE  EE02  F000         	lfsr	0,__pbssBANK2
   222  0019C2  0E68               	movlw	104
   223  0019C4                     clear_0:
   224  0019C4  6AEE               	clrf	postinc0,c
   225  0019C6  06E8               	decf	wreg,f,c
   226  0019C8  E1FD               	bnz	clear_0
   227                           
   228                           ; Clear objects allocated to COMRAM (12 bytes)
   229  0019CA  EE00  F01D         	lfsr	0,__pbssCOMRAM
   230  0019CE  0E0C               	movlw	12
   231  0019D0                     clear_1:
   232  0019D0  6AEE               	clrf	postinc0,c
   233  0019D2  06E8               	decf	wreg,f,c
   234  0019D4  E1FD               	bnz	clear_1
   235  0019D6                     end_of_initialization:
   236                           	callstack 0
   237  0019D6                     __end_of__initialization:
   238                           	callstack 0
   239  0019D6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   240  0019D8  6EF8               	movwf	tblptru,c
   241  0019DA  0100               	movlb	0
   242  0019DC  EF0E  F003         	goto	_main	;jump to C main() function
   243                           
   244                           	psect	bssCOMRAM
   245  00001D                     __pbssCOMRAM:
   246                           	callstack 0
   247  00001D                     kpDebounce@oldRead:
   248                           	callstack 0
   249  00001D                     	ds	2
   250  00001F                     kpDebounce@newRead:
   251                           	callstack 0
   252  00001F                     	ds	2
   253  000021                     _keys:
   254                           	callstack 0
   255  000021                     	ds	2
   256  000023                     _v3:
   257                           	callstack 0
   258  000023                     	ds	1
   259  000024                     _v2:
   260                           	callstack 0
   261  000024                     	ds	1
   262  000025                     _v1:
   263                           	callstack 0
   264  000025                     	ds	1
   265  000026                     _v0:
   266                           	callstack 0
   267  000026                     	ds	1
   268  000027                     _display:
   269                           	callstack 0
   270  000027                     	ds	1
   271  000028                     kpDebounce@tempo:
   272                           	callstack 0
   273  000028                     	ds	1
   274                           
   275                           	psect	dataBANK0
   276  000080                     __pdataBANK0:
   277                           	callstack 0
   278  000080                     main@F2395:
   279                           	callstack 0
   280  000080                     	ds	104
   281                           
   282                           	psect	bssBANK2
   283  000200                     __pbssBANK2:
   284                           	callstack 0
   285  000200                     	ds	104
   286                           
   287                           	psect	cstackBANK1
   288  000100                     __pcstackBANK1:
   289                           	callstack 0
   290  000100                     main@valor:
   291                           	callstack 0
   292                           
   293                           ; 104 bytes @ 0x0
   294  000100                     	ds	104
   295  000168                     main@namesa:
   296                           	callstack 0
   297                           
   298                           ; 104 bytes @ 0x68
   299  000168                     	ds	104
   300  0001D0                     main@cont:
   301                           	callstack 0
   302                           
   303                           ; 4 bytes @ 0xD0
   304  0001D0                     	ds	4
   305  0001D4                     main@terminou:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0xD4
   309  0001D4                     	ds	2
   310  0001D6                     main@tecla:
   311                           	callstack 0
   312                           
   313                           ; 4 bytes @ 0xD6
   314  0001D6                     	ds	4
   315  0001DA                     main@jogando:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0xDA
   319  0001DA                     	ds	2
   320  0001DC                     main@max:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0xDC
   324  0001DC                     	ds	2
   325  0001DE                     main@soma:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0xDE
   329  0001DE                     	ds	2
   330  0001E0                     main@aposta:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0xE0
   334  0001E0                     	ds	2
   335                           
   336                           	psect	cstackCOMRAM
   337  000001                     __pcstackCOMRAM:
   338                           	callstack 0
   339  000001                     ?_kpRead:
   340                           	callstack 0
   341  000001                     ?_digitalRead:
   342                           	callstack 0
   343  000001                     ?___awdiv:
   344                           	callstack 0
   345  000001                     ?___llmod:
   346                           	callstack 0
   347  000001                     mesaReset@namesa:
   348                           	callstack 0
   349  000001                     delayMicro@a:
   350                           	callstack 0
   351  000001                     delayMili@a:
   352                           	callstack 0
   353  000001                     digitalWrite@pin:
   354                           	callstack 0
   355  000001                     digitalRead@pin:
   356                           	callstack 0
   357  000001                     pinMode@pin:
   358                           	callstack 0
   359  000001                     ___awdiv@dividend:
   360                           	callstack 0
   361  000001                     ___llmod@dividend:
   362                           	callstack 0
   363                           
   364                           ; 4 bytes @ 0x0
   365  000001                     	ds	2
   366  000003                     ??_digitalRead:
   367  000003                     ??_delayMili:
   368  000003                     mesaReset@i:
   369                           	callstack 0
   370  000003                     digitalWrite@value:
   371                           	callstack 0
   372  000003                     pinMode@type:
   373                           	callstack 0
   374  000003                     ___awdiv@divisor:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x2
   378  000003                     	ds	1
   379  000004                     delayMili@i:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x3
   383  000004                     	ds	1
   384  000005                     ??_pinMode:
   385  000005                     ??_digitalWrite:
   386  000005                     ___awdiv@counter:
   387                           	callstack 0
   388  000005                     ___llmod@divisor:
   389                           	callstack 0
   390                           
   391                           ; 4 bytes @ 0x4
   392  000005                     	ds	1
   393  000006                     ___awdiv@sign:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x5
   397  000006                     	ds	1
   398  000007                     soWrite@value:
   399                           	callstack 0
   400  000007                     rgbColor@led:
   401                           	callstack 0
   402  000007                     ___awdiv@quotient:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x6
   406  000007                     	ds	2
   407  000009                     ?___awmod:
   408                           	callstack 0
   409  000009                     soWrite@i:
   410                           	callstack 0
   411  000009                     ___llmod@counter:
   412                           	callstack 0
   413  000009                     ___awmod@dividend:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x8
   417  000009                     	ds	1
   418  00000A                     ??_kpDebounce:
   419  00000A                     pushNibble@rs:
   420                           	callstack 0
   421  00000A                     pushByte@rs:
   422                           	callstack 0
   423  00000A                     timerReset@tempo:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x9
   427  00000A                     	ds	1
   428  00000B                     ___awmod@divisor:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0xA
   432  00000B                     	ds	1
   433  00000C                     ??_pushByte:
   434  00000C                     pushNibble@value:
   435                           	callstack 0
   436  00000C                     timerReset@ciclos:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0xB
   440  00000C                     	ds	1
   441  00000D                     pushByte@value:
   442                           	callstack 0
   443  00000D                     ___awmod@counter:
   444                           	callstack 0
   445  00000D                     kpDebounce@i:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0xC
   449  00000D                     	ds	1
   450  00000E                     lcdCommand@value:
   451                           	callstack 0
   452  00000E                     lcdChar@value:
   453                           	callstack 0
   454  00000E                     ___awmod@sign:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0xD
   458  00000E                     	ds	1
   459  00000F                     ?_sacaCarta:
   460                           	callstack 0
   461  00000F                     sacaCarta@valor:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0xE
   465  00000F                     	ds	2
   466  000011                     sacaCarta@namesa:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x10
   470  000011                     	ds	2
   471  000013                     sacaCarta@cont:
   472                           	callstack 0
   473                           
   474                           ; 4 bytes @ 0x12
   475  000013                     	ds	4
   476  000017                     
   477                           ; 1 bytes @ 0x16
   478  000017                     	ds	2
   479  000019                     ??_main:
   480                           
   481                           ; 1 bytes @ 0x18
   482  000019                     	ds	4
   483                           
   484 ;;
   485 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   486 ;;
   487 ;; *************** function _main *****************
   488 ;; Defined at:
   489 ;;		line 54 in file "main.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;  namesa        104  104[BANK1 ] int [52]
   494 ;;  valor         104    0[BANK1 ] int [52]
   495 ;;  tecla           4  214[BANK1 ] unsigned long 
   496 ;;  cont            4  208[BANK1 ] unsigned long 
   497 ;;  aposta          2  224[BANK1 ] int 
   498 ;;  soma            2  222[BANK1 ] int 
   499 ;;  max             2  220[BANK1 ] int 
   500 ;;  jogando         2  218[BANK1 ] int 
   501 ;;  terminou        2  212[BANK1 ] int 
   502 ;; Return value:  Size  Location     Type
   503 ;;                  2   39[None  ] int 
   504 ;; Registers used:
   505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   511 ;;      Params:         0       0       0       0       0       0       0
   512 ;;      Locals:         0       0     226       0       0       0       0
   513 ;;      Temps:          4       0       0       0       0       0       0
   514 ;;      Totals:         4       0     226       0       0       0       0
   515 ;;Total ram usage:      230 bytes
   516 ;; Hardware stack levels required when called: 6
   517 ;; This function calls:
   518 ;;		___awdiv
   519 ;;		___awmod
   520 ;;		_kpDebounce
   521 ;;		_kpInit
   522 ;;		_kpRead
   523 ;;		_lcdChar
   524 ;;		_lcdCommand
   525 ;;		_lcdInit
   526 ;;		_mesaReset
   527 ;;		_rgbColor
   528 ;;		_rgbInit
   529 ;;		_sacaCarta
   530 ;;		_timerInit
   531 ;; This function is called by:
   532 ;;		Startup code after reset
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           	psect	text0
   537  00061C                     __ptext0:
   538                           	callstack 0
   539  00061C                     _main:
   540                           	callstack 25
   541  00061C                     
   542                           ;main.c: 55:     rgbInit();
   543  00061C  EC11  F00D         	call	_rgbInit	;wreg free
   544                           
   545                           ;main.c: 56:     kpInit();
   546  000620  EC4F  F00D         	call	_kpInit	;wreg free
   547                           
   548                           ;main.c: 57:     lcdInit();
   549  000624  ECD7  F00A         	call	_lcdInit	;wreg free
   550                           
   551                           ;main.c: 58:     timerInit();
   552  000628  ECF9  F00D         	call	_timerInit	;wreg free
   553  00062C                     
   554                           ;main.c: 59:     int valor[52]={1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,
      +                          8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13};
   555  00062C  EE20  F080         	lfsr	2,main@F2395
   556  000630  EE11  F000         	lfsr	1,main@valor
   557  000634  0E67               	movlw	103
   558  000636                     u2011:
   559  000636  CFDB FFE3          	movff	plusw2,plusw1
   560  00063A  06E8               	decf	wreg,f,c
   561  00063C  E2FC               	bc	u2011
   562  00063E                     
   563                           ;main.c: 60:     int namesa[52]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
      +                          ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
   564  00063E  EE21  F068         	lfsr	2,main@namesa
   565  000642  0E67               	movlw	103
   566  000644                     u2021:
   567  000644  6ADE               	clrf	postinc2,c
   568  000646  06E8               	decf	wreg,f,c
   569  000648  E2FD               	bc	u2021
   570  00064A                     
   571                           ;main.c: 61:     int soma=0;
   572  00064A  0E00               	movlw	0
   573  00064C  0101               	movlb	1	; () banked
   574  00064E  6FDF               	movwf	(main@soma+1)& (0+255),b
   575  000650  0E00               	movlw	0
   576  000652  6FDE               	movwf	main@soma& (0+255),b
   577  000654                     
   578                           ; BSR set to: 1
   579                           ;main.c: 62:     int aposta;;main.c: 63:     int max=100;
   580  000654  0E00               	movlw	0
   581  000656  6FDD               	movwf	(main@max+1)& (0+255),b
   582  000658  0E64               	movlw	100
   583  00065A  6FDC               	movwf	main@max& (0+255),b
   584  00065C                     
   585                           ; BSR set to: 1
   586                           ;main.c: 64:     int jogando;;main.c: 65:     int terminou=0;
   587  00065C  0E00               	movlw	0
   588  00065E  6FD5               	movwf	(main@terminou+1)& (0+255),b
   589  000660  0E00               	movlw	0
   590  000662  6FD4               	movwf	main@terminou& (0+255),b
   591  000664                     
   592                           ; BSR set to: 1
   593                           ;main.c: 66:     unsigned long int tecla=16;
   594  000664  0E10               	movlw	16
   595  000666  6FD6               	movwf	main@tecla& (0+255),b
   596  000668  0E00               	movlw	0
   597  00066A  6FD7               	movwf	(main@tecla+1)& (0+255),b
   598  00066C  0E00               	movlw	0
   599  00066E  6FD8               	movwf	(main@tecla+2)& (0+255),b
   600  000670  0E00               	movlw	0
   601  000672  6FD9               	movwf	(main@tecla+3)& (0+255),b
   602  000674                     
   603                           ; BSR set to: 1
   604                           ;main.c: 67:     unsigned long int cont=0;
   605  000674  0E00               	movlw	0
   606  000676  6FD0               	movwf	main@cont& (0+255),b
   607  000678  0E00               	movlw	0
   608  00067A  6FD1               	movwf	(main@cont+1)& (0+255),b
   609  00067C  0E00               	movlw	0
   610  00067E  6FD2               	movwf	(main@cont+2)& (0+255),b
   611  000680  0E00               	movlw	0
   612  000682  6FD3               	movwf	(main@cont+3)& (0+255),b
   613  000684                     l2037:
   614                           
   615                           ; BSR set to: 1
   616                           ;main.c: 69:         kpDebounce();
   617  000684  ECDA  F009         	call	_kpDebounce	;wreg free
   618  000688                     
   619                           ;main.c: 70:         if(kpRead()!=tecla){
   620  000688  ECF4  F00D         	call	_kpRead	;wreg free
   621  00068C  5001               	movf	?_kpRead^0,w,c
   622  00068E  6E19               	movwf	??_main^0,c
   623  000690  5002               	movf	(?_kpRead+1)^0,w,c
   624  000692  6E1A               	movwf	(??_main+1)^0,c
   625  000694  6A1B               	clrf	(??_main+2)^0,c
   626  000696  6A1C               	clrf	(??_main+3)^0,c
   627  000698  0101               	movlb	1	; () banked
   628  00069A  51D6               	movf	main@tecla& (0+255),w,b
   629  00069C  1819               	xorwf	??_main^0,w,c
   630  00069E  E10F               	bnz	u2030
   631  0006A0  51D7               	movf	(main@tecla+1)& (0+255),w,b
   632  0006A2  181A               	xorwf	(??_main+1)^0,w,c
   633  0006A4  E10C               	bnz	u2030
   634  0006A6  51D8               	movf	(main@tecla+2)& (0+255),w,b
   635  0006A8  181B               	xorwf	(??_main+2)^0,w,c
   636  0006AA  E109               	bnz	u2030
   637  0006AC  51D9               	movf	(main@tecla+3)& (0+255),w,b
   638  0006AE  181C               	xorwf	(??_main+3)^0,w,c
   639  0006B0  B4D8               	btfsc	status,2,c
   640  0006B2  EF5D  F003         	goto	u2031
   641  0006B6  EF5F  F003         	goto	u2030
   642  0006BA                     u2031:
   643  0006BA  EFC5  F004         	goto	l2101
   644  0006BE                     u2030:
   645  0006BE                     
   646                           ; BSR set to: 1
   647                           ;main.c: 71:             tecla=kpRead();
   648  0006BE  ECF4  F00D         	call	_kpRead	;wreg free
   649  0006C2  C001  F1D6         	movff	?_kpRead,main@tecla
   650  0006C6  C002  F1D7         	movff	?_kpRead+1,main@tecla+1
   651  0006CA  0101               	movlb	1	; () banked
   652  0006CC  6BD8               	clrf	(main@tecla+2)& (0+255),b
   653  0006CE  6BD9               	clrf	(main@tecla+3)& (0+255),b
   654  0006D0                     
   655                           ; BSR set to: 1
   656                           ;main.c: 72:             if(((tecla) & (1<<(0)))){if(jogando){jogando=0;lcdCommand(0x01)
      +                          ;terminou=1;}else{jogando=1;lcdCommand(0x01);terminou=0;}}
   657  0006D0  A1D6               	btfss	main@tecla& (0+255),0,b
   658  0006D2  EF6D  F003         	goto	u2041
   659  0006D6  EF6F  F003         	goto	u2040
   660  0006DA                     u2041:
   661  0006DA  EF92  F003         	goto	l2059
   662  0006DE                     u2040:
   663  0006DE                     
   664                           ; BSR set to: 1
   665  0006DE  51DA               	movf	main@jogando& (0+255),w,b
   666  0006E0  11DB               	iorwf	(main@jogando+1)& (0+255),w,b
   667  0006E2  B4D8               	btfsc	status,2,c
   668  0006E4  EF76  F003         	goto	u2051
   669  0006E8  EF78  F003         	goto	u2050
   670  0006EC                     u2051:
   671  0006EC  EF86  F003         	goto	l2053
   672  0006F0                     u2050:
   673  0006F0                     
   674                           ; BSR set to: 1
   675  0006F0  0E00               	movlw	0
   676  0006F2  6FDB               	movwf	(main@jogando+1)& (0+255),b
   677  0006F4  0E00               	movlw	0
   678  0006F6  6FDA               	movwf	main@jogando& (0+255),b
   679  0006F8                     
   680                           ; BSR set to: 1
   681  0006F8  0E01               	movlw	1
   682  0006FA  ECDD  F00D         	call	_lcdCommand
   683  0006FE  0E00               	movlw	0
   684  000700  0101               	movlb	1	; () banked
   685  000702  6FD5               	movwf	(main@terminou+1)& (0+255),b
   686  000704  0E01               	movlw	1
   687  000706  6FD4               	movwf	main@terminou& (0+255),b
   688  000708  EF92  F003         	goto	l2059
   689  00070C                     l2053:
   690                           
   691                           ; BSR set to: 1
   692  00070C  0E00               	movlw	0
   693  00070E  6FDB               	movwf	(main@jogando+1)& (0+255),b
   694  000710  0E01               	movlw	1
   695  000712  6FDA               	movwf	main@jogando& (0+255),b
   696  000714                     
   697                           ; BSR set to: 1
   698  000714  0E01               	movlw	1
   699  000716  ECDD  F00D         	call	_lcdCommand
   700  00071A  0E00               	movlw	0
   701  00071C  0101               	movlb	1	; () banked
   702  00071E  6FD5               	movwf	(main@terminou+1)& (0+255),b
   703  000720  0E00               	movlw	0
   704  000722  6FD4               	movwf	main@terminou& (0+255),b
   705  000724                     l2059:
   706                           
   707                           ; BSR set to: 1
   708                           ;main.c: 73:             if(((tecla) & (1<<(3)))){if((!jogando)&&(aposta>10)){aposta=apo
      +                          sta-10;lcdCommand(0x01);lcdChar((aposta / 1000) % 10 + 48);lcdChar((aposta / 100) % 10 +
      +                           48);lcdChar((aposta / 10) % 10 + 48);lcdChar(aposta % 10 + 48);}}
   709  000724  A7D6               	btfss	main@tecla& (0+255),3,b
   710  000726  EF97  F003         	goto	u2061
   711  00072A  EF99  F003         	goto	u2060
   712  00072E                     u2061:
   713  00072E  EF0F  F004         	goto	l2077
   714  000732                     u2060:
   715  000732                     
   716                           ; BSR set to: 1
   717  000732  51DA               	movf	main@jogando& (0+255),w,b
   718  000734  11DB               	iorwf	(main@jogando+1)& (0+255),w,b
   719  000736  A4D8               	btfss	status,2,c
   720  000738  EFA0  F003         	goto	u2071
   721  00073C  EFA2  F003         	goto	u2070
   722  000740                     u2071:
   723  000740  EF0F  F004         	goto	l2077
   724  000744                     u2070:
   725  000744                     
   726                           ; BSR set to: 1
   727  000744  BFE1               	btfsc	(main@aposta+1)& (0+255),7,b
   728  000746  EFAE  F003         	goto	u2081
   729  00074A  51E1               	movf	(main@aposta+1)& (0+255),w,b
   730  00074C  E109               	bnz	u2080
   731  00074E  0E0B               	movlw	11
   732  000750  5DE0               	subwf	main@aposta& (0+255),w,b
   733  000752  A0D8               	btfss	status,0,c
   734  000754  EFAE  F003         	goto	u2081
   735  000758  EFB0  F003         	goto	u2080
   736  00075C                     u2081:
   737  00075C  EF0F  F004         	goto	l2077
   738  000760                     u2080:
   739  000760                     
   740                           ; BSR set to: 1
   741  000760  0EF6               	movlw	246
   742  000762  25E0               	addwf	main@aposta& (0+255),w,b
   743  000764  6FE0               	movwf	main@aposta& (0+255),b
   744  000766  0EFF               	movlw	255
   745  000768  21E1               	addwfc	(main@aposta+1)& (0+255),w,b
   746  00076A  6FE1               	movwf	(main@aposta+1)& (0+255),b
   747  00076C                     
   748                           ; BSR set to: 1
   749  00076C  0E01               	movlw	1
   750  00076E  ECDD  F00D         	call	_lcdCommand
   751  000772  0E03               	movlw	3
   752  000774  6E04               	movwf	(___awdiv@divisor+1)^0,c
   753  000776  0EE8               	movlw	232
   754  000778  6E03               	movwf	___awdiv@divisor^0,c
   755  00077A  C1E0  F001         	movff	main@aposta,___awdiv@dividend
   756  00077E  C1E1  F002         	movff	main@aposta+1,___awdiv@dividend+1
   757  000782  EC75  F00A         	call	___awdiv	;wreg free
   758  000786  C001  F009         	movff	?___awdiv,___awmod@dividend
   759  00078A  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   760  00078E  0E00               	movlw	0
   761  000790  6E0C               	movwf	(___awmod@divisor+1)^0,c
   762  000792  0E0A               	movlw	10
   763  000794  6E0B               	movwf	___awmod@divisor^0,c
   764  000796  EC89  F00B         	call	___awmod	;wreg free
   765  00079A  5009               	movf	?___awmod^0,w,c
   766  00079C  0F30               	addlw	48
   767  00079E  ECCE  F00D         	call	_lcdChar
   768  0007A2  0E00               	movlw	0
   769  0007A4  6E04               	movwf	(___awdiv@divisor+1)^0,c
   770  0007A6  0E64               	movlw	100
   771  0007A8  6E03               	movwf	___awdiv@divisor^0,c
   772  0007AA  C1E0  F001         	movff	main@aposta,___awdiv@dividend
   773  0007AE  C1E1  F002         	movff	main@aposta+1,___awdiv@dividend+1
   774  0007B2  EC75  F00A         	call	___awdiv	;wreg free
   775  0007B6  C001  F009         	movff	?___awdiv,___awmod@dividend
   776  0007BA  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   777  0007BE  0E00               	movlw	0
   778  0007C0  6E0C               	movwf	(___awmod@divisor+1)^0,c
   779  0007C2  0E0A               	movlw	10
   780  0007C4  6E0B               	movwf	___awmod@divisor^0,c
   781  0007C6  EC89  F00B         	call	___awmod	;wreg free
   782  0007CA  5009               	movf	?___awmod^0,w,c
   783  0007CC  0F30               	addlw	48
   784  0007CE  ECCE  F00D         	call	_lcdChar
   785  0007D2  0E00               	movlw	0
   786  0007D4  6E04               	movwf	(___awdiv@divisor+1)^0,c
   787  0007D6  0E0A               	movlw	10
   788  0007D8  6E03               	movwf	___awdiv@divisor^0,c
   789  0007DA  C1E0  F001         	movff	main@aposta,___awdiv@dividend
   790  0007DE  C1E1  F002         	movff	main@aposta+1,___awdiv@dividend+1
   791  0007E2  EC75  F00A         	call	___awdiv	;wreg free
   792  0007E6  C001  F009         	movff	?___awdiv,___awmod@dividend
   793  0007EA  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   794  0007EE  0E00               	movlw	0
   795  0007F0  6E0C               	movwf	(___awmod@divisor+1)^0,c
   796  0007F2  0E0A               	movlw	10
   797  0007F4  6E0B               	movwf	___awmod@divisor^0,c
   798  0007F6  EC89  F00B         	call	___awmod	;wreg free
   799  0007FA  5009               	movf	?___awmod^0,w,c
   800  0007FC  0F30               	addlw	48
   801  0007FE  ECCE  F00D         	call	_lcdChar
   802  000802  C1E0  F009         	movff	main@aposta,___awmod@dividend
   803  000806  C1E1  F00A         	movff	main@aposta+1,___awmod@dividend+1
   804  00080A  0E00               	movlw	0
   805  00080C  6E0C               	movwf	(___awmod@divisor+1)^0,c
   806  00080E  0E0A               	movlw	10
   807  000810  6E0B               	movwf	___awmod@divisor^0,c
   808  000812  EC89  F00B         	call	___awmod	;wreg free
   809  000816  5009               	movf	?___awmod^0,w,c
   810  000818  0F30               	addlw	48
   811  00081A  ECCE  F00D         	call	_lcdChar
   812  00081E                     l2077:
   813                           
   814                           ;main.c: 74:             if(((tecla) & (1<<(1)))){if((!jogando)&&(aposta+10<=max)){apost
      +                          a=aposta+10;lcdCommand(0x01);lcdChar((aposta / 1000) % 10 + 48);lcdChar((aposta / 100) %
      +                           10 + 48);lcdChar((aposta / 10) % 10 + 48);lcdChar(aposta % 10 + 48);}if(jogando&&soma<2
      +                          1){soma=soma+sacaCarta(valor,namesa,cont);}}
   815  00081E  0101               	movlb	1	; () banked
   816  000820  A3D6               	btfss	main@tecla& (0+255),1,b
   817  000822  EF15  F004         	goto	u2091
   818  000826  EF17  F004         	goto	u2090
   819  00082A                     u2091:
   820  00082A  EFC5  F004         	goto	l2101
   821  00082E                     u2090:
   822  00082E                     
   823                           ; BSR set to: 1
   824  00082E  51DA               	movf	main@jogando& (0+255),w,b
   825  000830  11DB               	iorwf	(main@jogando+1)& (0+255),w,b
   826  000832  A4D8               	btfss	status,2,c
   827  000834  EF1E  F004         	goto	u2101
   828  000838  EF20  F004         	goto	u2100
   829  00083C                     u2101:
   830  00083C  EF94  F004         	goto	l2095
   831  000840                     u2100:
   832  000840                     
   833                           ; BSR set to: 1
   834  000840  0E0A               	movlw	10
   835  000842  25E0               	addwf	main@aposta& (0+255),w,b
   836  000844  6E19               	movwf	??_main^0,c
   837  000846  0E00               	movlw	0
   838  000848  21E1               	addwfc	(main@aposta+1)& (0+255),w,b
   839  00084A  6E1A               	movwf	(??_main+1)^0,c
   840  00084C  5019               	movf	??_main^0,w,c
   841  00084E  5DDC               	subwf	main@max& (0+255),w,b
   842  000850  51DD               	movf	(main@max+1)& (0+255),w,b
   843  000852  0A80               	xorlw	128
   844  000854  6E1B               	movwf	(??_main+2)^0,c
   845  000856  501A               	movf	(??_main+1)^0,w,c
   846  000858  0A80               	xorlw	128
   847  00085A  581B               	subwfb	(??_main+2)^0,w,c
   848  00085C  A0D8               	btfss	status,0,c
   849  00085E  EF33  F004         	goto	u2111
   850  000862  EF35  F004         	goto	u2110
   851  000866                     u2111:
   852  000866  EF94  F004         	goto	l2095
   853  00086A                     u2110:
   854  00086A                     
   855                           ; BSR set to: 1
   856  00086A  0E0A               	movlw	10
   857  00086C  25E0               	addwf	main@aposta& (0+255),w,b
   858  00086E  6FE0               	movwf	main@aposta& (0+255),b
   859  000870  0E00               	movlw	0
   860  000872  21E1               	addwfc	(main@aposta+1)& (0+255),w,b
   861  000874  6FE1               	movwf	(main@aposta+1)& (0+255),b
   862  000876                     
   863                           ; BSR set to: 1
   864  000876  0E01               	movlw	1
   865  000878  ECDD  F00D         	call	_lcdCommand
   866  00087C  0E03               	movlw	3
   867  00087E  6E04               	movwf	(___awdiv@divisor+1)^0,c
   868  000880  0EE8               	movlw	232
   869  000882  6E03               	movwf	___awdiv@divisor^0,c
   870  000884  C1E0  F001         	movff	main@aposta,___awdiv@dividend
   871  000888  C1E1  F002         	movff	main@aposta+1,___awdiv@dividend+1
   872  00088C  EC75  F00A         	call	___awdiv	;wreg free
   873  000890  C001  F009         	movff	?___awdiv,___awmod@dividend
   874  000894  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   875  000898  0E00               	movlw	0
   876  00089A  6E0C               	movwf	(___awmod@divisor+1)^0,c
   877  00089C  0E0A               	movlw	10
   878  00089E  6E0B               	movwf	___awmod@divisor^0,c
   879  0008A0  EC89  F00B         	call	___awmod	;wreg free
   880  0008A4  5009               	movf	?___awmod^0,w,c
   881  0008A6  0F30               	addlw	48
   882  0008A8  ECCE  F00D         	call	_lcdChar
   883  0008AC  0E00               	movlw	0
   884  0008AE  6E04               	movwf	(___awdiv@divisor+1)^0,c
   885  0008B0  0E64               	movlw	100
   886  0008B2  6E03               	movwf	___awdiv@divisor^0,c
   887  0008B4  C1E0  F001         	movff	main@aposta,___awdiv@dividend
   888  0008B8  C1E1  F002         	movff	main@aposta+1,___awdiv@dividend+1
   889  0008BC  EC75  F00A         	call	___awdiv	;wreg free
   890  0008C0  C001  F009         	movff	?___awdiv,___awmod@dividend
   891  0008C4  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   892  0008C8  0E00               	movlw	0
   893  0008CA  6E0C               	movwf	(___awmod@divisor+1)^0,c
   894  0008CC  0E0A               	movlw	10
   895  0008CE  6E0B               	movwf	___awmod@divisor^0,c
   896  0008D0  EC89  F00B         	call	___awmod	;wreg free
   897  0008D4  5009               	movf	?___awmod^0,w,c
   898  0008D6  0F30               	addlw	48
   899  0008D8  ECCE  F00D         	call	_lcdChar
   900  0008DC  0E00               	movlw	0
   901  0008DE  6E04               	movwf	(___awdiv@divisor+1)^0,c
   902  0008E0  0E0A               	movlw	10
   903  0008E2  6E03               	movwf	___awdiv@divisor^0,c
   904  0008E4  C1E0  F001         	movff	main@aposta,___awdiv@dividend
   905  0008E8  C1E1  F002         	movff	main@aposta+1,___awdiv@dividend+1
   906  0008EC  EC75  F00A         	call	___awdiv	;wreg free
   907  0008F0  C001  F009         	movff	?___awdiv,___awmod@dividend
   908  0008F4  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   909  0008F8  0E00               	movlw	0
   910  0008FA  6E0C               	movwf	(___awmod@divisor+1)^0,c
   911  0008FC  0E0A               	movlw	10
   912  0008FE  6E0B               	movwf	___awmod@divisor^0,c
   913  000900  EC89  F00B         	call	___awmod	;wreg free
   914  000904  5009               	movf	?___awmod^0,w,c
   915  000906  0F30               	addlw	48
   916  000908  ECCE  F00D         	call	_lcdChar
   917  00090C  C1E0  F009         	movff	main@aposta,___awmod@dividend
   918  000910  C1E1  F00A         	movff	main@aposta+1,___awmod@dividend+1
   919  000914  0E00               	movlw	0
   920  000916  6E0C               	movwf	(___awmod@divisor+1)^0,c
   921  000918  0E0A               	movlw	10
   922  00091A  6E0B               	movwf	___awmod@divisor^0,c
   923  00091C  EC89  F00B         	call	___awmod	;wreg free
   924  000920  5009               	movf	?___awmod^0,w,c
   925  000922  0F30               	addlw	48
   926  000924  ECCE  F00D         	call	_lcdChar
   927  000928                     l2095:
   928  000928  0101               	movlb	1	; () banked
   929  00092A  51DA               	movf	main@jogando& (0+255),w,b
   930  00092C  11DB               	iorwf	(main@jogando+1)& (0+255),w,b
   931  00092E  B4D8               	btfsc	status,2,c
   932  000930  EF9C  F004         	goto	u2121
   933  000934  EF9E  F004         	goto	u2120
   934  000938                     u2121:
   935  000938  EFC5  F004         	goto	l2101
   936  00093C                     u2120:
   937  00093C                     
   938                           ; BSR set to: 1
   939  00093C  BFDF               	btfsc	(main@soma+1)& (0+255),7,b
   940  00093E  EFAC  F004         	goto	u2130
   941  000942  51DF               	movf	(main@soma+1)& (0+255),w,b
   942  000944  E107               	bnz	u2131
   943  000946  0E15               	movlw	21
   944  000948  5DDE               	subwf	main@soma& (0+255),w,b
   945  00094A  B0D8               	btfsc	status,0,c
   946  00094C  EFAA  F004         	goto	u2131
   947  000950  EFAC  F004         	goto	u2130
   948  000954                     u2131:
   949  000954  EFC5  F004         	goto	l2101
   950  000958                     u2130:
   951  000958                     
   952                           ; BSR set to: 1
   953  000958  0E00               	movlw	low main@valor
   954  00095A  6E0F               	movwf	sacaCarta@valor^0,c
   955  00095C  0E01               	movlw	high main@valor
   956  00095E  6E10               	movwf	(sacaCarta@valor+1)^0,c
   957  000960  0E68               	movlw	low main@namesa
   958  000962  6E11               	movwf	sacaCarta@namesa^0,c
   959  000964  0E01               	movlw	high main@namesa
   960  000966  6E12               	movwf	(sacaCarta@namesa+1)^0,c
   961  000968  C1D0  F013         	movff	main@cont,sacaCarta@cont
   962  00096C  C1D1  F014         	movff	main@cont+1,sacaCarta@cont+1
   963  000970  C1D2  F015         	movff	main@cont+2,sacaCarta@cont+2
   964  000974  C1D3  F016         	movff	main@cont+3,sacaCarta@cont+3
   965  000978  EC42  F008         	call	_sacaCarta	;wreg free
   966  00097C  0101               	movlb	1	; () banked
   967  00097E  51DE               	movf	main@soma& (0+255),w,b
   968  000980  240F               	addwf	?_sacaCarta^0,w,c
   969  000982  6FDE               	movwf	main@soma& (0+255),b
   970  000984  51DF               	movf	(main@soma+1)& (0+255),w,b
   971  000986  2010               	addwfc	(?_sacaCarta+1)^0,w,c
   972  000988  6FDF               	movwf	(main@soma+1)& (0+255),b
   973  00098A                     l2101:
   974                           
   975                           ; BSR set to: 1
   976                           ;main.c: 77:         if(jogando){
   977  00098A  51DA               	movf	main@jogando& (0+255),w,b
   978  00098C  11DB               	iorwf	(main@jogando+1)& (0+255),w,b
   979  00098E  B4D8               	btfsc	status,2,c
   980  000990  EFCC  F004         	goto	u2141
   981  000994  EFCE  F004         	goto	u2140
   982  000998                     u2141:
   983  000998  EF32  F005         	goto	l2105
   984  00099C                     u2140:
   985  00099C                     
   986                           ; BSR set to: 1
   987                           ;main.c: 78:             rgbColor(4);
   988  00099C  0E00               	movlw	0
   989  00099E  6E08               	movwf	(rgbColor@led+1)^0,c
   990  0009A0  0E04               	movlw	4
   991  0009A2  6E07               	movwf	rgbColor@led^0,c
   992  0009A4  EC31  F00B         	call	_rgbColor	;wreg free
   993                           
   994                           ;main.c: 79:             lcdCommand(0xC0);
   995  0009A8  0EC0               	movlw	192
   996  0009AA  ECDD  F00D         	call	_lcdCommand
   997                           
   998                           ;main.c: 80:             lcdChar((soma / 1000) % 10 + 48);
   999  0009AE  0E03               	movlw	3
  1000  0009B0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1001  0009B2  0EE8               	movlw	232
  1002  0009B4  6E03               	movwf	___awdiv@divisor^0,c
  1003  0009B6  C1DE  F001         	movff	main@soma,___awdiv@dividend
  1004  0009BA  C1DF  F002         	movff	main@soma+1,___awdiv@dividend+1
  1005  0009BE  EC75  F00A         	call	___awdiv	;wreg free
  1006  0009C2  C001  F009         	movff	?___awdiv,___awmod@dividend
  1007  0009C6  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1008  0009CA  0E00               	movlw	0
  1009  0009CC  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1010  0009CE  0E0A               	movlw	10
  1011  0009D0  6E0B               	movwf	___awmod@divisor^0,c
  1012  0009D2  EC89  F00B         	call	___awmod	;wreg free
  1013  0009D6  5009               	movf	?___awmod^0,w,c
  1014  0009D8  0F30               	addlw	48
  1015  0009DA  ECCE  F00D         	call	_lcdChar
  1016                           
  1017                           ;main.c: 81:             lcdChar((soma / 100) % 10 + 48);
  1018  0009DE  0E00               	movlw	0
  1019  0009E0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1020  0009E2  0E64               	movlw	100
  1021  0009E4  6E03               	movwf	___awdiv@divisor^0,c
  1022  0009E6  C1DE  F001         	movff	main@soma,___awdiv@dividend
  1023  0009EA  C1DF  F002         	movff	main@soma+1,___awdiv@dividend+1
  1024  0009EE  EC75  F00A         	call	___awdiv	;wreg free
  1025  0009F2  C001  F009         	movff	?___awdiv,___awmod@dividend
  1026  0009F6  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1027  0009FA  0E00               	movlw	0
  1028  0009FC  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1029  0009FE  0E0A               	movlw	10
  1030  000A00  6E0B               	movwf	___awmod@divisor^0,c
  1031  000A02  EC89  F00B         	call	___awmod	;wreg free
  1032  000A06  5009               	movf	?___awmod^0,w,c
  1033  000A08  0F30               	addlw	48
  1034  000A0A  ECCE  F00D         	call	_lcdChar
  1035                           
  1036                           ;main.c: 82:             lcdChar((soma / 10) % 10 + 48);
  1037  000A0E  0E00               	movlw	0
  1038  000A10  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1039  000A12  0E0A               	movlw	10
  1040  000A14  6E03               	movwf	___awdiv@divisor^0,c
  1041  000A16  C1DE  F001         	movff	main@soma,___awdiv@dividend
  1042  000A1A  C1DF  F002         	movff	main@soma+1,___awdiv@dividend+1
  1043  000A1E  EC75  F00A         	call	___awdiv	;wreg free
  1044  000A22  C001  F009         	movff	?___awdiv,___awmod@dividend
  1045  000A26  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1046  000A2A  0E00               	movlw	0
  1047  000A2C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1048  000A2E  0E0A               	movlw	10
  1049  000A30  6E0B               	movwf	___awmod@divisor^0,c
  1050  000A32  EC89  F00B         	call	___awmod	;wreg free
  1051  000A36  5009               	movf	?___awmod^0,w,c
  1052  000A38  0F30               	addlw	48
  1053  000A3A  ECCE  F00D         	call	_lcdChar
  1054                           
  1055                           ;main.c: 83:             lcdChar((soma / 1) % 10 + 48);
  1056  000A3E  C1DE  F009         	movff	main@soma,___awmod@dividend
  1057  000A42  C1DF  F00A         	movff	main@soma+1,___awmod@dividend+1
  1058  000A46  0E00               	movlw	0
  1059  000A48  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1060  000A4A  0E0A               	movlw	10
  1061  000A4C  6E0B               	movwf	___awmod@divisor^0,c
  1062  000A4E  EC89  F00B         	call	___awmod	;wreg free
  1063  000A52  5009               	movf	?___awmod^0,w,c
  1064  000A54  0F30               	addlw	48
  1065  000A56  ECCE  F00D         	call	_lcdChar
  1066                           
  1067                           ;main.c: 84:             lcdCommand(0x80);
  1068  000A5A  0E80               	movlw	128
  1069  000A5C  ECDD  F00D         	call	_lcdCommand
  1070                           
  1071                           ;main.c: 85:         }
  1072  000A60  EFE9  F005         	goto	l2129
  1073  000A64                     l2105:
  1074                           
  1075                           ; BSR set to: 1
  1076                           ;main.c: 87:             lcdCommand(0xC0);
  1077  000A64  0EC0               	movlw	192
  1078  000A66  ECDD  F00D         	call	_lcdCommand
  1079                           
  1080                           ;main.c: 88:             lcdChar((max / 1000) % 10 + 48);
  1081  000A6A  0E03               	movlw	3
  1082  000A6C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1083  000A6E  0EE8               	movlw	232
  1084  000A70  6E03               	movwf	___awdiv@divisor^0,c
  1085  000A72  C1DC  F001         	movff	main@max,___awdiv@dividend
  1086  000A76  C1DD  F002         	movff	main@max+1,___awdiv@dividend+1
  1087  000A7A  EC75  F00A         	call	___awdiv	;wreg free
  1088  000A7E  C001  F009         	movff	?___awdiv,___awmod@dividend
  1089  000A82  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1090  000A86  0E00               	movlw	0
  1091  000A88  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1092  000A8A  0E0A               	movlw	10
  1093  000A8C  6E0B               	movwf	___awmod@divisor^0,c
  1094  000A8E  EC89  F00B         	call	___awmod	;wreg free
  1095  000A92  5009               	movf	?___awmod^0,w,c
  1096  000A94  0F30               	addlw	48
  1097  000A96  ECCE  F00D         	call	_lcdChar
  1098                           
  1099                           ;main.c: 89:             lcdChar((max / 100) % 10 + 48);
  1100  000A9A  0E00               	movlw	0
  1101  000A9C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1102  000A9E  0E64               	movlw	100
  1103  000AA0  6E03               	movwf	___awdiv@divisor^0,c
  1104  000AA2  C1DC  F001         	movff	main@max,___awdiv@dividend
  1105  000AA6  C1DD  F002         	movff	main@max+1,___awdiv@dividend+1
  1106  000AAA  EC75  F00A         	call	___awdiv	;wreg free
  1107  000AAE  C001  F009         	movff	?___awdiv,___awmod@dividend
  1108  000AB2  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1109  000AB6  0E00               	movlw	0
  1110  000AB8  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1111  000ABA  0E0A               	movlw	10
  1112  000ABC  6E0B               	movwf	___awmod@divisor^0,c
  1113  000ABE  EC89  F00B         	call	___awmod	;wreg free
  1114  000AC2  5009               	movf	?___awmod^0,w,c
  1115  000AC4  0F30               	addlw	48
  1116  000AC6  ECCE  F00D         	call	_lcdChar
  1117                           
  1118                           ;main.c: 90:             lcdChar((max / 10) % 10 + 48);
  1119  000ACA  0E00               	movlw	0
  1120  000ACC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1121  000ACE  0E0A               	movlw	10
  1122  000AD0  6E03               	movwf	___awdiv@divisor^0,c
  1123  000AD2  C1DC  F001         	movff	main@max,___awdiv@dividend
  1124  000AD6  C1DD  F002         	movff	main@max+1,___awdiv@dividend+1
  1125  000ADA  EC75  F00A         	call	___awdiv	;wreg free
  1126  000ADE  C001  F009         	movff	?___awdiv,___awmod@dividend
  1127  000AE2  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1128  000AE6  0E00               	movlw	0
  1129  000AE8  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1130  000AEA  0E0A               	movlw	10
  1131  000AEC  6E0B               	movwf	___awmod@divisor^0,c
  1132  000AEE  EC89  F00B         	call	___awmod	;wreg free
  1133  000AF2  5009               	movf	?___awmod^0,w,c
  1134  000AF4  0F30               	addlw	48
  1135  000AF6  ECCE  F00D         	call	_lcdChar
  1136                           
  1137                           ;main.c: 91:             lcdChar((max / 1) % 10 + 48);
  1138  000AFA  C1DC  F009         	movff	main@max,___awmod@dividend
  1139  000AFE  C1DD  F00A         	movff	main@max+1,___awmod@dividend+1
  1140  000B02  0E00               	movlw	0
  1141  000B04  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1142  000B06  0E0A               	movlw	10
  1143  000B08  6E0B               	movwf	___awmod@divisor^0,c
  1144  000B0A  EC89  F00B         	call	___awmod	;wreg free
  1145  000B0E  5009               	movf	?___awmod^0,w,c
  1146  000B10  0F30               	addlw	48
  1147  000B12  ECCE  F00D         	call	_lcdChar
  1148                           
  1149                           ;main.c: 92:             lcdCommand(0x80);
  1150  000B16  0E80               	movlw	128
  1151  000B18  ECDD  F00D         	call	_lcdCommand
  1152  000B1C                     
  1153                           ;main.c: 93:             mesaReset(namesa);
  1154  000B1C  0E68               	movlw	low main@namesa
  1155  000B1E  6E01               	movwf	mesaReset@namesa^0,c
  1156  000B20  0E01               	movlw	high main@namesa
  1157  000B22  6E02               	movwf	(mesaReset@namesa+1)^0,c
  1158  000B24  ECAD  F00C         	call	_mesaReset	;wreg free
  1159  000B28                     
  1160                           ;main.c: 94:             if(terminou){
  1161  000B28  0101               	movlb	1	; () banked
  1162  000B2A  51D4               	movf	main@terminou& (0+255),w,b
  1163  000B2C  11D5               	iorwf	(main@terminou+1)& (0+255),w,b
  1164  000B2E  B4D8               	btfsc	status,2,c
  1165  000B30  EF9C  F005         	goto	u2151
  1166  000B34  EF9E  F005         	goto	u2150
  1167  000B38                     u2151:
  1168  000B38  EFE9  F005         	goto	l2129
  1169  000B3C                     u2150:
  1170  000B3C                     
  1171                           ; BSR set to: 1
  1172                           ;main.c: 95:                 if((soma>21)||(soma<18)){
  1173  000B3C  BFDF               	btfsc	(main@soma+1)& (0+255),7,b
  1174  000B3E  EFAC  F005         	goto	u2160
  1175  000B42  51DF               	movf	(main@soma+1)& (0+255),w,b
  1176  000B44  E107               	bnz	u2161
  1177  000B46  0E16               	movlw	22
  1178  000B48  5DDE               	subwf	main@soma& (0+255),w,b
  1179  000B4A  B0D8               	btfsc	status,0,c
  1180  000B4C  EFAA  F005         	goto	u2161
  1181  000B50  EFAC  F005         	goto	u2160
  1182  000B54                     u2161:
  1183  000B54  EFBA  F005         	goto	l2115
  1184  000B58                     u2160:
  1185  000B58                     
  1186                           ; BSR set to: 1
  1187  000B58  BFDF               	btfsc	(main@soma+1)& (0+255),7,b
  1188  000B5A  EFBA  F005         	goto	u2170
  1189  000B5E  51DF               	movf	(main@soma+1)& (0+255),w,b
  1190  000B60  E107               	bnz	u2171
  1191  000B62  0E12               	movlw	18
  1192  000B64  5DDE               	subwf	main@soma& (0+255),w,b
  1193  000B66  B0D8               	btfsc	status,0,c
  1194  000B68  EFB8  F005         	goto	u2171
  1195  000B6C  EFBA  F005         	goto	u2170
  1196  000B70                     u2171:
  1197  000B70  EFC9  F005         	goto	l2119
  1198  000B74                     u2170:
  1199  000B74                     l2115:
  1200                           
  1201                           ; BSR set to: 1
  1202                           ;main.c: 96:                     rgbColor(1);
  1203  000B74  0E00               	movlw	0
  1204  000B76  6E08               	movwf	(rgbColor@led+1)^0,c
  1205  000B78  0E01               	movlw	1
  1206  000B7A  6E07               	movwf	rgbColor@led^0,c
  1207  000B7C  EC31  F00B         	call	_rgbColor	;wreg free
  1208  000B80                     
  1209                           ;main.c: 97:                     max=max-aposta;
  1210  000B80  0101               	movlb	1	; () banked
  1211  000B82  51E0               	movf	main@aposta& (0+255),w,b
  1212  000B84  5DDC               	subwf	main@max& (0+255),w,b
  1213  000B86  6FDC               	movwf	main@max& (0+255),b
  1214  000B88  51E1               	movf	(main@aposta+1)& (0+255),w,b
  1215  000B8A  59DD               	subwfb	(main@max+1)& (0+255),w,b
  1216  000B8C  6FDD               	movwf	(main@max+1)& (0+255),b
  1217                           
  1218                           ;main.c: 98:                 }else{
  1219  000B8E  EFDC  F005         	goto	l2123
  1220  000B92                     l2119:
  1221                           
  1222                           ; BSR set to: 1
  1223                           ;main.c: 99:                     max=max+2*aposta;
  1224  000B92  C1E0  F019         	movff	main@aposta,??_main
  1225  000B96  C1E1  F01A         	movff	main@aposta+1,??_main+1
  1226  000B9A  90D8               	bcf	status,0,c
  1227  000B9C  3619               	rlcf	??_main^0,f,c
  1228  000B9E  361A               	rlcf	(??_main+1)^0,f,c
  1229  000BA0  51DC               	movf	main@max& (0+255),w,b
  1230  000BA2  2419               	addwf	??_main^0,w,c
  1231  000BA4  6FDC               	movwf	main@max& (0+255),b
  1232  000BA6  51DD               	movf	(main@max+1)& (0+255),w,b
  1233  000BA8  201A               	addwfc	(??_main+1)^0,w,c
  1234  000BAA  6FDD               	movwf	(main@max+1)& (0+255),b
  1235  000BAC                     
  1236                           ; BSR set to: 1
  1237                           ;main.c: 100:                     rgbColor(2);
  1238  000BAC  0E00               	movlw	0
  1239  000BAE  6E08               	movwf	(rgbColor@led+1)^0,c
  1240  000BB0  0E02               	movlw	2
  1241  000BB2  6E07               	movwf	rgbColor@led^0,c
  1242  000BB4  EC31  F00B         	call	_rgbColor	;wreg free
  1243  000BB8                     l2123:
  1244                           
  1245                           ;main.c: 102:                 aposta=0;
  1246  000BB8  0E00               	movlw	0
  1247  000BBA  0101               	movlb	1	; () banked
  1248  000BBC  6FE1               	movwf	(main@aposta+1)& (0+255),b
  1249  000BBE  0E00               	movlw	0
  1250  000BC0  6FE0               	movwf	main@aposta& (0+255),b
  1251  000BC2                     
  1252                           ; BSR set to: 1
  1253                           ;main.c: 103:                 soma=0;
  1254  000BC2  0E00               	movlw	0
  1255  000BC4  6FDF               	movwf	(main@soma+1)& (0+255),b
  1256  000BC6  0E00               	movlw	0
  1257  000BC8  6FDE               	movwf	main@soma& (0+255),b
  1258  000BCA                     
  1259                           ; BSR set to: 1
  1260                           ;main.c: 104:                 terminou=0;
  1261  000BCA  0E00               	movlw	0
  1262  000BCC  6FD5               	movwf	(main@terminou+1)& (0+255),b
  1263  000BCE  0E00               	movlw	0
  1264  000BD0  6FD4               	movwf	main@terminou& (0+255),b
  1265  000BD2                     l2129:
  1266                           
  1267                           ;main.c: 107:         cont++;
  1268  000BD2  0E01               	movlw	1
  1269  000BD4  0101               	movlb	1	; () banked
  1270  000BD6  27D0               	addwf	main@cont& (0+255),f,b
  1271  000BD8  0E00               	movlw	0
  1272  000BDA  23D1               	addwfc	(main@cont+1)& (0+255),f,b
  1273  000BDC  23D2               	addwfc	(main@cont+2)& (0+255),f,b
  1274  000BDE  23D3               	addwfc	(main@cont+3)& (0+255),f,b
  1275                           
  1276                           ;main.c: 108:     }
  1277  000BE0  EF42  F003         	goto	l2037
  1278  000BE4  EF00  F000         	goto	start
  1279  000BE8                     __end_of_main:
  1280                           	callstack 0
  1281                           
  1282 ;; *************** function _timerInit *****************
  1283 ;; Defined at:
  1284 ;;		line 55 in file "timer.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, status,2, status,0
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1298 ;;      Params:         0       0       0       0       0       0       0
  1299 ;;      Locals:         0       0       0       0       0       0       0
  1300 ;;      Temps:          0       0       0       0       0       0       0
  1301 ;;      Totals:         0       0       0       0       0       0       0
  1302 ;;Total ram usage:        0 bytes
  1303 ;; Hardware stack levels used: 1
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text1
  1312  001BF2                     __ptext1:
  1313                           	callstack 0
  1314  001BF2                     _timerInit:
  1315                           	callstack 30
  1316  001BF2                     
  1317                           ;timer.c: 57:  T0CON = 0b00001000;
  1318  001BF2  0E08               	movlw	8
  1319  001BF4  6ED5               	movwf	213,c	;volatile
  1320  001BF6                     
  1321                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
  1322  001BF6  8ED5               	bsf	213,7,c	;volatile
  1323  001BF8  0012               	return		;funcret
  1324  001BFA                     __end_of_timerInit:
  1325                           	callstack 0
  1326                           
  1327 ;; *************** function _sacaCarta *****************
  1328 ;; Defined at:
  1329 ;;		line 32 in file "main.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  valor           2   14[COMRAM] PTR int 
  1332 ;;		 -> main@valor(104), 
  1333 ;;  namesa          2   16[COMRAM] PTR int 
  1334 ;;		 -> main@namesa(104), 
  1335 ;;  cont            4   18[COMRAM] unsigned long 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;		None
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  2   14[COMRAM] int 
  1340 ;; Registers used:
  1341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1347 ;;      Params:         8       0       0       0       0       0       0
  1348 ;;      Locals:         0       0       0       0       0       0       0
  1349 ;;      Temps:          2       0       0       0       0       0       0
  1350 ;;      Totals:        10       0       0       0       0       0       0
  1351 ;;Total ram usage:       10 bytes
  1352 ;; Hardware stack levels used: 1
  1353 ;; Hardware stack levels required when called: 5
  1354 ;; This function calls:
  1355 ;;		___llmod
  1356 ;;		_lcdChar
  1357 ;;		_timerReset
  1358 ;;		_timerWait
  1359 ;; This function is called by:
  1360 ;;		_main
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text2
  1365  001084                     __ptext2:
  1366                           	callstack 0
  1367  001084                     _sacaCarta:
  1368                           	callstack 25
  1369  001084                     
  1370                           ;main.c: 32: int sacaCarta(int *valor,int *namesa,unsigned long int cont);main.c: 33: {;
      +                          main.c: 34:     while(namesa[cont%52]){
  1371  001084  EF5F  F008         	goto	l1845
  1372  001088                     l1841:
  1373                           
  1374                           ;main.c: 35:         timerReset(2*cont%52);
  1375  001088  90D8               	bcf	status,0,c
  1376  00108A  3413               	rlcf	sacaCarta@cont^0,w,c
  1377  00108C  6E01               	movwf	___llmod@dividend^0,c
  1378  00108E  3414               	rlcf	(sacaCarta@cont+1)^0,w,c
  1379  001090  6E02               	movwf	(___llmod@dividend+1)^0,c
  1380  001092  3415               	rlcf	(sacaCarta@cont+2)^0,w,c
  1381  001094  6E03               	movwf	(___llmod@dividend+2)^0,c
  1382  001096  3416               	rlcf	(sacaCarta@cont+3)^0,w,c
  1383  001098  6E04               	movwf	(___llmod@dividend+3)^0,c
  1384  00109A  0E34               	movlw	52
  1385  00109C  6E05               	movwf	___llmod@divisor^0,c
  1386  00109E  0E00               	movlw	0
  1387  0010A0  6E06               	movwf	(___llmod@divisor+1)^0,c
  1388  0010A2  0E00               	movlw	0
  1389  0010A4  6E07               	movwf	(___llmod@divisor+2)^0,c
  1390  0010A6  0E00               	movlw	0
  1391  0010A8  6E08               	movwf	(___llmod@divisor+3)^0,c
  1392  0010AA  ECE1  F00B         	call	___llmod	;wreg free
  1393  0010AE  C001  F00A         	movff	?___llmod,timerReset@tempo
  1394  0010B2  C002  F00B         	movff	?___llmod+1,timerReset@tempo+1
  1395  0010B6  ECBD  F00D         	call	_timerReset	;wreg free
  1396  0010BA                     
  1397                           ;main.c: 36:         timerWait();
  1398  0010BA  ECEC  F00D         	call	_timerWait	;wreg free
  1399  0010BE                     l1845:
  1400                           
  1401                           ;main.c: 34:     while(namesa[cont%52]){
  1402  0010BE  C013  F001         	movff	sacaCarta@cont,___llmod@dividend
  1403  0010C2  C014  F002         	movff	sacaCarta@cont+1,___llmod@dividend+1
  1404  0010C6  C015  F003         	movff	sacaCarta@cont+2,___llmod@dividend+2
  1405  0010CA  C016  F004         	movff	sacaCarta@cont+3,___llmod@dividend+3
  1406  0010CE  0E34               	movlw	52
  1407  0010D0  6E05               	movwf	___llmod@divisor^0,c
  1408  0010D2  0E00               	movlw	0
  1409  0010D4  6E06               	movwf	(___llmod@divisor+1)^0,c
  1410  0010D6  0E00               	movlw	0
  1411  0010D8  6E07               	movwf	(___llmod@divisor+2)^0,c
  1412  0010DA  0E00               	movlw	0
  1413  0010DC  6E08               	movwf	(___llmod@divisor+3)^0,c
  1414  0010DE  ECE1  F00B         	call	___llmod	;wreg free
  1415  0010E2  90D8               	bcf	status,0,c
  1416  0010E4  3601               	rlcf	?___llmod^0,f,c
  1417  0010E6  3602               	rlcf	(?___llmod+1)^0,f,c
  1418  0010E8  5001               	movf	?___llmod^0,w,c
  1419  0010EA  2411               	addwf	sacaCarta@namesa^0,w,c
  1420  0010EC  6ED9               	movwf	fsr2l,c
  1421  0010EE  5002               	movf	(?___llmod+1)^0,w,c
  1422  0010F0  2012               	addwfc	(sacaCarta@namesa+1)^0,w,c
  1423  0010F2  6EDA               	movwf	fsr2h,c
  1424  0010F4  50DE               	movf	postinc2,w,c
  1425  0010F6  10DE               	iorwf	postinc2,w,c
  1426  0010F8  A4D8               	btfss	status,2,c
  1427  0010FA  EF81  F008         	goto	u1751
  1428  0010FE  EF83  F008         	goto	u1750
  1429  001102                     u1751:
  1430  001102  EF44  F008         	goto	l1841
  1431  001106                     u1750:
  1432  001106                     
  1433                           ;main.c: 38:     if(valor[cont%52]==1){
  1434  001106  C013  F001         	movff	sacaCarta@cont,___llmod@dividend
  1435  00110A  C014  F002         	movff	sacaCarta@cont+1,___llmod@dividend+1
  1436  00110E  C015  F003         	movff	sacaCarta@cont+2,___llmod@dividend+2
  1437  001112  C016  F004         	movff	sacaCarta@cont+3,___llmod@dividend+3
  1438  001116  0E34               	movlw	52
  1439  001118  6E05               	movwf	___llmod@divisor^0,c
  1440  00111A  0E00               	movlw	0
  1441  00111C  6E06               	movwf	(___llmod@divisor+1)^0,c
  1442  00111E  0E00               	movlw	0
  1443  001120  6E07               	movwf	(___llmod@divisor+2)^0,c
  1444  001122  0E00               	movlw	0
  1445  001124  6E08               	movwf	(___llmod@divisor+3)^0,c
  1446  001126  ECE1  F00B         	call	___llmod	;wreg free
  1447  00112A  90D8               	bcf	status,0,c
  1448  00112C  3601               	rlcf	?___llmod^0,f,c
  1449  00112E  3602               	rlcf	(?___llmod+1)^0,f,c
  1450  001130  5001               	movf	?___llmod^0,w,c
  1451  001132  240F               	addwf	sacaCarta@valor^0,w,c
  1452  001134  6ED9               	movwf	fsr2l,c
  1453  001136  5002               	movf	(?___llmod+1)^0,w,c
  1454  001138  2010               	addwfc	(sacaCarta@valor+1)^0,w,c
  1455  00113A  6EDA               	movwf	fsr2h,c
  1456  00113C  04DE               	decf	postinc2,w,c
  1457  00113E  10DE               	iorwf	postinc2,w,c
  1458  001140  A4D8               	btfss	status,2,c
  1459  001142  EFA5  F008         	goto	u1761
  1460  001146  EFA7  F008         	goto	u1760
  1461  00114A                     u1761:
  1462  00114A  EFB3  F008         	goto	l1855
  1463  00114E                     u1760:
  1464  00114E                     
  1465                           ;main.c: 39:         lcdChar(49);
  1466  00114E  0E31               	movlw	49
  1467  001150  ECCE  F00D         	call	_lcdChar
  1468                           
  1469                           ;main.c: 40:         lcdChar(48);
  1470  001154  0E30               	movlw	48
  1471  001156  ECCE  F00D         	call	_lcdChar
  1472  00115A                     l1851:
  1473                           
  1474                           ;main.c: 41:         return 10;
  1475  00115A  0E00               	movlw	0
  1476  00115C  6E10               	movwf	(?_sacaCarta+1)^0,c
  1477  00115E  0E0A               	movlw	10
  1478  001160  6E0F               	movwf	?_sacaCarta^0,c
  1479  001162  EF24  F009         	goto	l34
  1480  001166                     l1855:
  1481                           
  1482                           ;main.c: 43:     if(valor[cont%52]>=10){
  1483  001166  C013  F001         	movff	sacaCarta@cont,___llmod@dividend
  1484  00116A  C014  F002         	movff	sacaCarta@cont+1,___llmod@dividend+1
  1485  00116E  C015  F003         	movff	sacaCarta@cont+2,___llmod@dividend+2
  1486  001172  C016  F004         	movff	sacaCarta@cont+3,___llmod@dividend+3
  1487  001176  0E34               	movlw	52
  1488  001178  6E05               	movwf	___llmod@divisor^0,c
  1489  00117A  0E00               	movlw	0
  1490  00117C  6E06               	movwf	(___llmod@divisor+1)^0,c
  1491  00117E  0E00               	movlw	0
  1492  001180  6E07               	movwf	(___llmod@divisor+2)^0,c
  1493  001182  0E00               	movlw	0
  1494  001184  6E08               	movwf	(___llmod@divisor+3)^0,c
  1495  001186  ECE1  F00B         	call	___llmod	;wreg free
  1496  00118A  90D8               	bcf	status,0,c
  1497  00118C  3601               	rlcf	?___llmod^0,f,c
  1498  00118E  3602               	rlcf	(?___llmod+1)^0,f,c
  1499  001190  5001               	movf	?___llmod^0,w,c
  1500  001192  240F               	addwf	sacaCarta@valor^0,w,c
  1501  001194  6ED9               	movwf	fsr2l,c
  1502  001196  5002               	movf	(?___llmod+1)^0,w,c
  1503  001198  2010               	addwfc	(sacaCarta@valor+1)^0,w,c
  1504  00119A  6EDA               	movwf	fsr2h,c
  1505  00119C  0E01               	movlw	1
  1506  00119E  BEDB               	btfsc	plusw2,7,c
  1507  0011A0  EFDC  F008         	goto	u1771
  1508  0011A4  0E01               	movlw	1
  1509  0011A6  50DB               	movf	plusw2,w,c
  1510  0011A8  E109               	bnz	u1770
  1511  0011AA  0E0A               	movlw	10
  1512  0011AC  5CDE               	subwf	postinc2,w,c
  1513  0011AE  A0D8               	btfss	status,0,c
  1514  0011B0  EFDC  F008         	goto	u1771
  1515  0011B4  EFDE  F008         	goto	u1770
  1516  0011B8                     u1771:
  1517  0011B8  EFE6  F008         	goto	l1863
  1518  0011BC                     u1770:
  1519  0011BC                     
  1520                           ;main.c: 44:         lcdChar(49);
  1521  0011BC  0E31               	movlw	49
  1522  0011BE  ECCE  F00D         	call	_lcdChar
  1523                           
  1524                           ;main.c: 45:         lcdChar(48);
  1525  0011C2  0E30               	movlw	48
  1526  0011C4  ECCE  F00D         	call	_lcdChar
  1527  0011C8  EFAD  F008         	goto	l1851
  1528  0011CC                     l1863:
  1529                           
  1530                           ;main.c: 48:     lcdChar(valor[cont%52]+48);
  1531  0011CC  C013  F001         	movff	sacaCarta@cont,___llmod@dividend
  1532  0011D0  C014  F002         	movff	sacaCarta@cont+1,___llmod@dividend+1
  1533  0011D4  C015  F003         	movff	sacaCarta@cont+2,___llmod@dividend+2
  1534  0011D8  C016  F004         	movff	sacaCarta@cont+3,___llmod@dividend+3
  1535  0011DC  0E34               	movlw	52
  1536  0011DE  6E05               	movwf	___llmod@divisor^0,c
  1537  0011E0  0E00               	movlw	0
  1538  0011E2  6E06               	movwf	(___llmod@divisor+1)^0,c
  1539  0011E4  0E00               	movlw	0
  1540  0011E6  6E07               	movwf	(___llmod@divisor+2)^0,c
  1541  0011E8  0E00               	movlw	0
  1542  0011EA  6E08               	movwf	(___llmod@divisor+3)^0,c
  1543  0011EC  ECE1  F00B         	call	___llmod	;wreg free
  1544  0011F0  90D8               	bcf	status,0,c
  1545  0011F2  3601               	rlcf	?___llmod^0,f,c
  1546  0011F4  3602               	rlcf	(?___llmod+1)^0,f,c
  1547  0011F6  5001               	movf	?___llmod^0,w,c
  1548  0011F8  240F               	addwf	sacaCarta@valor^0,w,c
  1549  0011FA  6ED9               	movwf	fsr2l,c
  1550  0011FC  5002               	movf	(?___llmod+1)^0,w,c
  1551  0011FE  2010               	addwfc	(sacaCarta@valor+1)^0,w,c
  1552  001200  6EDA               	movwf	fsr2h,c
  1553  001202  50DF               	movf	indf2,w,c
  1554  001204  0F30               	addlw	48
  1555  001206  ECCE  F00D         	call	_lcdChar
  1556                           
  1557                           ;main.c: 49:     return valor[cont%52];
  1558  00120A  C013  F001         	movff	sacaCarta@cont,___llmod@dividend
  1559  00120E  C014  F002         	movff	sacaCarta@cont+1,___llmod@dividend+1
  1560  001212  C015  F003         	movff	sacaCarta@cont+2,___llmod@dividend+2
  1561  001216  C016  F004         	movff	sacaCarta@cont+3,___llmod@dividend+3
  1562  00121A  0E34               	movlw	52
  1563  00121C  6E05               	movwf	___llmod@divisor^0,c
  1564  00121E  0E00               	movlw	0
  1565  001220  6E06               	movwf	(___llmod@divisor+1)^0,c
  1566  001222  0E00               	movlw	0
  1567  001224  6E07               	movwf	(___llmod@divisor+2)^0,c
  1568  001226  0E00               	movlw	0
  1569  001228  6E08               	movwf	(___llmod@divisor+3)^0,c
  1570  00122A  ECE1  F00B         	call	___llmod	;wreg free
  1571  00122E  90D8               	bcf	status,0,c
  1572  001230  3601               	rlcf	?___llmod^0,f,c
  1573  001232  3602               	rlcf	(?___llmod+1)^0,f,c
  1574  001234  5001               	movf	?___llmod^0,w,c
  1575  001236  240F               	addwf	sacaCarta@valor^0,w,c
  1576  001238  6ED9               	movwf	fsr2l,c
  1577  00123A  5002               	movf	(?___llmod+1)^0,w,c
  1578  00123C  2010               	addwfc	(sacaCarta@valor+1)^0,w,c
  1579  00123E  6EDA               	movwf	fsr2h,c
  1580  001240  CFDE F00F          	movff	postinc2,?_sacaCarta
  1581  001244  CFDD F010          	movff	postdec2,?_sacaCarta+1
  1582  001248                     l34:
  1583  001248  0012               	return		;funcret
  1584  00124A                     __end_of_sacaCarta:
  1585                           	callstack 0
  1586                           
  1587 ;; *************** function _timerWait *****************
  1588 ;; Defined at:
  1589 ;;		line 31 in file "timer.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		None
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1603 ;;      Params:         0       0       0       0       0       0       0
  1604 ;;      Locals:         0       0       0       0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0       0       0
  1606 ;;      Totals:         0       0       0       0       0       0       0
  1607 ;;Total ram usage:        0 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; This function calls:
  1610 ;;		Nothing
  1611 ;; This function is called by:
  1612 ;;		_sacaCarta
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text3
  1617  001BD8                     __ptext3:
  1618                           	callstack 0
  1619  001BD8                     _timerWait:
  1620                           	callstack 29
  1621  001BD8                     l332:
  1622  001BD8  A4F2               	btfss	242,2,c	;volatile
  1623  001BDA  EFF1  F00D         	goto	u1601
  1624  001BDE  EFF3  F00D         	goto	u1600
  1625  001BE2                     u1601:
  1626  001BE2  EFEC  F00D         	goto	l332
  1627  001BE6                     u1600:
  1628  001BE6  0012               	return		;funcret
  1629  001BE8                     __end_of_timerWait:
  1630                           	callstack 0
  1631                           
  1632 ;; *************** function _timerReset *****************
  1633 ;; Defined at:
  1634 ;;		line 37 in file "timer.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  tempo           2    9[COMRAM] unsigned int 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  ciclos          2   11[COMRAM] unsigned int 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      void 
  1641 ;; Registers used:
  1642 ;;		wreg, status,2, status,0
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1648 ;;      Params:         2       0       0       0       0       0       0
  1649 ;;      Locals:         2       0       0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0       0       0
  1651 ;;      Totals:         4       0       0       0       0       0       0
  1652 ;;Total ram usage:        4 bytes
  1653 ;; Hardware stack levels used: 1
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_sacaCarta
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text4
  1662  001B7A                     __ptext4:
  1663                           	callstack 0
  1664  001B7A                     _timerReset:
  1665                           	callstack 29
  1666  001B7A                     
  1667                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 39:     unsign
      +                          ed int ciclos;;timer.c: 42:     ciclos = tempo * 2;
  1668  001B7A  90D8               	bcf	status,0,c
  1669  001B7C  340A               	rlcf	timerReset@tempo^0,w,c
  1670  001B7E  6E0C               	movwf	timerReset@ciclos^0,c
  1671  001B80  340B               	rlcf	(timerReset@tempo+1)^0,w,c
  1672  001B82  6E0D               	movwf	(timerReset@ciclos+1)^0,c
  1673  001B84                     
  1674                           ;timer.c: 44:  ciclos = 65535 - ciclos;
  1675  001B84  1E0C               	comf	timerReset@ciclos^0,f,c
  1676  001B86  1E0D               	comf	(timerReset@ciclos+1)^0,f,c
  1677  001B88                     
  1678                           ;timer.c: 47:     ciclos -=50;
  1679  001B88  0E32               	movlw	50
  1680  001B8A  5E0C               	subwf	timerReset@ciclos^0,f,c
  1681  001B8C  0E00               	movlw	0
  1682  001B8E  5A0D               	subwfb	(timerReset@ciclos+1)^0,f,c
  1683  001B90                     
  1684                           ;timer.c: 49:  TMR0H = (ciclos >> 8);
  1685  001B90  500D               	movf	(timerReset@ciclos+1)^0,w,c
  1686  001B92  6ED7               	movwf	215,c	;volatile
  1687  001B94                     
  1688                           ;timer.c: 50:  TMR0L = (ciclos & 0x00FF);
  1689  001B94  C00C  FFD6         	movff	timerReset@ciclos,4054	;volatile
  1690  001B98                     
  1691                           ;timer.c: 52:  ((INTCON) &= ~(1<<(2)));
  1692  001B98  94F2               	bcf	242,2,c	;volatile
  1693  001B9A  0012               	return		;funcret
  1694  001B9C                     __end_of_timerReset:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _lcdChar *****************
  1698 ;; Defined at:
  1699 ;;		line 52 in file "lcd.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  value           1    wreg     unsigned char 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  value           1   13[COMRAM] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1713 ;;      Params:         0       0       0       0       0       0       0
  1714 ;;      Locals:         1       0       0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0
  1716 ;;      Totals:         1       0       0       0       0       0       0
  1717 ;;Total ram usage:        1 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 4
  1720 ;; This function calls:
  1721 ;;		_delayMicro
  1722 ;;		_pushByte
  1723 ;; This function is called by:
  1724 ;;		_sacaCarta
  1725 ;;		_main
  1726 ;;		_lcdString
  1727 ;;		_lcdNumber
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text5
  1732  001B9C                     __ptext5:
  1733                           	callstack 0
  1734  001B9C                     _lcdChar:
  1735                           	callstack 25
  1736                           
  1737                           ;incstack = 0
  1738                           ;lcdChar@value stored from wreg
  1739  001B9C  6E0E               	movwf	lcdChar@value^0,c
  1740  001B9E                     
  1741                           ;lcd.c: 53:  pushByte(value, 1);
  1742  001B9E  0E00               	movlw	0
  1743  001BA0  6E0B               	movwf	(pushByte@rs+1)^0,c
  1744  001BA2  0E01               	movlw	1
  1745  001BA4  6E0A               	movwf	pushByte@rs^0,c
  1746  001BA6  500E               	movf	lcdChar@value^0,w,c
  1747  001BA8  EC59  F00C         	call	_pushByte
  1748  001BAC                     
  1749                           ;lcd.c: 54:  delayMicro(80);
  1750  001BAC  0E00               	movlw	0
  1751  001BAE  6E02               	movwf	(delayMicro@a+1)^0,c
  1752  001BB0  0E50               	movlw	80
  1753  001BB2  6E01               	movwf	delayMicro@a^0,c
  1754  001BB4  ECFD  F00D         	call	_delayMicro	;wreg free
  1755  001BB8  0012               	return		;funcret
  1756  001BBA                     __end_of_lcdChar:
  1757                           	callstack 0
  1758                           
  1759 ;; *************** function ___llmod *****************
  1760 ;; Defined at:
  1761 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  dividend        4    0[COMRAM] unsigned long 
  1764 ;;  divisor         4    4[COMRAM] unsigned long 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  counter         1    8[COMRAM] unsigned char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  4    0[COMRAM] unsigned long 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1776 ;;      Params:         8       0       0       0       0       0       0
  1777 ;;      Locals:         1       0       0       0       0       0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0
  1779 ;;      Totals:         9       0       0       0       0       0       0
  1780 ;;Total ram usage:        9 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; This function calls:
  1783 ;;		Nothing
  1784 ;; This function is called by:
  1785 ;;		_sacaCarta
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text6
  1790  0017C2                     __ptext6:
  1791                           	callstack 0
  1792  0017C2                     ___llmod:
  1793                           	callstack 29
  1794  0017C2  5005               	movf	___llmod@divisor^0,w,c
  1795  0017C4  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  1796  0017C6  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  1797  0017C8  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  1798  0017CA  B4D8               	btfsc	status,2,c
  1799  0017CC  EFEA  F00B         	goto	u1711
  1800  0017D0  EFEC  F00B         	goto	u1710
  1801  0017D4                     u1711:
  1802  0017D4  EF1C  F00C         	goto	l764
  1803  0017D8                     u1710:
  1804  0017D8  0E01               	movlw	1
  1805  0017DA  6E09               	movwf	___llmod@counter^0,c
  1806  0017DC  EFF6  F00B         	goto	l1817
  1807  0017E0                     l1815:
  1808  0017E0  90D8               	bcf	status,0,c
  1809  0017E2  3605               	rlcf	___llmod@divisor^0,f,c
  1810  0017E4  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  1811  0017E6  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  1812  0017E8  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  1813  0017EA  2A09               	incf	___llmod@counter^0,f,c
  1814  0017EC                     l1817:
  1815  0017EC  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  1816  0017EE  EFFB  F00B         	goto	u1721
  1817  0017F2  EFFD  F00B         	goto	u1720
  1818  0017F6                     u1721:
  1819  0017F6  EFF0  F00B         	goto	l1815
  1820  0017FA                     u1720:
  1821  0017FA                     l1819:
  1822  0017FA  5005               	movf	___llmod@divisor^0,w,c
  1823  0017FC  5C01               	subwf	___llmod@dividend^0,w,c
  1824  0017FE  5006               	movf	(___llmod@divisor+1)^0,w,c
  1825  001800  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  1826  001802  5007               	movf	(___llmod@divisor+2)^0,w,c
  1827  001804  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  1828  001806  5008               	movf	(___llmod@divisor+3)^0,w,c
  1829  001808  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  1830  00180A  A0D8               	btfss	status,0,c
  1831  00180C  EF0A  F00C         	goto	u1731
  1832  001810  EF0C  F00C         	goto	u1730
  1833  001814                     u1731:
  1834  001814  EF14  F00C         	goto	l1823
  1835  001818                     u1730:
  1836  001818  5005               	movf	___llmod@divisor^0,w,c
  1837  00181A  5E01               	subwf	___llmod@dividend^0,f,c
  1838  00181C  5006               	movf	(___llmod@divisor+1)^0,w,c
  1839  00181E  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  1840  001820  5007               	movf	(___llmod@divisor+2)^0,w,c
  1841  001822  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  1842  001824  5008               	movf	(___llmod@divisor+3)^0,w,c
  1843  001826  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  1844  001828                     l1823:
  1845  001828  90D8               	bcf	status,0,c
  1846  00182A  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  1847  00182C  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  1848  00182E  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  1849  001830  3205               	rrcf	___llmod@divisor^0,f,c
  1850  001832  2E09               	decfsz	___llmod@counter^0,f,c
  1851  001834  EFFD  F00B         	goto	l1819
  1852  001838                     l764:
  1853  001838  C001  F001         	movff	___llmod@dividend,?___llmod
  1854  00183C  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  1855  001840  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  1856  001844  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  1857  001848  0012               	return		;funcret
  1858  00184A                     __end_of___llmod:
  1859                           	callstack 0
  1860                           
  1861 ;; *************** function _rgbInit *****************
  1862 ;; Defined at:
  1863 ;;		line 45 in file "rgb.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;		None
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;		None
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg, status,2, status,0, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1877 ;;      Params:         0       0       0       0       0       0       0
  1878 ;;      Locals:         0       0       0       0       0       0       0
  1879 ;;      Temps:          0       0       0       0       0       0       0
  1880 ;;      Totals:         0       0       0       0       0       0       0
  1881 ;;Total ram usage:        0 bytes
  1882 ;; Hardware stack levels used: 1
  1883 ;; Hardware stack levels required when called: 1
  1884 ;; This function calls:
  1885 ;;		_pinMode
  1886 ;; This function is called by:
  1887 ;;		_main
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text7
  1892  001A22                     __ptext7:
  1893                           	callstack 0
  1894  001A22                     _rgbInit:
  1895                           	callstack 29
  1896  001A22                     
  1897                           ;rgb.c: 46:  pinMode(PIN_D0, 0);
  1898  001A22  0E00               	movlw	0
  1899  001A24  6E02               	movwf	(pinMode@pin+1)^0,c
  1900  001A26  0E18               	movlw	24
  1901  001A28  6E01               	movwf	pinMode@pin^0,c
  1902  001A2A  0E00               	movlw	0
  1903  001A2C  6E04               	movwf	(pinMode@type+1)^0,c
  1904  001A2E  0E00               	movlw	0
  1905  001A30  6E03               	movwf	pinMode@type^0,c
  1906  001A32  ECF4  F005         	call	_pinMode	;wreg free
  1907                           
  1908                           ;rgb.c: 47:  pinMode(PIN_D1, 0);
  1909  001A36  0E00               	movlw	0
  1910  001A38  6E02               	movwf	(pinMode@pin+1)^0,c
  1911  001A3A  0E19               	movlw	25
  1912  001A3C  6E01               	movwf	pinMode@pin^0,c
  1913  001A3E  0E00               	movlw	0
  1914  001A40  6E04               	movwf	(pinMode@type+1)^0,c
  1915  001A42  0E00               	movlw	0
  1916  001A44  6E03               	movwf	pinMode@type^0,c
  1917  001A46  ECF4  F005         	call	_pinMode	;wreg free
  1918                           
  1919                           ;rgb.c: 48:  pinMode(PIN_D2, 0);
  1920  001A4A  0E00               	movlw	0
  1921  001A4C  6E02               	movwf	(pinMode@pin+1)^0,c
  1922  001A4E  0E1A               	movlw	26
  1923  001A50  6E01               	movwf	pinMode@pin^0,c
  1924  001A52  0E00               	movlw	0
  1925  001A54  6E04               	movwf	(pinMode@type+1)^0,c
  1926  001A56  0E00               	movlw	0
  1927  001A58  6E03               	movwf	pinMode@type^0,c
  1928  001A5A  ECF4  F005         	call	_pinMode	;wreg free
  1929  001A5E  0012               	return		;funcret
  1930  001A60                     __end_of_rgbInit:
  1931                           	callstack 0
  1932                           
  1933 ;; *************** function _rgbColor *****************
  1934 ;; Defined at:
  1935 ;;		line 3 in file "rgb.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  led             2    6[COMRAM] int 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg, status,2, status,0, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1949 ;;      Params:         2       0       0       0       0       0       0
  1950 ;;      Locals:         0       0       0       0       0       0       0
  1951 ;;      Temps:          0       0       0       0       0       0       0
  1952 ;;      Totals:         2       0       0       0       0       0       0
  1953 ;;Total ram usage:        2 bytes
  1954 ;; Hardware stack levels used: 1
  1955 ;; Hardware stack levels required when called: 1
  1956 ;; This function calls:
  1957 ;;		_digitalWrite
  1958 ;; This function is called by:
  1959 ;;		_main
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text8
  1964  001662                     __ptext8:
  1965                           	callstack 0
  1966  001662                     _rgbColor:
  1967                           	callstack 29
  1968  001662                     
  1969                           ;rgb.c: 4:  if (led & 1) {
  1970  001662  A007               	btfss	rgbColor@led^0,0,c
  1971  001664  EF36  F00B         	goto	u1861
  1972  001668  EF38  F00B         	goto	u1860
  1973  00166C                     u1861:
  1974  00166C  EF44  F00B         	goto	l1927
  1975  001670                     u1860:
  1976  001670                     
  1977                           ;rgb.c: 5:   digitalWrite(PIN_D0, 1);
  1978  001670  0E00               	movlw	0
  1979  001672  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1980  001674  0E18               	movlw	24
  1981  001676  6E01               	movwf	digitalWrite@pin^0,c
  1982  001678  0E00               	movlw	0
  1983  00167A  6E04               	movwf	(digitalWrite@value+1)^0,c
  1984  00167C  0E01               	movlw	1
  1985  00167E  6E03               	movwf	digitalWrite@value^0,c
  1986  001680  EC1B  F007         	call	_digitalWrite	;wreg free
  1987                           
  1988                           ;rgb.c: 6:  } else {
  1989  001684  EF4E  F00B         	goto	l1929
  1990  001688                     l1927:
  1991                           
  1992                           ;rgb.c: 7:   digitalWrite(PIN_D0, 0);
  1993  001688  0E00               	movlw	0
  1994  00168A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1995  00168C  0E18               	movlw	24
  1996  00168E  6E01               	movwf	digitalWrite@pin^0,c
  1997  001690  0E00               	movlw	0
  1998  001692  6E04               	movwf	(digitalWrite@value+1)^0,c
  1999  001694  0E00               	movlw	0
  2000  001696  6E03               	movwf	digitalWrite@value^0,c
  2001  001698  EC1B  F007         	call	_digitalWrite	;wreg free
  2002  00169C                     l1929:
  2003                           
  2004                           ;rgb.c: 9:  if (led & 2) {
  2005  00169C  A207               	btfss	rgbColor@led^0,1,c
  2006  00169E  EF53  F00B         	goto	u1871
  2007  0016A2  EF55  F00B         	goto	u1870
  2008  0016A6                     u1871:
  2009  0016A6  EF61  F00B         	goto	l1933
  2010  0016AA                     u1870:
  2011  0016AA                     
  2012                           ;rgb.c: 10:   digitalWrite(PIN_D1, 1);
  2013  0016AA  0E00               	movlw	0
  2014  0016AC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2015  0016AE  0E19               	movlw	25
  2016  0016B0  6E01               	movwf	digitalWrite@pin^0,c
  2017  0016B2  0E00               	movlw	0
  2018  0016B4  6E04               	movwf	(digitalWrite@value+1)^0,c
  2019  0016B6  0E01               	movlw	1
  2020  0016B8  6E03               	movwf	digitalWrite@value^0,c
  2021  0016BA  EC1B  F007         	call	_digitalWrite	;wreg free
  2022                           
  2023                           ;rgb.c: 11:  } else {
  2024  0016BE  EF6B  F00B         	goto	l1935
  2025  0016C2                     l1933:
  2026                           
  2027                           ;rgb.c: 12:   digitalWrite(PIN_D1, 0);
  2028  0016C2  0E00               	movlw	0
  2029  0016C4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2030  0016C6  0E19               	movlw	25
  2031  0016C8  6E01               	movwf	digitalWrite@pin^0,c
  2032  0016CA  0E00               	movlw	0
  2033  0016CC  6E04               	movwf	(digitalWrite@value+1)^0,c
  2034  0016CE  0E00               	movlw	0
  2035  0016D0  6E03               	movwf	digitalWrite@value^0,c
  2036  0016D2  EC1B  F007         	call	_digitalWrite	;wreg free
  2037  0016D6                     l1935:
  2038                           
  2039                           ;rgb.c: 14:  if (led & 4) {
  2040  0016D6  A407               	btfss	rgbColor@led^0,2,c
  2041  0016D8  EF70  F00B         	goto	u1881
  2042  0016DC  EF72  F00B         	goto	u1880
  2043  0016E0                     u1881:
  2044  0016E0  EF7E  F00B         	goto	l1939
  2045  0016E4                     u1880:
  2046  0016E4                     
  2047                           ;rgb.c: 15:   digitalWrite(PIN_D2, 1);
  2048  0016E4  0E00               	movlw	0
  2049  0016E6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2050  0016E8  0E1A               	movlw	26
  2051  0016EA  6E01               	movwf	digitalWrite@pin^0,c
  2052  0016EC  0E00               	movlw	0
  2053  0016EE  6E04               	movwf	(digitalWrite@value+1)^0,c
  2054  0016F0  0E01               	movlw	1
  2055  0016F2  6E03               	movwf	digitalWrite@value^0,c
  2056  0016F4  EC1B  F007         	call	_digitalWrite	;wreg free
  2057                           
  2058                           ;rgb.c: 16:  } else {
  2059  0016F8  EF88  F00B         	goto	l303
  2060  0016FC                     l1939:
  2061                           
  2062                           ;rgb.c: 17:   digitalWrite(PIN_D2, 0);
  2063  0016FC  0E00               	movlw	0
  2064  0016FE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2065  001700  0E1A               	movlw	26
  2066  001702  6E01               	movwf	digitalWrite@pin^0,c
  2067  001704  0E00               	movlw	0
  2068  001706  6E04               	movwf	(digitalWrite@value+1)^0,c
  2069  001708  0E00               	movlw	0
  2070  00170A  6E03               	movwf	digitalWrite@value^0,c
  2071  00170C  EC1B  F007         	call	_digitalWrite	;wreg free
  2072  001710                     l303:
  2073  001710  0012               	return		;funcret
  2074  001712                     __end_of_rgbColor:
  2075                           	callstack 0
  2076                           
  2077 ;; *************** function _mesaReset *****************
  2078 ;; Defined at:
  2079 ;;		line 24 in file "main.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  namesa          2    0[COMRAM] PTR int 
  2082 ;;		 -> main@namesa(104), 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  i               2    2[COMRAM] int 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2094 ;;      Params:         2       0       0       0       0       0       0
  2095 ;;      Locals:         2       0       0       0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0
  2097 ;;      Totals:         4       0       0       0       0       0       0
  2098 ;;Total ram usage:        4 bytes
  2099 ;; Hardware stack levels used: 1
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text9
  2108  00195A                     __ptext9:
  2109                           	callstack 0
  2110  00195A                     _mesaReset:
  2111                           	callstack 30
  2112  00195A                     
  2113                           ;main.c: 24: void mesaReset(int *namesa);main.c: 25: {;main.c: 26:     int i;;main.c: 27
      +                          :     for(i=0;i<52;i++){
  2114  00195A  0E00               	movlw	0
  2115  00195C  6E04               	movwf	(mesaReset@i+1)^0,c
  2116  00195E  0E00               	movlw	0
  2117  001960  6E03               	movwf	mesaReset@i^0,c
  2118  001962                     l1833:
  2119                           
  2120                           ;main.c: 28:         namesa[i]=0;
  2121  001962  90D8               	bcf	status,0,c
  2122  001964  3403               	rlcf	mesaReset@i^0,w,c
  2123  001966  6ED9               	movwf	fsr2l,c
  2124  001968  3404               	rlcf	(mesaReset@i+1)^0,w,c
  2125  00196A  6EDA               	movwf	fsr2h,c
  2126  00196C  5001               	movf	mesaReset@namesa^0,w,c
  2127  00196E  26D9               	addwf	fsr2l,f,c
  2128  001970  5002               	movf	(mesaReset@namesa+1)^0,w,c
  2129  001972  22DA               	addwfc	fsr2h,f,c
  2130  001974  0E00               	movlw	0
  2131  001976  6EDE               	movwf	postinc2,c
  2132  001978  0E00               	movlw	0
  2133  00197A  6EDD               	movwf	postdec2,c
  2134  00197C                     
  2135                           ;main.c: 29:     }
  2136  00197C  4A03               	infsnz	mesaReset@i^0,f,c
  2137  00197E  2A04               	incf	(mesaReset@i+1)^0,f,c
  2138  001980  BE04               	btfsc	(mesaReset@i+1)^0,7,c
  2139  001982  EFCC  F00C         	goto	u1741
  2140  001986  5004               	movf	(mesaReset@i+1)^0,w,c
  2141  001988  E109               	bnz	u1740
  2142  00198A  0E34               	movlw	52
  2143  00198C  5C03               	subwf	mesaReset@i^0,w,c
  2144  00198E  A0D8               	btfss	status,0,c
  2145  001990  EFCC  F00C         	goto	u1741
  2146  001994  EFCE  F00C         	goto	u1740
  2147  001998                     u1741:
  2148  001998  EFB1  F00C         	goto	l1833
  2149  00199C                     u1740:
  2150  00199C  0012               	return		;funcret
  2151  00199E                     __end_of_mesaReset:
  2152                           	callstack 0
  2153                           
  2154 ;; *************** function _lcdInit *****************
  2155 ;; Defined at:
  2156 ;;		line 72 in file "lcd.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;		None
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;		None
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2170 ;;      Params:         0       0       0       0       0       0       0
  2171 ;;      Locals:         0       0       0       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0
  2173 ;;      Totals:         0       0       0       0       0       0       0
  2174 ;;Total ram usage:        0 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; Hardware stack levels required when called: 5
  2177 ;; This function calls:
  2178 ;;		_delayMicro
  2179 ;;		_delayMili
  2180 ;;		_lcdCommand
  2181 ;;		_pinMode
  2182 ;;		_pushNibble
  2183 ;;		_soInit
  2184 ;; This function is called by:
  2185 ;;		_main
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text10
  2190  0015AE                     __ptext10:
  2191                           	callstack 0
  2192  0015AE                     _lcdInit:
  2193                           	callstack 25
  2194  0015AE                     
  2195                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  2196  0015AE  0E00               	movlw	0
  2197  0015B0  6E02               	movwf	(pinMode@pin+1)^0,c
  2198  0015B2  0E1C               	movlw	28
  2199  0015B4  6E01               	movwf	pinMode@pin^0,c
  2200  0015B6  0E00               	movlw	0
  2201  0015B8  6E04               	movwf	(pinMode@type+1)^0,c
  2202  0015BA  0E00               	movlw	0
  2203  0015BC  6E03               	movwf	pinMode@type^0,c
  2204  0015BE  ECF4  F005         	call	_pinMode	;wreg free
  2205                           
  2206                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  2207  0015C2  0E00               	movlw	0
  2208  0015C4  6E02               	movwf	(pinMode@pin+1)^0,c
  2209  0015C6  0E1D               	movlw	29
  2210  0015C8  6E01               	movwf	pinMode@pin^0,c
  2211  0015CA  0E00               	movlw	0
  2212  0015CC  6E04               	movwf	(pinMode@type+1)^0,c
  2213  0015CE  0E00               	movlw	0
  2214  0015D0  6E03               	movwf	pinMode@type^0,c
  2215  0015D2  ECF4  F005         	call	_pinMode	;wreg free
  2216                           
  2217                           ;lcd.c: 75:  soInit();
  2218  0015D6  EC30  F00D         	call	_soInit	;wreg free
  2219                           
  2220                           ;lcd.c: 76:  delayMili(15);
  2221  0015DA  0E00               	movlw	0
  2222  0015DC  6E02               	movwf	(delayMili@a+1)^0,c
  2223  0015DE  0E0F               	movlw	15
  2224  0015E0  6E01               	movwf	delayMili@a^0,c
  2225  0015E2  EC68  F00D         	call	_delayMili	;wreg free
  2226                           
  2227                           ;lcd.c: 78:  pushNibble(0x03, 0);
  2228  0015E6  0E00               	movlw	0
  2229  0015E8  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2230  0015EA  0E00               	movlw	0
  2231  0015EC  6E0A               	movwf	pushNibble@rs^0,c
  2232  0015EE  0E03               	movlw	3
  2233  0015F0  ECAA  F00D         	call	_pushNibble
  2234                           
  2235                           ;lcd.c: 79:  delayMili(5);
  2236  0015F4  0E00               	movlw	0
  2237  0015F6  6E02               	movwf	(delayMili@a+1)^0,c
  2238  0015F8  0E05               	movlw	5
  2239  0015FA  6E01               	movwf	delayMili@a^0,c
  2240  0015FC  EC68  F00D         	call	_delayMili	;wreg free
  2241                           
  2242                           ;lcd.c: 80:  pushNibble(0x03, 0);
  2243  001600  0E00               	movlw	0
  2244  001602  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2245  001604  0E00               	movlw	0
  2246  001606  6E0A               	movwf	pushNibble@rs^0,c
  2247  001608  0E03               	movlw	3
  2248  00160A  ECAA  F00D         	call	_pushNibble
  2249  00160E                     
  2250                           ;lcd.c: 81:  delayMicro(160);
  2251  00160E  0E00               	movlw	0
  2252  001610  6E02               	movwf	(delayMicro@a+1)^0,c
  2253  001612  0EA0               	movlw	160
  2254  001614  6E01               	movwf	delayMicro@a^0,c
  2255  001616  ECFD  F00D         	call	_delayMicro	;wreg free
  2256  00161A                     
  2257                           ;lcd.c: 82:  pushNibble(0x03, 0);
  2258  00161A  0E00               	movlw	0
  2259  00161C  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2260  00161E  0E00               	movlw	0
  2261  001620  6E0A               	movwf	pushNibble@rs^0,c
  2262  001622  0E03               	movlw	3
  2263  001624  ECAA  F00D         	call	_pushNibble
  2264                           
  2265                           ;lcd.c: 83:  delayMicro(160);
  2266  001628  0E00               	movlw	0
  2267  00162A  6E02               	movwf	(delayMicro@a+1)^0,c
  2268  00162C  0EA0               	movlw	160
  2269  00162E  6E01               	movwf	delayMicro@a^0,c
  2270  001630  ECFD  F00D         	call	_delayMicro	;wreg free
  2271  001634                     
  2272                           ;lcd.c: 85:  pushNibble(0x02, 0);
  2273  001634  0E00               	movlw	0
  2274  001636  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2275  001638  0E00               	movlw	0
  2276  00163A  6E0A               	movwf	pushNibble@rs^0,c
  2277  00163C  0E02               	movlw	2
  2278  00163E  ECAA  F00D         	call	_pushNibble
  2279  001642                     
  2280                           ;lcd.c: 86:  delayMili(10);
  2281  001642  0E00               	movlw	0
  2282  001644  6E02               	movwf	(delayMili@a+1)^0,c
  2283  001646  0E0A               	movlw	10
  2284  001648  6E01               	movwf	delayMili@a^0,c
  2285  00164A  EC68  F00D         	call	_delayMili	;wreg free
  2286  00164E                     
  2287                           ;lcd.c: 88:  lcdCommand(0x28);
  2288  00164E  0E28               	movlw	40
  2289  001650  ECDD  F00D         	call	_lcdCommand
  2290  001654                     
  2291                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  2292  001654  0E0C               	movlw	12
  2293  001656  ECDD  F00D         	call	_lcdCommand
  2294  00165A                     
  2295                           ;lcd.c: 90:  lcdCommand(0x01);
  2296  00165A  0E01               	movlw	1
  2297  00165C  ECDD  F00D         	call	_lcdCommand
  2298  001660  0012               	return		;funcret
  2299  001662                     __end_of_lcdInit:
  2300                           	callstack 0
  2301                           
  2302 ;; *************** function _pushNibble *****************
  2303 ;; Defined at:
  2304 ;;		line 25 in file "lcd.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;  value           1    wreg     unsigned char 
  2307 ;;  rs              2    9[COMRAM] int 
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  value           1   11[COMRAM] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg, status,2, status,0, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2319 ;;      Params:         2       0       0       0       0       0       0
  2320 ;;      Locals:         1       0       0       0       0       0       0
  2321 ;;      Temps:          0       0       0       0       0       0       0
  2322 ;;      Totals:         3       0       0       0       0       0       0
  2323 ;;Total ram usage:        3 bytes
  2324 ;; Hardware stack levels used: 1
  2325 ;; Hardware stack levels required when called: 3
  2326 ;; This function calls:
  2327 ;;		_digitalWrite
  2328 ;;		_pulseEnablePin
  2329 ;;		_soWrite
  2330 ;; This function is called by:
  2331 ;;		_lcdInit
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text11
  2336  001B54                     __ptext11:
  2337                           	callstack 0
  2338  001B54                     _pushNibble:
  2339                           	callstack 26
  2340                           
  2341                           ;incstack = 0
  2342                           ;pushNibble@value stored from wreg
  2343  001B54  6E0C               	movwf	pushNibble@value^0,c
  2344  001B56                     
  2345                           ;lcd.c: 26:  soWrite(value);
  2346  001B56  C00C  F007         	movff	pushNibble@value,soWrite@value
  2347  001B5A  6A08               	clrf	(soWrite@value+1)^0,c
  2348  001B5C  EC86  F00C         	call	_soWrite	;wreg free
  2349                           
  2350                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  2351  001B60  0E00               	movlw	0
  2352  001B62  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2353  001B64  0E1D               	movlw	29
  2354  001B66  6E01               	movwf	digitalWrite@pin^0,c
  2355  001B68  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  2356  001B6C  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  2357  001B70  EC1B  F007         	call	_digitalWrite	;wreg free
  2358                           
  2359                           ;lcd.c: 28:  pulseEnablePin();
  2360  001B74  ECF0  F00C         	call	_pulseEnablePin	;wreg free
  2361  001B78  0012               	return		;funcret
  2362  001B7A                     __end_of_pushNibble:
  2363                           	callstack 0
  2364                           
  2365 ;; *************** function _lcdCommand *****************
  2366 ;; Defined at:
  2367 ;;		line 40 in file "lcd.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  value           1    wreg     unsigned char 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  value           1   13[COMRAM] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2381 ;;      Params:         0       0       0       0       0       0       0
  2382 ;;      Locals:         1       0       0       0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0       0       0
  2384 ;;      Totals:         1       0       0       0       0       0       0
  2385 ;;Total ram usage:        1 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 4
  2388 ;; This function calls:
  2389 ;;		_delayMili
  2390 ;;		_pushByte
  2391 ;; This function is called by:
  2392 ;;		_main
  2393 ;;		_lcdInit
  2394 ;;		_lcdPosition
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text12
  2399  001BBA                     __ptext12:
  2400                           	callstack 0
  2401  001BBA                     _lcdCommand:
  2402                           	callstack 25
  2403                           
  2404                           ;incstack = 0
  2405                           ;lcdCommand@value stored from wreg
  2406  001BBA  6E0E               	movwf	lcdCommand@value^0,c
  2407  001BBC                     
  2408                           ;lcd.c: 41:  pushByte(value, 0);
  2409  001BBC  0E00               	movlw	0
  2410  001BBE  6E0B               	movwf	(pushByte@rs+1)^0,c
  2411  001BC0  0E00               	movlw	0
  2412  001BC2  6E0A               	movwf	pushByte@rs^0,c
  2413  001BC4  500E               	movf	lcdCommand@value^0,w,c
  2414  001BC6  EC59  F00C         	call	_pushByte
  2415                           
  2416                           ;lcd.c: 42:  delayMili(2);
  2417  001BCA  0E00               	movlw	0
  2418  001BCC  6E02               	movwf	(delayMili@a+1)^0,c
  2419  001BCE  0E02               	movlw	2
  2420  001BD0  6E01               	movwf	delayMili@a^0,c
  2421  001BD2  EC68  F00D         	call	_delayMili	;wreg free
  2422  001BD6  0012               	return		;funcret
  2423  001BD8                     __end_of_lcdCommand:
  2424                           	callstack 0
  2425                           
  2426 ;; *************** function _pushByte *****************
  2427 ;; Defined at:
  2428 ;;		line 31 in file "lcd.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  value           1    wreg     unsigned char 
  2431 ;;  rs              2    9[COMRAM] int 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  value           1   12[COMRAM] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2443 ;;      Params:         2       0       0       0       0       0       0
  2444 ;;      Locals:         1       0       0       0       0       0       0
  2445 ;;      Temps:          1       0       0       0       0       0       0
  2446 ;;      Totals:         4       0       0       0       0       0       0
  2447 ;;Total ram usage:        4 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; Hardware stack levels required when called: 3
  2450 ;; This function calls:
  2451 ;;		_digitalWrite
  2452 ;;		_pulseEnablePin
  2453 ;;		_soWrite
  2454 ;; This function is called by:
  2455 ;;		_lcdCommand
  2456 ;;		_lcdChar
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text13
  2461  0018B2                     __ptext13:
  2462                           	callstack 0
  2463  0018B2                     _pushByte:
  2464                           	callstack 25
  2465                           
  2466                           ;incstack = 0
  2467                           ;pushByte@value stored from wreg
  2468  0018B2  6E0D               	movwf	pushByte@value^0,c
  2469  0018B4                     
  2470                           ;lcd.c: 32:  soWrite(value >> 4);
  2471  0018B4  C00D  F00C         	movff	pushByte@value,??_pushByte
  2472  0018B8  3A0C               	swapf	??_pushByte^0,f,c
  2473  0018BA  0E0F               	movlw	15
  2474  0018BC  160C               	andwf	??_pushByte^0,f,c
  2475  0018BE  500C               	movf	??_pushByte^0,w,c
  2476  0018C0  6E07               	movwf	soWrite@value^0,c
  2477  0018C2  6A08               	clrf	(soWrite@value+1)^0,c
  2478  0018C4  EC86  F00C         	call	_soWrite	;wreg free
  2479                           
  2480                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  2481  0018C8  0E00               	movlw	0
  2482  0018CA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2483  0018CC  0E1D               	movlw	29
  2484  0018CE  6E01               	movwf	digitalWrite@pin^0,c
  2485  0018D0  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  2486  0018D4  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  2487  0018D8  EC1B  F007         	call	_digitalWrite	;wreg free
  2488                           
  2489                           ;lcd.c: 34:  pulseEnablePin();
  2490  0018DC  ECF0  F00C         	call	_pulseEnablePin	;wreg free
  2491                           
  2492                           ;lcd.c: 36:  soWrite(value & 0x0F);
  2493  0018E0  C00D  F00C         	movff	pushByte@value,??_pushByte
  2494  0018E4  0E0F               	movlw	15
  2495  0018E6  160C               	andwf	??_pushByte^0,f,c
  2496  0018E8  500C               	movf	??_pushByte^0,w,c
  2497  0018EA  6E07               	movwf	soWrite@value^0,c
  2498  0018EC  6A08               	clrf	(soWrite@value+1)^0,c
  2499  0018EE  EC86  F00C         	call	_soWrite	;wreg free
  2500                           
  2501                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  2502  0018F2  0E00               	movlw	0
  2503  0018F4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2504  0018F6  0E1D               	movlw	29
  2505  0018F8  6E01               	movwf	digitalWrite@pin^0,c
  2506  0018FA  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  2507  0018FE  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  2508  001902  EC1B  F007         	call	_digitalWrite	;wreg free
  2509                           
  2510                           ;lcd.c: 38:  pulseEnablePin();
  2511  001906  ECF0  F00C         	call	_pulseEnablePin	;wreg free
  2512  00190A  0012               	return		;funcret
  2513  00190C                     __end_of_pushByte:
  2514                           	callstack 0
  2515                           
  2516 ;; *************** function _pulseEnablePin *****************
  2517 ;; Defined at:
  2518 ;;		line 18 in file "lcd.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;		None
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2532 ;;      Params:         0       0       0       0       0       0       0
  2533 ;;      Locals:         0       0       0       0       0       0       0
  2534 ;;      Temps:          0       0       0       0       0       0       0
  2535 ;;      Totals:         0       0       0       0       0       0       0
  2536 ;;Total ram usage:        0 bytes
  2537 ;; Hardware stack levels used: 1
  2538 ;; Hardware stack levels required when called: 1
  2539 ;; This function calls:
  2540 ;;		_delayMicro
  2541 ;;		_digitalWrite
  2542 ;; This function is called by:
  2543 ;;		_pushNibble
  2544 ;;		_pushByte
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text14
  2549  0019E0                     __ptext14:
  2550                           	callstack 0
  2551  0019E0                     _pulseEnablePin:
  2552                           	callstack 26
  2553  0019E0                     
  2554                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  2555  0019E0  0E00               	movlw	0
  2556  0019E2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2557  0019E4  0E1C               	movlw	28
  2558  0019E6  6E01               	movwf	digitalWrite@pin^0,c
  2559  0019E8  0E00               	movlw	0
  2560  0019EA  6E04               	movwf	(digitalWrite@value+1)^0,c
  2561  0019EC  0E01               	movlw	1
  2562  0019EE  6E03               	movwf	digitalWrite@value^0,c
  2563  0019F0  EC1B  F007         	call	_digitalWrite	;wreg free
  2564  0019F4                     
  2565                           ;lcd.c: 20:  delayMicro(5);
  2566  0019F4  0E00               	movlw	0
  2567  0019F6  6E02               	movwf	(delayMicro@a+1)^0,c
  2568  0019F8  0E05               	movlw	5
  2569  0019FA  6E01               	movwf	delayMicro@a^0,c
  2570  0019FC  ECFD  F00D         	call	_delayMicro	;wreg free
  2571  001A00                     
  2572                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  2573  001A00  0E00               	movlw	0
  2574  001A02  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2575  001A04  0E1C               	movlw	28
  2576  001A06  6E01               	movwf	digitalWrite@pin^0,c
  2577  001A08  0E00               	movlw	0
  2578  001A0A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2579  001A0C  0E00               	movlw	0
  2580  001A0E  6E03               	movwf	digitalWrite@value^0,c
  2581  001A10  EC1B  F007         	call	_digitalWrite	;wreg free
  2582                           
  2583                           ;lcd.c: 22:  delayMicro(5);
  2584  001A14  0E00               	movlw	0
  2585  001A16  6E02               	movwf	(delayMicro@a+1)^0,c
  2586  001A18  0E05               	movlw	5
  2587  001A1A  6E01               	movwf	delayMicro@a^0,c
  2588  001A1C  ECFD  F00D         	call	_delayMicro	;wreg free
  2589  001A20  0012               	return		;funcret
  2590  001A22                     __end_of_pulseEnablePin:
  2591                           	callstack 0
  2592                           
  2593 ;; *************** function _delayMicro *****************
  2594 ;; Defined at:
  2595 ;;		line 5 in file "lcd.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  a               2    0[COMRAM] int 
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  i               2    0        volatile int 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      void 
  2602 ;; Registers used:
  2603 ;;		None
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2609 ;;      Params:         2       0       0       0       0       0       0
  2610 ;;      Locals:         0       0       0       0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0       0       0
  2612 ;;      Totals:         2       0       0       0       0       0       0
  2613 ;;Total ram usage:        2 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; This function calls:
  2616 ;;		Nothing
  2617 ;; This function is called by:
  2618 ;;		_pulseEnablePin
  2619 ;;		_lcdChar
  2620 ;;		_lcdInit
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text15
  2625  001BFA                     __ptext15:
  2626                           	callstack 0
  2627  001BFA                     _delayMicro:
  2628                           	callstack 26
  2629  001BFA  0012               	return		;funcret
  2630  001BFC                     __end_of_delayMicro:
  2631                           	callstack 0
  2632                           
  2633 ;; *************** function _delayMili *****************
  2634 ;; Defined at:
  2635 ;;		line 10 in file "lcd.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  a               2    0[COMRAM] int 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  i               2    3[COMRAM] volatile int 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2649 ;;      Params:         2       0       0       0       0       0       0
  2650 ;;      Locals:         2       0       0       0       0       0       0
  2651 ;;      Temps:          1       0       0       0       0       0       0
  2652 ;;      Totals:         5       0       0       0       0       0       0
  2653 ;;Total ram usage:        5 bytes
  2654 ;; Hardware stack levels used: 1
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		_lcdCommand
  2659 ;;		_lcdInit
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text16
  2664  001AD0                     __ptext16:
  2665                           	callstack 0
  2666  001AD0                     _delayMili:
  2667                           	callstack 28
  2668  001AD0                     
  2669                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  2670  001AD0  0E00               	movlw	0
  2671  001AD2  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  2672  001AD4  0E00               	movlw	0
  2673  001AD6  6E04               	movwf	delayMili@i^0,c	;volatile
  2674  001AD8  EF70  F00D         	goto	l1745
  2675  001ADC                     l1743:
  2676                           
  2677                           ;lcd.c: 15:  }
  2678  001ADC  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  2679  001ADE  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  2680  001AE0                     l1745:
  2681  001AE0  5001               	movf	delayMili@a^0,w,c
  2682  001AE2  5C04               	subwf	delayMili@i^0,w,c	;volatile
  2683  001AE4  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  2684  001AE6  0A80               	xorlw	128
  2685  001AE8  6E03               	movwf	??_delayMili^0,c
  2686  001AEA  5002               	movf	(delayMili@a+1)^0,w,c
  2687  001AEC  0A80               	xorlw	128
  2688  001AEE  5803               	subwfb	??_delayMili^0,w,c
  2689  001AF0  A0D8               	btfss	status,0,c
  2690  001AF2  EF7D  F00D         	goto	u1591
  2691  001AF6  EF7F  F00D         	goto	u1590
  2692  001AFA                     u1591:
  2693  001AFA  EF6E  F00D         	goto	l1743
  2694  001AFE                     u1590:
  2695  001AFE  0012               	return		;funcret
  2696  001B00                     __end_of_delayMili:
  2697                           	callstack 0
  2698                           
  2699 ;; *************** function _kpRead *****************
  2700 ;; Defined at:
  2701 ;;		line 14 in file "keypad.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;		None
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  2    0[COMRAM] unsigned int 
  2708 ;; Registers used:
  2709 ;;		None
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2715 ;;      Params:         2       0       0       0       0       0       0
  2716 ;;      Locals:         0       0       0       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0
  2718 ;;      Totals:         2       0       0       0       0       0       0
  2719 ;;Total ram usage:        2 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_main
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text17
  2729  001BE8                     __ptext17:
  2730                           	callstack 0
  2731  001BE8                     _kpRead:
  2732                           	callstack 30
  2733  001BE8                     
  2734                           ;keypad.c: 15:     return keys;
  2735  001BE8  C021  F001         	movff	_keys,?_kpRead
  2736  001BEC  C022  F002         	movff	_keys+1,?_kpRead+1
  2737  001BF0  0012               	return		;funcret
  2738  001BF2                     __end_of_kpRead:
  2739                           	callstack 0
  2740                           
  2741 ;; *************** function _kpInit *****************
  2742 ;; Defined at:
  2743 ;;		line 54 in file "keypad.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;		None
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;		None
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  1    wreg      void 
  2750 ;; Registers used:
  2751 ;;		wreg, status,2, status,0, cstack
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2757 ;;      Params:         0       0       0       0       0       0       0
  2758 ;;      Locals:         0       0       0       0       0       0       0
  2759 ;;      Temps:          0       0       0       0       0       0       0
  2760 ;;      Totals:         0       0       0       0       0       0       0
  2761 ;;Total ram usage:        0 bytes
  2762 ;; Hardware stack levels used: 1
  2763 ;; Hardware stack levels required when called: 2
  2764 ;; This function calls:
  2765 ;;		_pinMode
  2766 ;;		_soInit
  2767 ;; This function is called by:
  2768 ;;		_main
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text18
  2773  001A9E                     __ptext18:
  2774                           	callstack 0
  2775  001A9E                     _kpInit:
  2776                           	callstack 28
  2777  001A9E                     
  2778                           ;keypad.c: 55:   soInit();
  2779  001A9E  EC30  F00D         	call	_soInit	;wreg free
  2780                           
  2781                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  2782  001AA2  0E00               	movlw	0
  2783  001AA4  6E02               	movwf	(pinMode@pin+1)^0,c
  2784  001AA6  0E0A               	movlw	10
  2785  001AA8  6E01               	movwf	pinMode@pin^0,c
  2786  001AAA  0E00               	movlw	0
  2787  001AAC  6E04               	movwf	(pinMode@type+1)^0,c
  2788  001AAE  0E01               	movlw	1
  2789  001AB0  6E03               	movwf	pinMode@type^0,c
  2790  001AB2  ECF4  F005         	call	_pinMode	;wreg free
  2791                           
  2792                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  2793  001AB6  0E00               	movlw	0
  2794  001AB8  6E02               	movwf	(pinMode@pin+1)^0,c
  2795  001ABA  0E09               	movlw	9
  2796  001ABC  6E01               	movwf	pinMode@pin^0,c
  2797  001ABE  0E00               	movlw	0
  2798  001AC0  6E04               	movwf	(pinMode@type+1)^0,c
  2799  001AC2  0E01               	movlw	1
  2800  001AC4  6E03               	movwf	pinMode@type^0,c
  2801  001AC6  ECF4  F005         	call	_pinMode	;wreg free
  2802  001ACA                     
  2803                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  2804  001ACA  0E0C               	movlw	12
  2805  001ACC  6EC1               	movwf	193,c	;volatile
  2806  001ACE  0012               	return		;funcret
  2807  001AD0                     __end_of_kpInit:
  2808                           	callstack 0
  2809                           
  2810 ;; *************** function _soInit *****************
  2811 ;; Defined at:
  2812 ;;		line 3 in file "so.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;		None
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;		None
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      void 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0, cstack
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2826 ;;      Params:         0       0       0       0       0       0       0
  2827 ;;      Locals:         0       0       0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0       0       0
  2829 ;;      Totals:         0       0       0       0       0       0       0
  2830 ;;Total ram usage:        0 bytes
  2831 ;; Hardware stack levels used: 1
  2832 ;; Hardware stack levels required when called: 1
  2833 ;; This function calls:
  2834 ;;		_pinMode
  2835 ;; This function is called by:
  2836 ;;		_kpInit
  2837 ;;		_lcdInit
  2838 ;;		_ssdInit
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text19
  2843  001A60                     __ptext19:
  2844                           	callstack 0
  2845  001A60                     _soInit:
  2846                           	callstack 28
  2847  001A60                     
  2848                           ;so.c: 4:  pinMode(PIN_D7, 0);
  2849  001A60  0E00               	movlw	0
  2850  001A62  6E02               	movwf	(pinMode@pin+1)^0,c
  2851  001A64  0E1F               	movlw	31
  2852  001A66  6E01               	movwf	pinMode@pin^0,c
  2853  001A68  0E00               	movlw	0
  2854  001A6A  6E04               	movwf	(pinMode@type+1)^0,c
  2855  001A6C  0E00               	movlw	0
  2856  001A6E  6E03               	movwf	pinMode@type^0,c
  2857  001A70  ECF4  F005         	call	_pinMode	;wreg free
  2858                           
  2859                           ;so.c: 5:  pinMode(PIN_B0, 0);
  2860  001A74  0E00               	movlw	0
  2861  001A76  6E02               	movwf	(pinMode@pin+1)^0,c
  2862  001A78  0E08               	movlw	8
  2863  001A7A  6E01               	movwf	pinMode@pin^0,c
  2864  001A7C  0E00               	movlw	0
  2865  001A7E  6E04               	movwf	(pinMode@type+1)^0,c
  2866  001A80  0E00               	movlw	0
  2867  001A82  6E03               	movwf	pinMode@type^0,c
  2868  001A84  ECF4  F005         	call	_pinMode	;wreg free
  2869                           
  2870                           ;so.c: 6:  pinMode(PIN_D6, 0);
  2871  001A88  0E00               	movlw	0
  2872  001A8A  6E02               	movwf	(pinMode@pin+1)^0,c
  2873  001A8C  0E1E               	movlw	30
  2874  001A8E  6E01               	movwf	pinMode@pin^0,c
  2875  001A90  0E00               	movlw	0
  2876  001A92  6E04               	movwf	(pinMode@type+1)^0,c
  2877  001A94  0E00               	movlw	0
  2878  001A96  6E03               	movwf	pinMode@type^0,c
  2879  001A98  ECF4  F005         	call	_pinMode	;wreg free
  2880  001A9C  0012               	return		;funcret
  2881  001A9E                     __end_of_soInit:
  2882                           	callstack 0
  2883                           
  2884 ;; *************** function _pinMode *****************
  2885 ;; Defined at:
  2886 ;;		line 54 in file "io.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  pin             2    0[COMRAM] int 
  2889 ;;  type            2    2[COMRAM] int 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;		None
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  1    wreg      void 
  2894 ;; Registers used:
  2895 ;;		wreg, status,2, status,0
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2901 ;;      Params:         4       0       0       0       0       0       0
  2902 ;;      Locals:         0       0       0       0       0       0       0
  2903 ;;      Temps:          2       0       0       0       0       0       0
  2904 ;;      Totals:         6       0       0       0       0       0       0
  2905 ;;Total ram usage:        6 bytes
  2906 ;; Hardware stack levels used: 1
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_kpInit
  2911 ;;		_lcdInit
  2912 ;;		_soInit
  2913 ;;		_rgbInit
  2914 ;;		_ssdInit
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text20
  2919  000BE8                     __ptext20:
  2920                           	callstack 0
  2921  000BE8                     _pinMode:
  2922                           	callstack 29
  2923  000BE8                     
  2924                           ;io.c: 56:     if(pin <8){
  2925  000BE8  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2926  000BEA  EF02  F006         	goto	u1390
  2927  000BEE  5002               	movf	(pinMode@pin+1)^0,w,c
  2928  000BF0  E107               	bnz	u1391
  2929  000BF2  0E08               	movlw	8
  2930  000BF4  5C01               	subwf	pinMode@pin^0,w,c
  2931  000BF6  B0D8               	btfsc	status,0,c
  2932  000BF8  EF00  F006         	goto	u1391
  2933  000BFC  EF02  F006         	goto	u1390
  2934  000C00                     u1391:
  2935  000C00  EF2C  F006         	goto	l1709
  2936  000C04                     u1390:
  2937  000C04                     
  2938                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  2939  000C04  5003               	movf	pinMode@type^0,w,c
  2940  000C06  1004               	iorwf	(pinMode@type+1)^0,w,c
  2941  000C08  B4D8               	btfsc	status,2,c
  2942  000C0A  EF09  F006         	goto	u1401
  2943  000C0E  EF0B  F006         	goto	u1400
  2944  000C12                     u1401:
  2945  000C12  EF1B  F006         	goto	l1707
  2946  000C16                     u1400:
  2947  000C16  C001  F005         	movff	pinMode@pin,??_pinMode
  2948  000C1A  0E01               	movlw	1
  2949  000C1C  6E06               	movwf	(??_pinMode+1)^0,c
  2950  000C1E  2A05               	incf	??_pinMode^0,f,c
  2951  000C20  EF14  F006         	goto	u1414
  2952  000C24                     u1415:
  2953  000C24  90D8               	bcf	status,0,c
  2954  000C26  3606               	rlcf	(??_pinMode+1)^0,f,c
  2955  000C28                     u1414:
  2956  000C28  2E05               	decfsz	??_pinMode^0,f,c
  2957  000C2A  EF12  F006         	goto	u1415
  2958  000C2E  5006               	movf	(??_pinMode+1)^0,w,c
  2959  000C30  1292               	iorwf	146,f,c	;volatile
  2960  000C32  EF1A  F007         	goto	l272
  2961  000C36                     l1707:
  2962  000C36  C001  F005         	movff	pinMode@pin,??_pinMode
  2963  000C3A  0E01               	movlw	1
  2964  000C3C  6E06               	movwf	(??_pinMode+1)^0,c
  2965  000C3E  2A05               	incf	??_pinMode^0,f,c
  2966  000C40  EF24  F006         	goto	u1424
  2967  000C44                     u1425:
  2968  000C44  90D8               	bcf	status,0,c
  2969  000C46  3606               	rlcf	(??_pinMode+1)^0,f,c
  2970  000C48                     u1424:
  2971  000C48  2E05               	decfsz	??_pinMode^0,f,c
  2972  000C4A  EF22  F006         	goto	u1425
  2973  000C4E  5006               	movf	(??_pinMode+1)^0,w,c
  2974  000C50  0AFF               	xorlw	255
  2975  000C52  1692               	andwf	146,f,c	;volatile
  2976  000C54  EF1A  F007         	goto	l272
  2977  000C58                     l1709:
  2978  000C58  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2979  000C5A  EF3A  F006         	goto	u1430
  2980  000C5E  5002               	movf	(pinMode@pin+1)^0,w,c
  2981  000C60  E107               	bnz	u1431
  2982  000C62  0E10               	movlw	16
  2983  000C64  5C01               	subwf	pinMode@pin^0,w,c
  2984  000C66  B0D8               	btfsc	status,0,c
  2985  000C68  EF38  F006         	goto	u1431
  2986  000C6C  EF3A  F006         	goto	u1430
  2987  000C70                     u1431:
  2988  000C70  EF68  F006         	goto	l1717
  2989  000C74                     u1430:
  2990  000C74                     
  2991                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  2992  000C74  5003               	movf	pinMode@type^0,w,c
  2993  000C76  1004               	iorwf	(pinMode@type+1)^0,w,c
  2994  000C78  B4D8               	btfsc	status,2,c
  2995  000C7A  EF41  F006         	goto	u1441
  2996  000C7E  EF43  F006         	goto	u1440
  2997  000C82                     u1441:
  2998  000C82  EF55  F006         	goto	l1715
  2999  000C86                     u1440:
  3000  000C86  C001  F005         	movff	pinMode@pin,??_pinMode
  3001  000C8A  0EF8               	movlw	-8
  3002  000C8C  2605               	addwf	??_pinMode^0,f,c
  3003  000C8E  0E01               	movlw	1
  3004  000C90  6E06               	movwf	(??_pinMode+1)^0,c
  3005  000C92  2A05               	incf	??_pinMode^0,f,c
  3006  000C94  EF4E  F006         	goto	u1454
  3007  000C98                     u1455:
  3008  000C98  90D8               	bcf	status,0,c
  3009  000C9A  3606               	rlcf	(??_pinMode+1)^0,f,c
  3010  000C9C                     u1454:
  3011  000C9C  2E05               	decfsz	??_pinMode^0,f,c
  3012  000C9E  EF4C  F006         	goto	u1455
  3013  000CA2  5006               	movf	(??_pinMode+1)^0,w,c
  3014  000CA4  1293               	iorwf	147,f,c	;volatile
  3015  000CA6  EF1A  F007         	goto	l272
  3016  000CAA                     l1715:
  3017  000CAA  C001  F005         	movff	pinMode@pin,??_pinMode
  3018  000CAE  0EF8               	movlw	-8
  3019  000CB0  2605               	addwf	??_pinMode^0,f,c
  3020  000CB2  0E01               	movlw	1
  3021  000CB4  6E06               	movwf	(??_pinMode+1)^0,c
  3022  000CB6  2A05               	incf	??_pinMode^0,f,c
  3023  000CB8  EF60  F006         	goto	u1464
  3024  000CBC                     u1465:
  3025  000CBC  90D8               	bcf	status,0,c
  3026  000CBE  3606               	rlcf	(??_pinMode+1)^0,f,c
  3027  000CC0                     u1464:
  3028  000CC0  2E05               	decfsz	??_pinMode^0,f,c
  3029  000CC2  EF5E  F006         	goto	u1465
  3030  000CC6  5006               	movf	(??_pinMode+1)^0,w,c
  3031  000CC8  0AFF               	xorlw	255
  3032  000CCA  1693               	andwf	147,f,c	;volatile
  3033  000CCC  EF1A  F007         	goto	l272
  3034  000CD0                     l1717:
  3035  000CD0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3036  000CD2  EF76  F006         	goto	u1470
  3037  000CD6  5002               	movf	(pinMode@pin+1)^0,w,c
  3038  000CD8  E107               	bnz	u1471
  3039  000CDA  0E18               	movlw	24
  3040  000CDC  5C01               	subwf	pinMode@pin^0,w,c
  3041  000CDE  B0D8               	btfsc	status,0,c
  3042  000CE0  EF74  F006         	goto	u1471
  3043  000CE4  EF76  F006         	goto	u1470
  3044  000CE8                     u1471:
  3045  000CE8  EFA4  F006         	goto	l1725
  3046  000CEC                     u1470:
  3047  000CEC                     
  3048                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  3049  000CEC  5003               	movf	pinMode@type^0,w,c
  3050  000CEE  1004               	iorwf	(pinMode@type+1)^0,w,c
  3051  000CF0  B4D8               	btfsc	status,2,c
  3052  000CF2  EF7D  F006         	goto	u1481
  3053  000CF6  EF7F  F006         	goto	u1480
  3054  000CFA                     u1481:
  3055  000CFA  EF91  F006         	goto	l1723
  3056  000CFE                     u1480:
  3057  000CFE  C001  F005         	movff	pinMode@pin,??_pinMode
  3058  000D02  0EF0               	movlw	-16
  3059  000D04  2605               	addwf	??_pinMode^0,f,c
  3060  000D06  0E01               	movlw	1
  3061  000D08  6E06               	movwf	(??_pinMode+1)^0,c
  3062  000D0A  2A05               	incf	??_pinMode^0,f,c
  3063  000D0C  EF8A  F006         	goto	u1494
  3064  000D10                     u1495:
  3065  000D10  90D8               	bcf	status,0,c
  3066  000D12  3606               	rlcf	(??_pinMode+1)^0,f,c
  3067  000D14                     u1494:
  3068  000D14  2E05               	decfsz	??_pinMode^0,f,c
  3069  000D16  EF88  F006         	goto	u1495
  3070  000D1A  5006               	movf	(??_pinMode+1)^0,w,c
  3071  000D1C  1294               	iorwf	148,f,c	;volatile
  3072  000D1E  EF1A  F007         	goto	l272
  3073  000D22                     l1723:
  3074  000D22  C001  F005         	movff	pinMode@pin,??_pinMode
  3075  000D26  0EF0               	movlw	-16
  3076  000D28  2605               	addwf	??_pinMode^0,f,c
  3077  000D2A  0E01               	movlw	1
  3078  000D2C  6E06               	movwf	(??_pinMode+1)^0,c
  3079  000D2E  2A05               	incf	??_pinMode^0,f,c
  3080  000D30  EF9C  F006         	goto	u1504
  3081  000D34                     u1505:
  3082  000D34  90D8               	bcf	status,0,c
  3083  000D36  3606               	rlcf	(??_pinMode+1)^0,f,c
  3084  000D38                     u1504:
  3085  000D38  2E05               	decfsz	??_pinMode^0,f,c
  3086  000D3A  EF9A  F006         	goto	u1505
  3087  000D3E  5006               	movf	(??_pinMode+1)^0,w,c
  3088  000D40  0AFF               	xorlw	255
  3089  000D42  1694               	andwf	148,f,c	;volatile
  3090  000D44  EF1A  F007         	goto	l272
  3091  000D48                     l1725:
  3092  000D48  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3093  000D4A  EFB2  F006         	goto	u1510
  3094  000D4E  5002               	movf	(pinMode@pin+1)^0,w,c
  3095  000D50  E107               	bnz	u1511
  3096  000D52  0E20               	movlw	32
  3097  000D54  5C01               	subwf	pinMode@pin^0,w,c
  3098  000D56  B0D8               	btfsc	status,0,c
  3099  000D58  EFB0  F006         	goto	u1511
  3100  000D5C  EFB2  F006         	goto	u1510
  3101  000D60                     u1511:
  3102  000D60  EFE0  F006         	goto	l1733
  3103  000D64                     u1510:
  3104  000D64                     
  3105                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  3106  000D64  5003               	movf	pinMode@type^0,w,c
  3107  000D66  1004               	iorwf	(pinMode@type+1)^0,w,c
  3108  000D68  B4D8               	btfsc	status,2,c
  3109  000D6A  EFB9  F006         	goto	u1521
  3110  000D6E  EFBB  F006         	goto	u1520
  3111  000D72                     u1521:
  3112  000D72  EFCD  F006         	goto	l1731
  3113  000D76                     u1520:
  3114  000D76  C001  F005         	movff	pinMode@pin,??_pinMode
  3115  000D7A  0EE8               	movlw	-24
  3116  000D7C  2605               	addwf	??_pinMode^0,f,c
  3117  000D7E  0E01               	movlw	1
  3118  000D80  6E06               	movwf	(??_pinMode+1)^0,c
  3119  000D82  2A05               	incf	??_pinMode^0,f,c
  3120  000D84  EFC6  F006         	goto	u1534
  3121  000D88                     u1535:
  3122  000D88  90D8               	bcf	status,0,c
  3123  000D8A  3606               	rlcf	(??_pinMode+1)^0,f,c
  3124  000D8C                     u1534:
  3125  000D8C  2E05               	decfsz	??_pinMode^0,f,c
  3126  000D8E  EFC4  F006         	goto	u1535
  3127  000D92  5006               	movf	(??_pinMode+1)^0,w,c
  3128  000D94  1295               	iorwf	149,f,c	;volatile
  3129  000D96  EF1A  F007         	goto	l272
  3130  000D9A                     l1731:
  3131  000D9A  C001  F005         	movff	pinMode@pin,??_pinMode
  3132  000D9E  0EE8               	movlw	-24
  3133  000DA0  2605               	addwf	??_pinMode^0,f,c
  3134  000DA2  0E01               	movlw	1
  3135  000DA4  6E06               	movwf	(??_pinMode+1)^0,c
  3136  000DA6  2A05               	incf	??_pinMode^0,f,c
  3137  000DA8  EFD8  F006         	goto	u1544
  3138  000DAC                     u1545:
  3139  000DAC  90D8               	bcf	status,0,c
  3140  000DAE  3606               	rlcf	(??_pinMode+1)^0,f,c
  3141  000DB0                     u1544:
  3142  000DB0  2E05               	decfsz	??_pinMode^0,f,c
  3143  000DB2  EFD6  F006         	goto	u1545
  3144  000DB6  5006               	movf	(??_pinMode+1)^0,w,c
  3145  000DB8  0AFF               	xorlw	255
  3146  000DBA  1695               	andwf	149,f,c	;volatile
  3147  000DBC  EF1A  F007         	goto	l272
  3148  000DC0                     l1733:
  3149  000DC0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3150  000DC2  EFEE  F006         	goto	u1550
  3151  000DC6  5002               	movf	(pinMode@pin+1)^0,w,c
  3152  000DC8  E107               	bnz	u1551
  3153  000DCA  0E28               	movlw	40
  3154  000DCC  5C01               	subwf	pinMode@pin^0,w,c
  3155  000DCE  B0D8               	btfsc	status,0,c
  3156  000DD0  EFEC  F006         	goto	u1551
  3157  000DD4  EFEE  F006         	goto	u1550
  3158  000DD8                     u1551:
  3159  000DD8  EF1A  F007         	goto	l272
  3160  000DDC                     u1550:
  3161  000DDC                     
  3162                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  3163  000DDC  5003               	movf	pinMode@type^0,w,c
  3164  000DDE  1004               	iorwf	(pinMode@type+1)^0,w,c
  3165  000DE0  B4D8               	btfsc	status,2,c
  3166  000DE2  EFF5  F006         	goto	u1561
  3167  000DE6  EFF7  F006         	goto	u1560
  3168  000DEA                     u1561:
  3169  000DEA  EF09  F007         	goto	l1739
  3170  000DEE                     u1560:
  3171  000DEE  C001  F005         	movff	pinMode@pin,??_pinMode
  3172  000DF2  0EE0               	movlw	-32
  3173  000DF4  2605               	addwf	??_pinMode^0,f,c
  3174  000DF6  0E01               	movlw	1
  3175  000DF8  6E06               	movwf	(??_pinMode+1)^0,c
  3176  000DFA  2A05               	incf	??_pinMode^0,f,c
  3177  000DFC  EF02  F007         	goto	u1574
  3178  000E00                     u1575:
  3179  000E00  90D8               	bcf	status,0,c
  3180  000E02  3606               	rlcf	(??_pinMode+1)^0,f,c
  3181  000E04                     u1574:
  3182  000E04  2E05               	decfsz	??_pinMode^0,f,c
  3183  000E06  EF00  F007         	goto	u1575
  3184  000E0A  5006               	movf	(??_pinMode+1)^0,w,c
  3185  000E0C  1296               	iorwf	150,f,c	;volatile
  3186  000E0E  EF1A  F007         	goto	l272
  3187  000E12                     l1739:
  3188  000E12  C001  F005         	movff	pinMode@pin,??_pinMode
  3189  000E16  0EE0               	movlw	-32
  3190  000E18  2605               	addwf	??_pinMode^0,f,c
  3191  000E1A  0E01               	movlw	1
  3192  000E1C  6E06               	movwf	(??_pinMode+1)^0,c
  3193  000E1E  2A05               	incf	??_pinMode^0,f,c
  3194  000E20  EF14  F007         	goto	u1584
  3195  000E24                     u1585:
  3196  000E24  90D8               	bcf	status,0,c
  3197  000E26  3606               	rlcf	(??_pinMode+1)^0,f,c
  3198  000E28                     u1584:
  3199  000E28  2E05               	decfsz	??_pinMode^0,f,c
  3200  000E2A  EF12  F007         	goto	u1585
  3201  000E2E  5006               	movf	(??_pinMode+1)^0,w,c
  3202  000E30  0AFF               	xorlw	255
  3203  000E32  1696               	andwf	150,f,c	;volatile
  3204  000E34                     l272:
  3205  000E34  0012               	return		;funcret
  3206  000E36                     __end_of_pinMode:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function _kpDebounce *****************
  3210 ;; Defined at:
  3211 ;;		line 27 in file "keypad.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  i               2   12[COMRAM] int 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3225 ;;      Params:         0       0       0       0       0       0       0
  3226 ;;      Locals:         2       0       0       0       0       0       0
  3227 ;;      Temps:          3       0       0       0       0       0       0
  3228 ;;      Totals:         5       0       0       0       0       0       0
  3229 ;;Total ram usage:        5 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 3
  3232 ;; This function calls:
  3233 ;;		_digitalRead
  3234 ;;		_soWrite
  3235 ;; This function is called by:
  3236 ;;		_main
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text21
  3241  0013B4                     __ptext21:
  3242                           	callstack 0
  3243  0013B4                     _kpDebounce:
  3244                           	callstack 27
  3245  0013B4                     
  3246                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  3247  0013B4  0E00               	movlw	0
  3248  0013B6  6E20               	movwf	(kpDebounce@newRead+1)^0,c
  3249  0013B8  0E00               	movlw	0
  3250  0013BA  6E1F               	movwf	kpDebounce@newRead^0,c
  3251                           
  3252                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  3253  0013BC  0E00               	movlw	0
  3254  0013BE  6E0E               	movwf	(kpDebounce@i+1)^0,c
  3255  0013C0  0E00               	movlw	0
  3256  0013C2  6E0D               	movwf	kpDebounce@i^0,c
  3257  0013C4                     l1895:
  3258  0013C4  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  3259  0013C6  EFEE  F009         	goto	u1781
  3260  0013CA  500E               	movf	(kpDebounce@i+1)^0,w,c
  3261  0013CC  E109               	bnz	u1780
  3262  0013CE  0E05               	movlw	5
  3263  0013D0  5C0D               	subwf	kpDebounce@i^0,w,c
  3264  0013D2  A0D8               	btfss	status,0,c
  3265  0013D4  EFEE  F009         	goto	u1781
  3266  0013D8  EFF0  F009         	goto	u1780
  3267  0013DC                     u1781:
  3268  0013DC  EFF2  F009         	goto	l1899
  3269  0013E0                     u1780:
  3270  0013E0  EF53  F00A         	goto	l1911
  3271  0013E4                     l1899:
  3272                           
  3273                           ;keypad.c: 35:       soWrite(1<<(i+3));
  3274  0013E4  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3275  0013E8  0E03               	movlw	3
  3276  0013EA  260A               	addwf	??_kpDebounce^0,f,c
  3277  0013EC  0E01               	movlw	1
  3278  0013EE  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3279  0013F0  0E00               	movlw	0
  3280  0013F2  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3281  0013F4  2A0A               	incf	??_kpDebounce^0,f,c
  3282  0013F6  EF00  F00A         	goto	u1794
  3283  0013FA                     u1795:
  3284  0013FA  90D8               	bcf	status,0,c
  3285  0013FC  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3286  0013FE  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3287  001400                     u1794:
  3288  001400  2E0A               	decfsz	??_kpDebounce^0,f,c
  3289  001402  EFFD  F009         	goto	u1795
  3290  001406  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  3291  00140A  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  3292  00140E  EC86  F00C         	call	_soWrite	;wreg free
  3293                           
  3294                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  3295  001412  0E00               	movlw	0
  3296  001414  6E02               	movwf	(digitalRead@pin+1)^0,c
  3297  001416  0E0A               	movlw	10
  3298  001418  6E01               	movwf	digitalRead@pin^0,c
  3299  00141A  EC25  F009         	call	_digitalRead	;wreg free
  3300  00141E  5001               	movf	?_digitalRead^0,w,c
  3301  001420  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3302  001422  B4D8               	btfsc	status,2,c
  3303  001424  EF16  F00A         	goto	u1801
  3304  001428  EF18  F00A         	goto	u1800
  3305  00142C                     u1801:
  3306  00142C  EF2B  F00A         	goto	l1903
  3307  001430                     u1800:
  3308  001430                     
  3309                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  3310  001430  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3311  001434  0E01               	movlw	1
  3312  001436  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3313  001438  0E00               	movlw	0
  3314  00143A  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3315  00143C  2A0A               	incf	??_kpDebounce^0,f,c
  3316  00143E  EF24  F00A         	goto	u1814
  3317  001442                     u1815:
  3318  001442  90D8               	bcf	status,0,c
  3319  001444  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3320  001446  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3321  001448                     u1814:
  3322  001448  2E0A               	decfsz	??_kpDebounce^0,f,c
  3323  00144A  EF21  F00A         	goto	u1815
  3324  00144E  500B               	movf	(??_kpDebounce+1)^0,w,c
  3325  001450  121F               	iorwf	kpDebounce@newRead^0,f,c
  3326  001452  500C               	movf	(??_kpDebounce+2)^0,w,c
  3327  001454  1220               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3328  001456                     l1903:
  3329                           
  3330                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  3331  001456  0E00               	movlw	0
  3332  001458  6E02               	movwf	(digitalRead@pin+1)^0,c
  3333  00145A  0E09               	movlw	9
  3334  00145C  6E01               	movwf	digitalRead@pin^0,c
  3335  00145E  EC25  F009         	call	_digitalRead	;wreg free
  3336  001462  5001               	movf	?_digitalRead^0,w,c
  3337  001464  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3338  001466  B4D8               	btfsc	status,2,c
  3339  001468  EF38  F00A         	goto	u1821
  3340  00146C  EF3A  F00A         	goto	u1820
  3341  001470                     u1821:
  3342  001470  EF4F  F00A         	goto	l1907
  3343  001474                     u1820:
  3344  001474                     
  3345                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  3346  001474  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3347  001478  0E05               	movlw	5
  3348  00147A  260A               	addwf	??_kpDebounce^0,f,c
  3349  00147C  0E01               	movlw	1
  3350  00147E  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3351  001480  0E00               	movlw	0
  3352  001482  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3353  001484  2A0A               	incf	??_kpDebounce^0,f,c
  3354  001486  EF48  F00A         	goto	u1834
  3355  00148A                     u1835:
  3356  00148A  90D8               	bcf	status,0,c
  3357  00148C  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3358  00148E  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3359  001490                     u1834:
  3360  001490  2E0A               	decfsz	??_kpDebounce^0,f,c
  3361  001492  EF45  F00A         	goto	u1835
  3362  001496  500B               	movf	(??_kpDebounce+1)^0,w,c
  3363  001498  121F               	iorwf	kpDebounce@newRead^0,f,c
  3364  00149A  500C               	movf	(??_kpDebounce+2)^0,w,c
  3365  00149C  1220               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3366  00149E                     l1907:
  3367                           
  3368                           ;keypad.c: 42:     }
  3369  00149E  4A0D               	infsnz	kpDebounce@i^0,f,c
  3370  0014A0  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  3371  0014A2  EFE2  F009         	goto	l1895
  3372  0014A6                     l1911:
  3373                           
  3374                           ;keypad.c: 43:     if (oldRead == newRead) {
  3375  0014A6  501F               	movf	kpDebounce@newRead^0,w,c
  3376  0014A8  181D               	xorwf	kpDebounce@oldRead^0,w,c
  3377  0014AA  E107               	bnz	u1841
  3378  0014AC  5020               	movf	(kpDebounce@newRead+1)^0,w,c
  3379  0014AE  181E               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  3380  0014B0  A4D8               	btfss	status,2,c
  3381  0014B2  EF5D  F00A         	goto	u1841
  3382  0014B6  EF5F  F00A         	goto	u1840
  3383  0014BA                     u1841:
  3384  0014BA  EF62  F00A         	goto	l1915
  3385  0014BE                     u1840:
  3386  0014BE                     
  3387                           ;keypad.c: 44:         tempo--;
  3388  0014BE  0628               	decf	kpDebounce@tempo^0,f,c
  3389                           
  3390                           ;keypad.c: 45:     } else {
  3391  0014C0  EF68  F00A         	goto	l99
  3392  0014C4                     l1915:
  3393                           
  3394                           ;keypad.c: 46:         tempo = 1;
  3395  0014C4  0E01               	movlw	1
  3396  0014C6  6E28               	movwf	kpDebounce@tempo^0,c
  3397  0014C8                     
  3398                           ;keypad.c: 47:         oldRead = newRead;
  3399  0014C8  C01F  F01D         	movff	kpDebounce@newRead,kpDebounce@oldRead
  3400  0014CC  C020  F01E         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  3401  0014D0                     l99:
  3402                           
  3403                           ;keypad.c: 49:     if (tempo == 0) {
  3404  0014D0  5028               	movf	kpDebounce@tempo^0,w,c
  3405  0014D2  A4D8               	btfss	status,2,c
  3406  0014D4  EF6E  F00A         	goto	u1851
  3407  0014D8  EF70  F00A         	goto	u1850
  3408  0014DC                     u1851:
  3409  0014DC  EF74  F00A         	goto	l101
  3410  0014E0                     u1850:
  3411  0014E0                     
  3412                           ;keypad.c: 50:         keys = oldRead;
  3413  0014E0  C01D  F021         	movff	kpDebounce@oldRead,_keys
  3414  0014E4  C01E  F022         	movff	kpDebounce@oldRead+1,_keys+1
  3415  0014E8                     l101:
  3416  0014E8  0012               	return		;funcret
  3417  0014EA                     __end_of_kpDebounce:
  3418                           	callstack 0
  3419                           
  3420 ;; *************** function _soWrite *****************
  3421 ;; Defined at:
  3422 ;;		line 18 in file "so.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  value           2    6[COMRAM] int 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;  i               1    8[COMRAM] unsigned char 
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1    wreg      void 
  3429 ;; Registers used:
  3430 ;;		wreg, status,2, status,0, cstack
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3436 ;;      Params:         2       0       0       0       0       0       0
  3437 ;;      Locals:         1       0       0       0       0       0       0
  3438 ;;      Temps:          0       0       0       0       0       0       0
  3439 ;;      Totals:         3       0       0       0       0       0       0
  3440 ;;Total ram usage:        3 bytes
  3441 ;; Hardware stack levels used: 1
  3442 ;; Hardware stack levels required when called: 2
  3443 ;; This function calls:
  3444 ;;		_PulseClockData
  3445 ;;		_PulseEnClock
  3446 ;;		_digitalWrite
  3447 ;; This function is called by:
  3448 ;;		_kpDebounce
  3449 ;;		_pushNibble
  3450 ;;		_pushByte
  3451 ;;		_ssdUpdate
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text22
  3456  00190C                     __ptext22:
  3457                           	callstack 0
  3458  00190C                     _soWrite:
  3459                           	callstack 25
  3460  00190C                     
  3461                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  3462  00190C  0E00               	movlw	0
  3463  00190E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3464  001910  0E08               	movlw	8
  3465  001912  6E01               	movwf	digitalWrite@pin^0,c
  3466  001914  0E00               	movlw	0
  3467  001916  6E04               	movwf	(digitalWrite@value+1)^0,c
  3468  001918  0E00               	movlw	0
  3469  00191A  6E03               	movwf	digitalWrite@value^0,c
  3470  00191C  EC1B  F007         	call	_digitalWrite	;wreg free
  3471  001920                     
  3472                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  3473  001920  0E00               	movlw	0
  3474  001922  6E09               	movwf	soWrite@i^0,c
  3475  001924                     l1685:
  3476                           
  3477                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  3478  001924  0E00               	movlw	0
  3479  001926  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3480  001928  0E1E               	movlw	30
  3481  00192A  6E01               	movwf	digitalWrite@pin^0,c
  3482  00192C  0E80               	movlw	128
  3483  00192E  1407               	andwf	soWrite@value^0,w,c
  3484  001930  6E03               	movwf	digitalWrite@value^0,c
  3485  001932  6A04               	clrf	(digitalWrite@value+1)^0,c
  3486  001934  EC1B  F007         	call	_digitalWrite	;wreg free
  3487                           
  3488                           ;so.c: 23:   PulseClockData();
  3489  001938  EC95  F00D         	call	_PulseClockData	;wreg free
  3490  00193C                     
  3491                           ;so.c: 24:   value <<= 1;
  3492  00193C  90D8               	bcf	status,0,c
  3493  00193E  3607               	rlcf	soWrite@value^0,f,c
  3494  001940  3608               	rlcf	(soWrite@value+1)^0,f,c
  3495  001942                     
  3496                           ;so.c: 25:  }
  3497  001942  2A09               	incf	soWrite@i^0,f,c
  3498  001944  0E07               	movlw	7
  3499  001946  6409               	cpfsgt	soWrite@i^0,c
  3500  001948  EFA8  F00C         	goto	u1381
  3501  00194C  EFAA  F00C         	goto	u1380
  3502  001950                     u1381:
  3503  001950  EF92  F00C         	goto	l1685
  3504  001954                     u1380:
  3505  001954                     
  3506                           ;so.c: 26:  PulseEnClock();
  3507  001954  EC80  F00D         	call	_PulseEnClock	;wreg free
  3508  001958  0012               	return		;funcret
  3509  00195A                     __end_of_soWrite:
  3510                           	callstack 0
  3511                           
  3512 ;; *************** function _PulseEnClock *****************
  3513 ;; Defined at:
  3514 ;;		line 9 in file "so.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;		None
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;		None
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3528 ;;      Params:         0       0       0       0       0       0       0
  3529 ;;      Locals:         0       0       0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0
  3531 ;;      Totals:         0       0       0       0       0       0       0
  3532 ;;Total ram usage:        0 bytes
  3533 ;; Hardware stack levels used: 1
  3534 ;; Hardware stack levels required when called: 1
  3535 ;; This function calls:
  3536 ;;		_digitalWrite
  3537 ;; This function is called by:
  3538 ;;		_soWrite
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text23
  3543  001B00                     __ptext23:
  3544                           	callstack 0
  3545  001B00                     _PulseEnClock:
  3546                           	callstack 25
  3547  001B00                     
  3548                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  3549  001B00  0E00               	movlw	0
  3550  001B02  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3551  001B04  0E1F               	movlw	31
  3552  001B06  6E01               	movwf	digitalWrite@pin^0,c
  3553  001B08  0E00               	movlw	0
  3554  001B0A  6E04               	movwf	(digitalWrite@value+1)^0,c
  3555  001B0C  0E01               	movlw	1
  3556  001B0E  6E03               	movwf	digitalWrite@value^0,c
  3557  001B10  EC1B  F007         	call	_digitalWrite	;wreg free
  3558                           
  3559                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  3560  001B14  0E00               	movlw	0
  3561  001B16  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3562  001B18  0E1F               	movlw	31
  3563  001B1A  6E01               	movwf	digitalWrite@pin^0,c
  3564  001B1C  0E00               	movlw	0
  3565  001B1E  6E04               	movwf	(digitalWrite@value+1)^0,c
  3566  001B20  0E00               	movlw	0
  3567  001B22  6E03               	movwf	digitalWrite@value^0,c
  3568  001B24  EC1B  F007         	call	_digitalWrite	;wreg free
  3569  001B28  0012               	return		;funcret
  3570  001B2A                     __end_of_PulseEnClock:
  3571                           	callstack 0
  3572                           
  3573 ;; *************** function _PulseClockData *****************
  3574 ;; Defined at:
  3575 ;;		line 14 in file "so.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;		None
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;		None
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3589 ;;      Params:         0       0       0       0       0       0       0
  3590 ;;      Locals:         0       0       0       0       0       0       0
  3591 ;;      Temps:          0       0       0       0       0       0       0
  3592 ;;      Totals:         0       0       0       0       0       0       0
  3593 ;;Total ram usage:        0 bytes
  3594 ;; Hardware stack levels used: 1
  3595 ;; Hardware stack levels required when called: 1
  3596 ;; This function calls:
  3597 ;;		_digitalWrite
  3598 ;; This function is called by:
  3599 ;;		_soWrite
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           	psect	text24
  3604  001B2A                     __ptext24:
  3605                           	callstack 0
  3606  001B2A                     _PulseClockData:
  3607                           	callstack 25
  3608  001B2A                     
  3609                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  3610  001B2A  0E00               	movlw	0
  3611  001B2C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3612  001B2E  0E08               	movlw	8
  3613  001B30  6E01               	movwf	digitalWrite@pin^0,c
  3614  001B32  0E00               	movlw	0
  3615  001B34  6E04               	movwf	(digitalWrite@value+1)^0,c
  3616  001B36  0E01               	movlw	1
  3617  001B38  6E03               	movwf	digitalWrite@value^0,c
  3618  001B3A  EC1B  F007         	call	_digitalWrite	;wreg free
  3619                           
  3620                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  3621  001B3E  0E00               	movlw	0
  3622  001B40  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3623  001B42  0E08               	movlw	8
  3624  001B44  6E01               	movwf	digitalWrite@pin^0,c
  3625  001B46  0E00               	movlw	0
  3626  001B48  6E04               	movwf	(digitalWrite@value+1)^0,c
  3627  001B4A  0E00               	movlw	0
  3628  001B4C  6E03               	movwf	digitalWrite@value^0,c
  3629  001B4E  EC1B  F007         	call	_digitalWrite	;wreg free
  3630  001B52  0012               	return		;funcret
  3631  001B54                     __end_of_PulseClockData:
  3632                           	callstack 0
  3633                           
  3634 ;; *************** function _digitalWrite *****************
  3635 ;; Defined at:
  3636 ;;		line 14 in file "io.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  pin             2    0[COMRAM] int 
  3639 ;;  value           2    2[COMRAM] int 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;		None
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3651 ;;      Params:         4       0       0       0       0       0       0
  3652 ;;      Locals:         0       0       0       0       0       0       0
  3653 ;;      Temps:          2       0       0       0       0       0       0
  3654 ;;      Totals:         6       0       0       0       0       0       0
  3655 ;;Total ram usage:        6 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; This function calls:
  3658 ;;		Nothing
  3659 ;; This function is called by:
  3660 ;;		_pulseEnablePin
  3661 ;;		_pushNibble
  3662 ;;		_pushByte
  3663 ;;		_PulseEnClock
  3664 ;;		_PulseClockData
  3665 ;;		_soWrite
  3666 ;;		_rgbColor
  3667 ;;		_ssdUpdate
  3668 ;;		_turnOn
  3669 ;;		_turnOff
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text25
  3674  000E36                     __ptext25:
  3675                           	callstack 0
  3676  000E36                     _digitalWrite:
  3677                           	callstack 26
  3678  000E36                     
  3679                           ;io.c: 16:     if(pin <8){
  3680  000E36  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3681  000E38  EF29  F007         	goto	u1180
  3682  000E3C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3683  000E3E  E107               	bnz	u1181
  3684  000E40  0E08               	movlw	8
  3685  000E42  5C01               	subwf	digitalWrite@pin^0,w,c
  3686  000E44  B0D8               	btfsc	status,0,c
  3687  000E46  EF27  F007         	goto	u1181
  3688  000E4A  EF29  F007         	goto	u1180
  3689  000E4E                     u1181:
  3690  000E4E  EF53  F007         	goto	l1641
  3691  000E52                     u1180:
  3692  000E52                     
  3693                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  3694  000E52  5003               	movf	digitalWrite@value^0,w,c
  3695  000E54  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3696  000E56  B4D8               	btfsc	status,2,c
  3697  000E58  EF30  F007         	goto	u1191
  3698  000E5C  EF32  F007         	goto	u1190
  3699  000E60                     u1191:
  3700  000E60  EF42  F007         	goto	l1639
  3701  000E64                     u1190:
  3702  000E64  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3703  000E68  0E01               	movlw	1
  3704  000E6A  6E06               	movwf	(??_digitalWrite+1)^0,c
  3705  000E6C  2A05               	incf	??_digitalWrite^0,f,c
  3706  000E6E  EF3B  F007         	goto	u1204
  3707  000E72                     u1205:
  3708  000E72  90D8               	bcf	status,0,c
  3709  000E74  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3710  000E76                     u1204:
  3711  000E76  2E05               	decfsz	??_digitalWrite^0,f,c
  3712  000E78  EF39  F007         	goto	u1205
  3713  000E7C  5006               	movf	(??_digitalWrite+1)^0,w,c
  3714  000E7E  1280               	iorwf	128,f,c	;volatile
  3715  000E80  EF41  F008         	goto	l238
  3716  000E84                     l1639:
  3717  000E84  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3718  000E88  0E01               	movlw	1
  3719  000E8A  6E06               	movwf	(??_digitalWrite+1)^0,c
  3720  000E8C  2A05               	incf	??_digitalWrite^0,f,c
  3721  000E8E  EF4B  F007         	goto	u1214
  3722  000E92                     u1215:
  3723  000E92  90D8               	bcf	status,0,c
  3724  000E94  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3725  000E96                     u1214:
  3726  000E96  2E05               	decfsz	??_digitalWrite^0,f,c
  3727  000E98  EF49  F007         	goto	u1215
  3728  000E9C  5006               	movf	(??_digitalWrite+1)^0,w,c
  3729  000E9E  0AFF               	xorlw	255
  3730  000EA0  1680               	andwf	128,f,c	;volatile
  3731  000EA2  EF41  F008         	goto	l238
  3732  000EA6                     l1641:
  3733  000EA6  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3734  000EA8  EF61  F007         	goto	u1220
  3735  000EAC  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3736  000EAE  E107               	bnz	u1221
  3737  000EB0  0E10               	movlw	16
  3738  000EB2  5C01               	subwf	digitalWrite@pin^0,w,c
  3739  000EB4  B0D8               	btfsc	status,0,c
  3740  000EB6  EF5F  F007         	goto	u1221
  3741  000EBA  EF61  F007         	goto	u1220
  3742  000EBE                     u1221:
  3743  000EBE  EF8F  F007         	goto	l1649
  3744  000EC2                     u1220:
  3745  000EC2                     
  3746                           ;io.c: 20:         pin -=8;
  3747  000EC2  0EF8               	movlw	248
  3748  000EC4  2601               	addwf	digitalWrite@pin^0,f,c
  3749  000EC6  0EFF               	movlw	255
  3750  000EC8  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3751                           
  3752                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  3753  000ECA  5003               	movf	digitalWrite@value^0,w,c
  3754  000ECC  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3755  000ECE  B4D8               	btfsc	status,2,c
  3756  000ED0  EF6C  F007         	goto	u1231
  3757  000ED4  EF6E  F007         	goto	u1230
  3758  000ED8                     u1231:
  3759  000ED8  EF7E  F007         	goto	l1647
  3760  000EDC                     u1230:
  3761  000EDC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3762  000EE0  0E01               	movlw	1
  3763  000EE2  6E06               	movwf	(??_digitalWrite+1)^0,c
  3764  000EE4  2A05               	incf	??_digitalWrite^0,f,c
  3765  000EE6  EF77  F007         	goto	u1244
  3766  000EEA                     u1245:
  3767  000EEA  90D8               	bcf	status,0,c
  3768  000EEC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3769  000EEE                     u1244:
  3770  000EEE  2E05               	decfsz	??_digitalWrite^0,f,c
  3771  000EF0  EF75  F007         	goto	u1245
  3772  000EF4  5006               	movf	(??_digitalWrite+1)^0,w,c
  3773  000EF6  1281               	iorwf	129,f,c	;volatile
  3774  000EF8  EF41  F008         	goto	l238
  3775  000EFC                     l1647:
  3776  000EFC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3777  000F00  0E01               	movlw	1
  3778  000F02  6E06               	movwf	(??_digitalWrite+1)^0,c
  3779  000F04  2A05               	incf	??_digitalWrite^0,f,c
  3780  000F06  EF87  F007         	goto	u1254
  3781  000F0A                     u1255:
  3782  000F0A  90D8               	bcf	status,0,c
  3783  000F0C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3784  000F0E                     u1254:
  3785  000F0E  2E05               	decfsz	??_digitalWrite^0,f,c
  3786  000F10  EF85  F007         	goto	u1255
  3787  000F14  5006               	movf	(??_digitalWrite+1)^0,w,c
  3788  000F16  0AFF               	xorlw	255
  3789  000F18  1681               	andwf	129,f,c	;volatile
  3790  000F1A  EF41  F008         	goto	l238
  3791  000F1E                     l1649:
  3792  000F1E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3793  000F20  EF9D  F007         	goto	u1260
  3794  000F24  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3795  000F26  E107               	bnz	u1261
  3796  000F28  0E18               	movlw	24
  3797  000F2A  5C01               	subwf	digitalWrite@pin^0,w,c
  3798  000F2C  B0D8               	btfsc	status,0,c
  3799  000F2E  EF9B  F007         	goto	u1261
  3800  000F32  EF9D  F007         	goto	u1260
  3801  000F36                     u1261:
  3802  000F36  EFCB  F007         	goto	l1657
  3803  000F3A                     u1260:
  3804  000F3A                     
  3805                           ;io.c: 24:         pin -=16;
  3806  000F3A  0EF0               	movlw	240
  3807  000F3C  2601               	addwf	digitalWrite@pin^0,f,c
  3808  000F3E  0EFF               	movlw	255
  3809  000F40  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3810                           
  3811                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  3812  000F42  5003               	movf	digitalWrite@value^0,w,c
  3813  000F44  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3814  000F46  B4D8               	btfsc	status,2,c
  3815  000F48  EFA8  F007         	goto	u1271
  3816  000F4C  EFAA  F007         	goto	u1270
  3817  000F50                     u1271:
  3818  000F50  EFBA  F007         	goto	l1655
  3819  000F54                     u1270:
  3820  000F54  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3821  000F58  0E01               	movlw	1
  3822  000F5A  6E06               	movwf	(??_digitalWrite+1)^0,c
  3823  000F5C  2A05               	incf	??_digitalWrite^0,f,c
  3824  000F5E  EFB3  F007         	goto	u1284
  3825  000F62                     u1285:
  3826  000F62  90D8               	bcf	status,0,c
  3827  000F64  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3828  000F66                     u1284:
  3829  000F66  2E05               	decfsz	??_digitalWrite^0,f,c
  3830  000F68  EFB1  F007         	goto	u1285
  3831  000F6C  5006               	movf	(??_digitalWrite+1)^0,w,c
  3832  000F6E  1282               	iorwf	130,f,c	;volatile
  3833  000F70  EF41  F008         	goto	l238
  3834  000F74                     l1655:
  3835  000F74  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3836  000F78  0E01               	movlw	1
  3837  000F7A  6E06               	movwf	(??_digitalWrite+1)^0,c
  3838  000F7C  2A05               	incf	??_digitalWrite^0,f,c
  3839  000F7E  EFC3  F007         	goto	u1294
  3840  000F82                     u1295:
  3841  000F82  90D8               	bcf	status,0,c
  3842  000F84  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3843  000F86                     u1294:
  3844  000F86  2E05               	decfsz	??_digitalWrite^0,f,c
  3845  000F88  EFC1  F007         	goto	u1295
  3846  000F8C  5006               	movf	(??_digitalWrite+1)^0,w,c
  3847  000F8E  0AFF               	xorlw	255
  3848  000F90  1682               	andwf	130,f,c	;volatile
  3849  000F92  EF41  F008         	goto	l238
  3850  000F96                     l1657:
  3851  000F96  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3852  000F98  EFD9  F007         	goto	u1300
  3853  000F9C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3854  000F9E  E107               	bnz	u1301
  3855  000FA0  0E20               	movlw	32
  3856  000FA2  5C01               	subwf	digitalWrite@pin^0,w,c
  3857  000FA4  B0D8               	btfsc	status,0,c
  3858  000FA6  EFD7  F007         	goto	u1301
  3859  000FAA  EFD9  F007         	goto	u1300
  3860  000FAE                     u1301:
  3861  000FAE  EF07  F008         	goto	l1665
  3862  000FB2                     u1300:
  3863  000FB2                     
  3864                           ;io.c: 28:         pin -=24;
  3865  000FB2  0EE8               	movlw	232
  3866  000FB4  2601               	addwf	digitalWrite@pin^0,f,c
  3867  000FB6  0EFF               	movlw	255
  3868  000FB8  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3869                           
  3870                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  3871  000FBA  5003               	movf	digitalWrite@value^0,w,c
  3872  000FBC  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3873  000FBE  B4D8               	btfsc	status,2,c
  3874  000FC0  EFE4  F007         	goto	u1311
  3875  000FC4  EFE6  F007         	goto	u1310
  3876  000FC8                     u1311:
  3877  000FC8  EFF6  F007         	goto	l1663
  3878  000FCC                     u1310:
  3879  000FCC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3880  000FD0  0E01               	movlw	1
  3881  000FD2  6E06               	movwf	(??_digitalWrite+1)^0,c
  3882  000FD4  2A05               	incf	??_digitalWrite^0,f,c
  3883  000FD6  EFEF  F007         	goto	u1324
  3884  000FDA                     u1325:
  3885  000FDA  90D8               	bcf	status,0,c
  3886  000FDC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3887  000FDE                     u1324:
  3888  000FDE  2E05               	decfsz	??_digitalWrite^0,f,c
  3889  000FE0  EFED  F007         	goto	u1325
  3890  000FE4  5006               	movf	(??_digitalWrite+1)^0,w,c
  3891  000FE6  1283               	iorwf	131,f,c	;volatile
  3892  000FE8  EF41  F008         	goto	l238
  3893  000FEC                     l1663:
  3894  000FEC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3895  000FF0  0E01               	movlw	1
  3896  000FF2  6E06               	movwf	(??_digitalWrite+1)^0,c
  3897  000FF4  2A05               	incf	??_digitalWrite^0,f,c
  3898  000FF6  EFFF  F007         	goto	u1334
  3899  000FFA                     u1335:
  3900  000FFA  90D8               	bcf	status,0,c
  3901  000FFC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3902  000FFE                     u1334:
  3903  000FFE  2E05               	decfsz	??_digitalWrite^0,f,c
  3904  001000  EFFD  F007         	goto	u1335
  3905  001004  5006               	movf	(??_digitalWrite+1)^0,w,c
  3906  001006  0AFF               	xorlw	255
  3907  001008  1683               	andwf	131,f,c	;volatile
  3908  00100A  EF41  F008         	goto	l238
  3909  00100E                     l1665:
  3910  00100E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3911  001010  EF15  F008         	goto	u1340
  3912  001014  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3913  001016  E107               	bnz	u1341
  3914  001018  0E28               	movlw	40
  3915  00101A  5C01               	subwf	digitalWrite@pin^0,w,c
  3916  00101C  B0D8               	btfsc	status,0,c
  3917  00101E  EF13  F008         	goto	u1341
  3918  001022  EF15  F008         	goto	u1340
  3919  001026                     u1341:
  3920  001026  EF41  F008         	goto	l238
  3921  00102A                     u1340:
  3922  00102A                     
  3923                           ;io.c: 32:         pin -=32;
  3924  00102A  0EE0               	movlw	224
  3925  00102C  2601               	addwf	digitalWrite@pin^0,f,c
  3926  00102E  0EFF               	movlw	255
  3927  001030  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3928                           
  3929                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  3930  001032  5003               	movf	digitalWrite@value^0,w,c
  3931  001034  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3932  001036  B4D8               	btfsc	status,2,c
  3933  001038  EF20  F008         	goto	u1351
  3934  00103C  EF22  F008         	goto	u1350
  3935  001040                     u1351:
  3936  001040  EF32  F008         	goto	l1671
  3937  001044                     u1350:
  3938  001044  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3939  001048  0E01               	movlw	1
  3940  00104A  6E06               	movwf	(??_digitalWrite+1)^0,c
  3941  00104C  2A05               	incf	??_digitalWrite^0,f,c
  3942  00104E  EF2B  F008         	goto	u1364
  3943  001052                     u1365:
  3944  001052  90D8               	bcf	status,0,c
  3945  001054  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3946  001056                     u1364:
  3947  001056  2E05               	decfsz	??_digitalWrite^0,f,c
  3948  001058  EF29  F008         	goto	u1365
  3949  00105C  5006               	movf	(??_digitalWrite+1)^0,w,c
  3950  00105E  1284               	iorwf	132,f,c	;volatile
  3951  001060  EF41  F008         	goto	l238
  3952  001064                     l1671:
  3953  001064  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3954  001068  0E01               	movlw	1
  3955  00106A  6E06               	movwf	(??_digitalWrite+1)^0,c
  3956  00106C  2A05               	incf	??_digitalWrite^0,f,c
  3957  00106E  EF3B  F008         	goto	u1374
  3958  001072                     u1375:
  3959  001072  90D8               	bcf	status,0,c
  3960  001074  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3961  001076                     u1374:
  3962  001076  2E05               	decfsz	??_digitalWrite^0,f,c
  3963  001078  EF39  F008         	goto	u1375
  3964  00107C  5006               	movf	(??_digitalWrite+1)^0,w,c
  3965  00107E  0AFF               	xorlw	255
  3966  001080  1684               	andwf	132,f,c	;volatile
  3967  001082                     l238:
  3968  001082  0012               	return		;funcret
  3969  001084                     __end_of_digitalWrite:
  3970                           	callstack 0
  3971                           
  3972 ;; *************** function _digitalRead *****************
  3973 ;; Defined at:
  3974 ;;		line 39 in file "io.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  pin             2    0[COMRAM] int 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;		None
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  2    0[COMRAM] int 
  3981 ;; Registers used:
  3982 ;;		wreg, status,2, status,0
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3988 ;;      Params:         2       0       0       0       0       0       0
  3989 ;;      Locals:         0       0       0       0       0       0       0
  3990 ;;      Temps:          3       0       0       0       0       0       0
  3991 ;;      Totals:         5       0       0       0       0       0       0
  3992 ;;Total ram usage:        5 bytes
  3993 ;; Hardware stack levels used: 1
  3994 ;; This function calls:
  3995 ;;		Nothing
  3996 ;; This function is called by:
  3997 ;;		_kpDebounce
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           	psect	text26
  4002  00124A                     __ptext26:
  4003                           	callstack 0
  4004  00124A                     _digitalRead:
  4005                           	callstack 29
  4006  00124A                     
  4007                           ;io.c: 40:     if(pin <8){
  4008  00124A  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4009  00124C  EF33  F009         	goto	u1610
  4010  001250  5002               	movf	(digitalRead@pin+1)^0,w,c
  4011  001252  E107               	bnz	u1611
  4012  001254  0E08               	movlw	8
  4013  001256  5C01               	subwf	digitalRead@pin^0,w,c
  4014  001258  B0D8               	btfsc	status,0,c
  4015  00125A  EF31  F009         	goto	u1611
  4016  00125E  EF33  F009         	goto	u1610
  4017  001262                     u1611:
  4018  001262  EF47  F009         	goto	l1777
  4019  001266                     u1610:
  4020  001266                     
  4021                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  4022  001266  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4023  00126A  0E01               	movlw	1
  4024  00126C  6E04               	movwf	(??_digitalRead+1)^0,c
  4025  00126E  2A03               	incf	??_digitalRead^0,f,c
  4026  001270  EF3C  F009         	goto	u1624
  4027  001274                     u1625:
  4028  001274  90D8               	bcf	status,0,c
  4029  001276  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4030  001278                     u1624:
  4031  001278  2E03               	decfsz	??_digitalRead^0,f,c
  4032  00127A  EF3A  F009         	goto	u1625
  4033  00127E  5004               	movf	(??_digitalRead+1)^0,w,c
  4034  001280  1480               	andwf	128,w,c	;volatile
  4035  001282  6E05               	movwf	(??_digitalRead+2)^0,c
  4036  001284  5005               	movf	(??_digitalRead+2)^0,w,c
  4037  001286  6E01               	movwf	?_digitalRead^0,c
  4038  001288  6A02               	clrf	(?_digitalRead+1)^0,c
  4039  00128A  EFD9  F009         	goto	l242
  4040  00128E                     l1777:
  4041  00128E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4042  001290  EF55  F009         	goto	u1630
  4043  001294  5002               	movf	(digitalRead@pin+1)^0,w,c
  4044  001296  E107               	bnz	u1631
  4045  001298  0E10               	movlw	16
  4046  00129A  5C01               	subwf	digitalRead@pin^0,w,c
  4047  00129C  B0D8               	btfsc	status,0,c
  4048  00129E  EF53  F009         	goto	u1631
  4049  0012A2  EF55  F009         	goto	u1630
  4050  0012A6                     u1631:
  4051  0012A6  EF6B  F009         	goto	l1785
  4052  0012AA                     u1630:
  4053  0012AA                     
  4054                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  4055  0012AA  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4056  0012AE  0EF8               	movlw	-8
  4057  0012B0  2603               	addwf	??_digitalRead^0,f,c
  4058  0012B2  0E01               	movlw	1
  4059  0012B4  6E04               	movwf	(??_digitalRead+1)^0,c
  4060  0012B6  2A03               	incf	??_digitalRead^0,f,c
  4061  0012B8  EF60  F009         	goto	u1644
  4062  0012BC                     u1645:
  4063  0012BC  90D8               	bcf	status,0,c
  4064  0012BE  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4065  0012C0                     u1644:
  4066  0012C0  2E03               	decfsz	??_digitalRead^0,f,c
  4067  0012C2  EF5E  F009         	goto	u1645
  4068  0012C6  5004               	movf	(??_digitalRead+1)^0,w,c
  4069  0012C8  1481               	andwf	129,w,c	;volatile
  4070  0012CA  6E05               	movwf	(??_digitalRead+2)^0,c
  4071  0012CC  5005               	movf	(??_digitalRead+2)^0,w,c
  4072  0012CE  6E01               	movwf	?_digitalRead^0,c
  4073  0012D0  6A02               	clrf	(?_digitalRead+1)^0,c
  4074  0012D2  EFD9  F009         	goto	l242
  4075  0012D6                     l1785:
  4076  0012D6  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4077  0012D8  EF79  F009         	goto	u1650
  4078  0012DC  5002               	movf	(digitalRead@pin+1)^0,w,c
  4079  0012DE  E107               	bnz	u1651
  4080  0012E0  0E18               	movlw	24
  4081  0012E2  5C01               	subwf	digitalRead@pin^0,w,c
  4082  0012E4  B0D8               	btfsc	status,0,c
  4083  0012E6  EF77  F009         	goto	u1651
  4084  0012EA  EF79  F009         	goto	u1650
  4085  0012EE                     u1651:
  4086  0012EE  EF8F  F009         	goto	l1793
  4087  0012F2                     u1650:
  4088  0012F2                     
  4089                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  4090  0012F2  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4091  0012F6  0EF0               	movlw	-16
  4092  0012F8  2603               	addwf	??_digitalRead^0,f,c
  4093  0012FA  0E01               	movlw	1
  4094  0012FC  6E04               	movwf	(??_digitalRead+1)^0,c
  4095  0012FE  2A03               	incf	??_digitalRead^0,f,c
  4096  001300  EF84  F009         	goto	u1664
  4097  001304                     u1665:
  4098  001304  90D8               	bcf	status,0,c
  4099  001306  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4100  001308                     u1664:
  4101  001308  2E03               	decfsz	??_digitalRead^0,f,c
  4102  00130A  EF82  F009         	goto	u1665
  4103  00130E  5004               	movf	(??_digitalRead+1)^0,w,c
  4104  001310  1482               	andwf	130,w,c	;volatile
  4105  001312  6E05               	movwf	(??_digitalRead+2)^0,c
  4106  001314  5005               	movf	(??_digitalRead+2)^0,w,c
  4107  001316  6E01               	movwf	?_digitalRead^0,c
  4108  001318  6A02               	clrf	(?_digitalRead+1)^0,c
  4109  00131A  EFD9  F009         	goto	l242
  4110  00131E                     l1793:
  4111  00131E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4112  001320  EF9D  F009         	goto	u1670
  4113  001324  5002               	movf	(digitalRead@pin+1)^0,w,c
  4114  001326  E107               	bnz	u1671
  4115  001328  0E20               	movlw	32
  4116  00132A  5C01               	subwf	digitalRead@pin^0,w,c
  4117  00132C  B0D8               	btfsc	status,0,c
  4118  00132E  EF9B  F009         	goto	u1671
  4119  001332  EF9D  F009         	goto	u1670
  4120  001336                     u1671:
  4121  001336  EFB3  F009         	goto	l1801
  4122  00133A                     u1670:
  4123  00133A                     
  4124                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  4125  00133A  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4126  00133E  0EE8               	movlw	-24
  4127  001340  2603               	addwf	??_digitalRead^0,f,c
  4128  001342  0E01               	movlw	1
  4129  001344  6E04               	movwf	(??_digitalRead+1)^0,c
  4130  001346  2A03               	incf	??_digitalRead^0,f,c
  4131  001348  EFA8  F009         	goto	u1684
  4132  00134C                     u1685:
  4133  00134C  90D8               	bcf	status,0,c
  4134  00134E  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4135  001350                     u1684:
  4136  001350  2E03               	decfsz	??_digitalRead^0,f,c
  4137  001352  EFA6  F009         	goto	u1685
  4138  001356  5004               	movf	(??_digitalRead+1)^0,w,c
  4139  001358  1483               	andwf	131,w,c	;volatile
  4140  00135A  6E05               	movwf	(??_digitalRead+2)^0,c
  4141  00135C  5005               	movf	(??_digitalRead+2)^0,w,c
  4142  00135E  6E01               	movwf	?_digitalRead^0,c
  4143  001360  6A02               	clrf	(?_digitalRead+1)^0,c
  4144  001362  EFD9  F009         	goto	l242
  4145  001366                     l1801:
  4146  001366  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4147  001368  EFC1  F009         	goto	u1690
  4148  00136C  5002               	movf	(digitalRead@pin+1)^0,w,c
  4149  00136E  E107               	bnz	u1691
  4150  001370  0E28               	movlw	40
  4151  001372  5C01               	subwf	digitalRead@pin^0,w,c
  4152  001374  B0D8               	btfsc	status,0,c
  4153  001376  EFBF  F009         	goto	u1691
  4154  00137A  EFC1  F009         	goto	u1690
  4155  00137E                     u1691:
  4156  00137E  EFD7  F009         	goto	l247
  4157  001382                     u1690:
  4158  001382                     
  4159                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  4160  001382  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4161  001386  0EE0               	movlw	-32
  4162  001388  2603               	addwf	??_digitalRead^0,f,c
  4163  00138A  0E01               	movlw	1
  4164  00138C  6E04               	movwf	(??_digitalRead+1)^0,c
  4165  00138E  2A03               	incf	??_digitalRead^0,f,c
  4166  001390  EFCC  F009         	goto	u1704
  4167  001394                     u1705:
  4168  001394  90D8               	bcf	status,0,c
  4169  001396  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4170  001398                     u1704:
  4171  001398  2E03               	decfsz	??_digitalRead^0,f,c
  4172  00139A  EFCA  F009         	goto	u1705
  4173  00139E  5004               	movf	(??_digitalRead+1)^0,w,c
  4174  0013A0  1484               	andwf	132,w,c	;volatile
  4175  0013A2  6E05               	movwf	(??_digitalRead+2)^0,c
  4176  0013A4  5005               	movf	(??_digitalRead+2)^0,w,c
  4177  0013A6  6E01               	movwf	?_digitalRead^0,c
  4178  0013A8  6A02               	clrf	(?_digitalRead+1)^0,c
  4179  0013AA  EFD9  F009         	goto	l242
  4180  0013AE                     l247:
  4181  0013AE                     
  4182                           ;io.c: 51:     return -1;
  4183  0013AE  6801               	setf	?_digitalRead^0,c
  4184  0013B0  6802               	setf	(?_digitalRead+1)^0,c
  4185  0013B2                     l242:
  4186  0013B2  0012               	return		;funcret
  4187  0013B4                     __end_of_digitalRead:
  4188                           	callstack 0
  4189                           
  4190 ;; *************** function ___awmod *****************
  4191 ;; Defined at:
  4192 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  dividend        2    8[COMRAM] int 
  4195 ;;  divisor         2   10[COMRAM] int 
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  sign            1   13[COMRAM] unsigned char 
  4198 ;;  counter         1   12[COMRAM] unsigned char 
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  2    8[COMRAM] int 
  4201 ;; Registers used:
  4202 ;;		wreg, status,2, status,0
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4208 ;;      Params:         4       0       0       0       0       0       0
  4209 ;;      Locals:         2       0       0       0       0       0       0
  4210 ;;      Temps:          0       0       0       0       0       0       0
  4211 ;;      Totals:         6       0       0       0       0       0       0
  4212 ;;Total ram usage:        6 bytes
  4213 ;; Hardware stack levels used: 1
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_main
  4218 ;;		_lcdNumber
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text27
  4223  001712                     __ptext27:
  4224                           	callstack 0
  4225  001712                     ___awmod:
  4226                           	callstack 30
  4227  001712  0E00               	movlw	0
  4228  001714  6E0E               	movwf	___awmod@sign^0,c
  4229  001716  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  4230  001718  EF92  F00B         	goto	u1950
  4231  00171C  EF90  F00B         	goto	u1951
  4232  001720                     u1951:
  4233  001720  EF98  F00B         	goto	l1993
  4234  001724                     u1950:
  4235  001724  6C09               	negf	___awmod@dividend^0,c
  4236  001726  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4237  001728  B0D8               	btfsc	status,0,c
  4238  00172A  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4239  00172C  0E01               	movlw	1
  4240  00172E  6E0E               	movwf	___awmod@sign^0,c
  4241  001730                     l1993:
  4242  001730  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  4243  001732  EF9F  F00B         	goto	u1960
  4244  001736  EF9D  F00B         	goto	u1961
  4245  00173A                     u1961:
  4246  00173A  EFA3  F00B         	goto	l1997
  4247  00173E                     u1960:
  4248  00173E  6C0B               	negf	___awmod@divisor^0,c
  4249  001740  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  4250  001742  B0D8               	btfsc	status,0,c
  4251  001744  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  4252  001746                     l1997:
  4253  001746  500B               	movf	___awmod@divisor^0,w,c
  4254  001748  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  4255  00174A  B4D8               	btfsc	status,2,c
  4256  00174C  EFAA  F00B         	goto	u1971
  4257  001750  EFAC  F00B         	goto	u1970
  4258  001754                     u1971:
  4259  001754  EFD0  F00B         	goto	l2013
  4260  001758                     u1970:
  4261  001758  0E01               	movlw	1
  4262  00175A  6E0D               	movwf	___awmod@counter^0,c
  4263  00175C  EFB4  F00B         	goto	l2003
  4264  001760                     l2001:
  4265  001760  90D8               	bcf	status,0,c
  4266  001762  360B               	rlcf	___awmod@divisor^0,f,c
  4267  001764  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  4268  001766  2A0D               	incf	___awmod@counter^0,f,c
  4269  001768                     l2003:
  4270  001768  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  4271  00176A  EFB9  F00B         	goto	u1981
  4272  00176E  EFBB  F00B         	goto	u1980
  4273  001772                     u1981:
  4274  001772  EFB0  F00B         	goto	l2001
  4275  001776                     u1980:
  4276  001776                     l2005:
  4277  001776  500B               	movf	___awmod@divisor^0,w,c
  4278  001778  5C09               	subwf	___awmod@dividend^0,w,c
  4279  00177A  500C               	movf	(___awmod@divisor+1)^0,w,c
  4280  00177C  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  4281  00177E  A0D8               	btfss	status,0,c
  4282  001780  EFC4  F00B         	goto	u1991
  4283  001784  EFC6  F00B         	goto	u1990
  4284  001788                     u1991:
  4285  001788  EFCA  F00B         	goto	l2009
  4286  00178C                     u1990:
  4287  00178C  500B               	movf	___awmod@divisor^0,w,c
  4288  00178E  5E09               	subwf	___awmod@dividend^0,f,c
  4289  001790  500C               	movf	(___awmod@divisor+1)^0,w,c
  4290  001792  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  4291  001794                     l2009:
  4292  001794  90D8               	bcf	status,0,c
  4293  001796  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  4294  001798  320B               	rrcf	___awmod@divisor^0,f,c
  4295  00179A  2E0D               	decfsz	___awmod@counter^0,f,c
  4296  00179C  EFBB  F00B         	goto	l2005
  4297  0017A0                     l2013:
  4298  0017A0  500E               	movf	___awmod@sign^0,w,c
  4299  0017A2  B4D8               	btfsc	status,2,c
  4300  0017A4  EFD6  F00B         	goto	u2001
  4301  0017A8  EFD8  F00B         	goto	u2000
  4302  0017AC                     u2001:
  4303  0017AC  EFDC  F00B         	goto	l2017
  4304  0017B0                     u2000:
  4305  0017B0  6C09               	negf	___awmod@dividend^0,c
  4306  0017B2  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4307  0017B4  B0D8               	btfsc	status,0,c
  4308  0017B6  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4309  0017B8                     l2017:
  4310  0017B8  C009  F009         	movff	___awmod@dividend,?___awmod
  4311  0017BC  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  4312  0017C0  0012               	return		;funcret
  4313  0017C2                     __end_of___awmod:
  4314                           	callstack 0
  4315                           
  4316 ;; *************** function ___awdiv *****************
  4317 ;; Defined at:
  4318 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;  dividend        2    0[COMRAM] int 
  4321 ;;  divisor         2    2[COMRAM] int 
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;  quotient        2    6[COMRAM] int 
  4324 ;;  sign            1    5[COMRAM] unsigned char 
  4325 ;;  counter         1    4[COMRAM] unsigned char 
  4326 ;; Return value:  Size  Location     Type
  4327 ;;                  2    0[COMRAM] int 
  4328 ;; Registers used:
  4329 ;;		wreg, status,2, status,0
  4330 ;; Tracked objects:
  4331 ;;		On entry : 0/0
  4332 ;;		On exit  : 0/0
  4333 ;;		Unchanged: 0/0
  4334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4335 ;;      Params:         4       0       0       0       0       0       0
  4336 ;;      Locals:         4       0       0       0       0       0       0
  4337 ;;      Temps:          0       0       0       0       0       0       0
  4338 ;;      Totals:         8       0       0       0       0       0       0
  4339 ;;Total ram usage:        8 bytes
  4340 ;; Hardware stack levels used: 1
  4341 ;; This function calls:
  4342 ;;		Nothing
  4343 ;; This function is called by:
  4344 ;;		_main
  4345 ;;		_lcdNumber
  4346 ;; This function uses a non-reentrant model
  4347 ;;
  4348                           
  4349                           	psect	text28
  4350  0014EA                     __ptext28:
  4351                           	callstack 0
  4352  0014EA                     ___awdiv:
  4353                           	callstack 30
  4354  0014EA  0E00               	movlw	0
  4355  0014EC  6E06               	movwf	___awdiv@sign^0,c
  4356  0014EE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4357  0014F0  EF7E  F00A         	goto	u1890
  4358  0014F4  EF7C  F00A         	goto	u1891
  4359  0014F8                     u1891:
  4360  0014F8  EF84  F00A         	goto	l1949
  4361  0014FC                     u1890:
  4362  0014FC  6C03               	negf	___awdiv@divisor^0,c
  4363  0014FE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4364  001500  B0D8               	btfsc	status,0,c
  4365  001502  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4366  001504  0E01               	movlw	1
  4367  001506  6E06               	movwf	___awdiv@sign^0,c
  4368  001508                     l1949:
  4369  001508  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4370  00150A  EF8B  F00A         	goto	u1900
  4371  00150E  EF89  F00A         	goto	u1901
  4372  001512                     u1901:
  4373  001512  EF91  F00A         	goto	l1955
  4374  001516                     u1900:
  4375  001516  6C01               	negf	___awdiv@dividend^0,c
  4376  001518  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4377  00151A  B0D8               	btfsc	status,0,c
  4378  00151C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4379  00151E  0E01               	movlw	1
  4380  001520  1A06               	xorwf	___awdiv@sign^0,f,c
  4381  001522                     l1955:
  4382  001522  0E00               	movlw	0
  4383  001524  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4384  001526  0E00               	movlw	0
  4385  001528  6E07               	movwf	___awdiv@quotient^0,c
  4386  00152A  5003               	movf	___awdiv@divisor^0,w,c
  4387  00152C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4388  00152E  B4D8               	btfsc	status,2,c
  4389  001530  EF9C  F00A         	goto	u1911
  4390  001534  EF9E  F00A         	goto	u1910
  4391  001538                     u1911:
  4392  001538  EFC6  F00A         	goto	l1977
  4393  00153C                     u1910:
  4394  00153C  0E01               	movlw	1
  4395  00153E  6E05               	movwf	___awdiv@counter^0,c
  4396  001540  EFA6  F00A         	goto	l1963
  4397  001544                     l1961:
  4398  001544  90D8               	bcf	status,0,c
  4399  001546  3603               	rlcf	___awdiv@divisor^0,f,c
  4400  001548  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4401  00154A  2A05               	incf	___awdiv@counter^0,f,c
  4402  00154C                     l1963:
  4403  00154C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4404  00154E  EFAB  F00A         	goto	u1921
  4405  001552  EFAD  F00A         	goto	u1920
  4406  001556                     u1921:
  4407  001556  EFA2  F00A         	goto	l1961
  4408  00155A                     u1920:
  4409  00155A                     l1965:
  4410  00155A  90D8               	bcf	status,0,c
  4411  00155C  3607               	rlcf	___awdiv@quotient^0,f,c
  4412  00155E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4413  001560  5003               	movf	___awdiv@divisor^0,w,c
  4414  001562  5C01               	subwf	___awdiv@dividend^0,w,c
  4415  001564  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4416  001566  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4417  001568  A0D8               	btfss	status,0,c
  4418  00156A  EFB9  F00A         	goto	u1931
  4419  00156E  EFBB  F00A         	goto	u1930
  4420  001572                     u1931:
  4421  001572  EFC0  F00A         	goto	l1973
  4422  001576                     u1930:
  4423  001576  5003               	movf	___awdiv@divisor^0,w,c
  4424  001578  5E01               	subwf	___awdiv@dividend^0,f,c
  4425  00157A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4426  00157C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4427  00157E  8007               	bsf	___awdiv@quotient^0,0,c
  4428  001580                     l1973:
  4429  001580  90D8               	bcf	status,0,c
  4430  001582  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4431  001584  3203               	rrcf	___awdiv@divisor^0,f,c
  4432  001586  2E05               	decfsz	___awdiv@counter^0,f,c
  4433  001588  EFAD  F00A         	goto	l1965
  4434  00158C                     l1977:
  4435  00158C  5006               	movf	___awdiv@sign^0,w,c
  4436  00158E  B4D8               	btfsc	status,2,c
  4437  001590  EFCC  F00A         	goto	u1941
  4438  001594  EFCE  F00A         	goto	u1940
  4439  001598                     u1941:
  4440  001598  EFD2  F00A         	goto	l1981
  4441  00159C                     u1940:
  4442  00159C  6C07               	negf	___awdiv@quotient^0,c
  4443  00159E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4444  0015A0  B0D8               	btfsc	status,0,c
  4445  0015A2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4446  0015A4                     l1981:
  4447  0015A4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4448  0015A8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4449  0015AC  0012               	return		;funcret
  4450  0015AE                     __end_of___awdiv:
  4451                           	callstack 0
  4452                           
  4453                           	psect	rparam
  4454  0000                     
  4455                           	psect	idloc
  4456                           
  4457                           ;Config register IDLOC0 @ 0x200000
  4458                           ;	unspecified, using default values
  4459  200000                     	org	2097152
  4460  200000  FF                 	db	255
  4461                           
  4462                           ;Config register IDLOC1 @ 0x200001
  4463                           ;	unspecified, using default values
  4464  200001                     	org	2097153
  4465  200001  FF                 	db	255
  4466                           
  4467                           ;Config register IDLOC2 @ 0x200002
  4468                           ;	unspecified, using default values
  4469  200002                     	org	2097154
  4470  200002  FF                 	db	255
  4471                           
  4472                           ;Config register IDLOC3 @ 0x200003
  4473                           ;	unspecified, using default values
  4474  200003                     	org	2097155
  4475  200003  FF                 	db	255
  4476                           
  4477                           ;Config register IDLOC4 @ 0x200004
  4478                           ;	unspecified, using default values
  4479  200004                     	org	2097156
  4480  200004  FF                 	db	255
  4481                           
  4482                           ;Config register IDLOC5 @ 0x200005
  4483                           ;	unspecified, using default values
  4484  200005                     	org	2097157
  4485  200005  FF                 	db	255
  4486                           
  4487                           ;Config register IDLOC6 @ 0x200006
  4488                           ;	unspecified, using default values
  4489  200006                     	org	2097158
  4490  200006  FF                 	db	255
  4491                           
  4492                           ;Config register IDLOC7 @ 0x200007
  4493                           ;	unspecified, using default values
  4494  200007                     	org	2097159
  4495  200007  FF                 	db	255
  4496                           
  4497                           	psect	config
  4498                           
  4499                           ; Padding undefined space
  4500  300000                     	org	3145728
  4501  300000  FF                 	db	255
  4502                           
  4503                           ;Config register CONFIG1H @ 0x300001
  4504                           ;	Oscillator Selection bits
  4505                           ;	OSC = HS, HS oscillator
  4506                           ;	Fail-Safe Clock Monitor Enable bit
  4507                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4508                           ;	Internal/External Oscillator Switchover bit
  4509                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4510  300001                     	org	3145729
  4511  300001  02                 	db	2
  4512                           
  4513                           ;Config register CONFIG2L @ 0x300002
  4514                           ;	Power-up Timer Enable bit
  4515                           ;	PWRT = OFF, PWRT disabled
  4516                           ;	Brown-out Reset Enable bits
  4517                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4518                           ;	Brown Out Reset Voltage bits
  4519                           ;	BORV = 0x2E, user specified literal
  4520  300002                     	org	3145730
  4521  300002  71                 	db	369
  4522                           
  4523                           ;Config register CONFIG2H @ 0x300003
  4524                           ;	Watchdog Timer Enable bit
  4525                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4526                           ;	Watchdog Timer Postscale Select bits
  4527                           ;	WDTPS = 1, 1:1
  4528  300003                     	org	3145731
  4529  300003  00                 	db	0
  4530                           
  4531                           ; Padding undefined space
  4532  300004                     	org	3145732
  4533  300004  FF                 	db	255
  4534                           
  4535                           ;Config register CONFIG3H @ 0x300005
  4536                           ;	CCP2 MUX bit
  4537                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4538                           ;	PORTB A/D Enable bit
  4539                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4540                           ;	Low-Power Timer1 Oscillator Enable bit
  4541                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4542                           ;	MCLR Pin Enable bit
  4543                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4544  300005                     	org	3145733
  4545  300005  83                 	db	131
  4546                           
  4547                           ;Config register CONFIG4L @ 0x300006
  4548                           ;	Stack Full/Underflow Reset Enable bit
  4549                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4550                           ;	Single-Supply ICSP Enable bit
  4551                           ;	LVP = OFF, Single-Supply ICSP disabled
  4552                           ;	Extended Instruction Set Enable bit
  4553                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4554                           ;	Background Debugger Enable bit
  4555                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4556  300006                     	org	3145734
  4557  300006  80                 	db	128
  4558                           
  4559                           ; Padding undefined space
  4560  300007                     	org	3145735
  4561  300007  FF                 	db	255
  4562                           
  4563                           ;Config register CONFIG5L @ 0x300008
  4564                           ;	Code Protection bit
  4565                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4566                           ;	Code Protection bit
  4567                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4568                           ;	Code Protection bit
  4569                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4570                           ;	Code Protection bit
  4571                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4572  300008                     	org	3145736
  4573  300008  0F                 	db	15
  4574                           
  4575                           ;Config register CONFIG5H @ 0x300009
  4576                           ;	Boot Block Code Protection bit
  4577                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4578                           ;	Data EEPROM Code Protection bit
  4579                           ;	CPD = OFF, Data EEPROM not code-protected
  4580  300009                     	org	3145737
  4581  300009  C0                 	db	192
  4582                           
  4583                           ;Config register CONFIG6L @ 0x30000A
  4584                           ;	Write Protection bit
  4585                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4586                           ;	Write Protection bit
  4587                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4588                           ;	Write Protection bit
  4589                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4590                           ;	Write Protection bit
  4591                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4592  30000A                     	org	3145738
  4593  30000A  0F                 	db	15
  4594                           
  4595                           ;Config register CONFIG6H @ 0x30000B
  4596                           ;	Configuration Register Write Protection bit
  4597                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4598                           ;	Boot Block Write Protection bit
  4599                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4600                           ;	Data EEPROM Write Protection bit
  4601                           ;	WRTD = OFF, Data EEPROM not write-protected
  4602  30000B                     	org	3145739
  4603  30000B  E0                 	db	224
  4604                           
  4605                           ;Config register CONFIG7L @ 0x30000C
  4606                           ;	Table Read Protection bit
  4607                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4608                           ;	Table Read Protection bit
  4609                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4610                           ;	Table Read Protection bit
  4611                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4612                           ;	Table Read Protection bit
  4613                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4614  30000C                     	org	3145740
  4615  30000C  0F                 	db	15
  4616                           
  4617                           ;Config register CONFIG7H @ 0x30000D
  4618                           ;	Boot Block Table Read Protection bit
  4619                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4620  30000D                     	org	3145741
  4621  30000D  40                 	db	64
  4622                           tosu	equ	0xFFF
  4623                           tosh	equ	0xFFE
  4624                           tosl	equ	0xFFD
  4625                           stkptr	equ	0xFFC
  4626                           pclatu	equ	0xFFB
  4627                           pclath	equ	0xFFA
  4628                           pcl	equ	0xFF9
  4629                           tblptru	equ	0xFF8
  4630                           tblptrh	equ	0xFF7
  4631                           tblptrl	equ	0xFF6
  4632                           tablat	equ	0xFF5
  4633                           prodh	equ	0xFF4
  4634                           prodl	equ	0xFF3
  4635                           indf0	equ	0xFEF
  4636                           postinc0	equ	0xFEE
  4637                           postdec0	equ	0xFED
  4638                           preinc0	equ	0xFEC
  4639                           plusw0	equ	0xFEB
  4640                           fsr0h	equ	0xFEA
  4641                           fsr0l	equ	0xFE9
  4642                           wreg	equ	0xFE8
  4643                           indf1	equ	0xFE7
  4644                           postinc1	equ	0xFE6
  4645                           postdec1	equ	0xFE5
  4646                           preinc1	equ	0xFE4
  4647                           plusw1	equ	0xFE3
  4648                           fsr1h	equ	0xFE2
  4649                           fsr1l	equ	0xFE1
  4650                           bsr	equ	0xFE0
  4651                           indf2	equ	0xFDF
  4652                           postinc2	equ	0xFDE
  4653                           postdec2	equ	0xFDD
  4654                           preinc2	equ	0xFDC
  4655                           plusw2	equ	0xFDB
  4656                           fsr2h	equ	0xFDA
  4657                           fsr2l	equ	0xFD9
  4658                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    26
    Data        104
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     28      40
    BANK0           128      0     104
    BANK1           256    226     226
    BANK2           256      0     104
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sacaCarta@valor	PTR int  size(2) Largest target is 104
		 -> main@valor(BANK1[104]), 

    sacaCarta@namesa	PTR int  size(2) Largest target is 104
		 -> main@namesa(BANK1[104]), 

    mesaReset@namesa	PTR int  size(2) Largest target is 104
		 -> main@namesa(BANK1[104]), 


Critical Paths under _main in COMRAM

    _main->_sacaCarta
    _sacaCarta->_lcdChar
    _timerReset->___llmod
    _lcdChar->_pushByte
    _rgbInit->_pinMode
    _rgbColor->_digitalWrite
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               230   230      0  181302
                                             24 COMRAM     4     4      0
                                              0 BANK1    226   226      0
                            ___awdiv
                            ___awmod
                         _kpDebounce
                             _kpInit
                             _kpRead
                            _lcdChar
                         _lcdCommand
                            _lcdInit
                          _mesaReset
                           _rgbColor
                            _rgbInit
                          _sacaCarta
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sacaCarta                                           10     2      8   29263
                                             14 COMRAM    10     2      8
                            ___llmod
                            _lcdChar
                         _timerReset
                          _timerWait
 ---------------------------------------------------------------------------------
 (2) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timerReset                                           4     2      2     167
                                              9 COMRAM     4     2      2
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0   27555
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1071
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) _rgbInit                                              0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _rgbColor                                             2     0      2    5450
                                              6 COMRAM     2     0      2
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _mesaReset                                            4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   60652
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   27261
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   27525
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   27153
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    5536
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    5136
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    2568
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   16705
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _soWrite                                              3     1      2   16221
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _PulseEnClock                                         0     0      0    5156
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _PulseClockData                                       0     0      0    5156
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _digitalWrite                                         6     2      4    5156
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    2880
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    2428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _kpRead
   _lcdChar
     _delayMicro
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
   _lcdCommand
     _delayMili
     _pushByte
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _mesaReset
   _rgbColor
     _digitalWrite
   _rgbInit
     _pinMode
   _sacaCarta
     ___llmod
     _lcdChar
     _timerReset
       ___llmod (ARG)
     _timerWait
   _timerInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      68       9       40.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     E2      E2       7       88.3%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      68       5       81.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1C      28       1       31.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DA      15        0.0%
DATA                 0      0     1DA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Dec 16 14:15:37 2021

         _pulseEnablePin 19E0                       l34 1248                       l27 199C  
                     l79 1BF0                       l99 14D0             ___awdiv@sign 0006  
                     _v0 0026                       _v1 0025                       _v2 0024  
                     _v3 0023                      l101 14E8                      l104 1ACE  
                    l121 1AFE                      l130 190A                      l115 1BFA  
                    l124 1A20                      l133 1BD6                      l141 1BB8  
                    l127 1B78                      l303 1710                      l242 13B2  
                    l243 13AE                      l156 1660                      l332 1BD8  
                    l341 1BF8                      l238 1082                      l318 1A5E  
                    l247 13AE                      l335 1BE6                      l272 0E34  
                    l282 1B28                      l290 1958                      l338 1B9A  
                    l285 1B52                      l279 1A9C                      l575 15AC  
                    l771 1848                      l588 17C0                      l764 1838  
           ___awmod@sign 000E                      wreg 000FE8                     l2001 1760  
                   l2011 179A                     l2003 1768                     l2005 1776  
                   l2013 17A0                     l2101 098A                     l2021 061C  
                   l2015 17B0                     l2007 178C                     l2111 0B3C  
                   l2103 099C                     l2031 065C                     l2023 062C  
                   l2017 17B8                     l2009 1794                     l2121 0BAC  
                   l2113 0B58                     l2105 0A64                     l2041 06BE  
                   l2033 0664                     l2025 063E                     l2123 0BB8  
                   l2115 0B74                     l2107 0B1C                     l2051 06FE  
                   l2043 06D0                     l2035 0674                     l2027 064A  
                   l2125 0BC2                     l2117 0B80                     l2109 0B28  
                   l2061 0732                     l2053 070C                     l2045 06DE  
                   l2037 0684                     l2029 0654                     l2127 0BCA  
                   l2119 0B92                     l2071 07A2                     l2063 0744  
                   l2055 0714                     l2047 06F0                     l2039 0688  
                   l2129 0BD2                     l2081 0840                     l2073 07D2  
                   l2065 0760                     l2057 071A                     l2049 06F8  
                   l2091 08DC                     l2083 086A                     l2075 0802  
                   l2067 076C                     l2059 0724                     l1701 0BE8  
                   l2093 090C                     l2085 0876                     l2069 0772  
                   l2077 081E                     l1711 0C74                     l1703 0C04  
                   l2087 087C                     l2095 0928                     l2079 082E  
                   l1801 1366                     l1641 0EA6                     l1633 0E36  
                   l1721 0CFE                     l1713 0C86                     l1705 0C16  
                   l2097 093C                     l2089 08AC                     l1803 1382  
                   l1651 0F3A                     l1643 0EC2                     l1635 0E52  
                   l1731 0D9A                     l1723 0D22                     l1715 0CAA  
                   l1707 0C36                     l1811 17C2                     l2099 0958  
                   l1661 0FCC                     l1653 0F54                     l1645 0EDC  
                   l1637 0E64                     l1901 1430                     l1733 0DC0  
                   l1725 0D48                     l1717 0CD0                     l1709 0C58  
                   l1741 1AD0                     l1821 1818                     l1813 17D8  
                   l1671 1064                     l1663 0FEC                     l1655 0F74  
                   l1647 0EFC                     l1639 0E84                     l1903 1456  
                   l1911 14A6                     l1735 0DDC                     l1727 0D64  
                   l1719 0CEC                     l1807 1A60                     l1743 1ADC  
                   l1823 1828                     l1815 17E0                     l1751 1B84  
                   l1665 100E                     l1657 0F96                     l1649 0F1E  
                   l1673 1B00                     l1913 14BE                     l1905 1474  
                   l1737 0DEE                     l1729 0D76                     l1921 1BE8  
                   l1745 1AE0                     l1809 1B56                     l1833 1962  
                   l1825 1832                     l1817 17EC                     l1753 1B88  
                   l1761 1BD8                     l1841 1088                     l1771 1266  
                   l1667 102A                     l1659 0FB2                     l1675 1B2A  
                   l1691 1944                     l1915 14C4                     l1907 149E  
                   l1739 0E12                     l1747 18B4                     l1835 197C  
                   l1827 195A                     l1931 16AA                     l1923 1662  
                   l1819 17FA                     l1763 1B9E                     l1755 1B90  
                   l1851 115A                     l1843 10BA                     l1941 14EA  
                   l1669 1044                     l1693 1954                     l1685 1924  
                   l1677 190C                     l1917 14C8                     l1837 1980  
                   l1933 16C2                     l1925 1670                     l1765 1BAC  
                   l1757 1B94                     l1749 1B7A                     l1845 10BE  
                   l1951 1516                     l1943 14EE                     l1687 193C  
                   l1679 1920                     l1919 14E0                     l1871 1ACA  
                   l1695 19E0                     l1767 1BBC                     l1935 16D6  
                   l1927 1688                     l1759 1B98                     l1863 11CC  
                   l1855 1166                     l1847 1106                     l1839 1084  
                   l1961 1544                     l1953 151E                     l1945 14FC  
                   l1793 131E                     l1785 12D6                     l1777 128E  
                   l1769 124A                     l1689 1942                     l1697 19F4  
                   l1881 1642                     l1873 15AE                     l1937 16E4  
                   l1929 169C                     l1857 11BC                     l1849 114E  
                   l1971 157E                     l1963 154C                     l1955 1522  
                   l1947 1504                     l1795 133A                     l1787 12F2  
                   l1779 12AA                     l1699 1A00                     l1883 164E  
                   l1875 160E                     l1939 16FC                     l1867 1A22  
                   l1891 1BF6                     l1981 15A4                     l1973 1580  
                   l1965 155A                     l1957 152A                     l1949 1508  
                   l1893 13B4                     l1869 1A9E                     l1885 1654  
                   l1877 161A                     l1975 1586                     l1967 1560  
                   l1959 153C                     l1991 172C                     l1895 13C4  
                   l1887 165A                     l1879 1634                     l1969 1576  
                   l1977 158C                     l1993 1730                     l1985 1712  
                   l1889 1BF2                     l1979 159C                     l1995 173E  
                   l1987 1716                     l1899 13E4                     l1997 1746  
                   l1989 1724                     l1999 1758                     u2000 17B0  
                   u2001 17AC                     u2011 0636                     u1300 0FB2  
                   u1220 0EC2                     u1204 0E76                     u2100 0840  
                   u1301 0FAE                     u1221 0EBE                     u1205 0E72  
                   u2101 083C                     u2021 0644                     u1310 0FCC  
                   u1230 0EDC                     u1214 0E96                     u2110 086A  
                   u2030 06BE                     u1311 0FC8                     u1231 0ED8  
                   u1215 0E92                     u2111 0866                     u2031 06BA  
                   u1400 0C16                     u2120 093C                     u2040 06DE  
                   u1401 0C12                     u2121 0938                     u2041 06DA  
                   u2130 0958                     u2050 06F0                     u2131 0954  
                   u2051 06EC                     u1340 102A                     u1324 0FDE  
                   u1260 0F3A                     u1244 0EEE                     u1180 0E52  
                   u2140 099C                     u2060 0732                     u1341 1026  
                   u1325 0FDA                     u1261 0F36                     u1245 0EEA  
                   u1181 0E4E                     u2141 0998                     u2061 072E  
                   u1350 1044                     u1334 0FFE                     u1270 0F54  
                   u1254 0F0E                     u1190 0E64                     u1510 0D64  
                   u1430 0C74                     u1414 0C28                     u2150 0B3C  
                   u2070 0744                     u1351 1040                     u1335 0FFA  
                   u1271 0F50                     u1255 0F0A                     u1191 0E60  
                   u1511 0D60                     u1431 0C70                     u1415 0C24  
                   u2151 0B38                     u2071 0740                     u1520 0D76  
                   u1504 0D38                     u1440 0C86                     u1424 0C48  
                   u1600 1BE6                     u2160 0B58                     u2080 0760  
                   u1521 0D72                     u1505 0D34                     u1441 0C82  
                   u1425 0C44                     u1601 1BE2                     u2161 0B54  
                   u2081 075C                     u1610 1266                     u2170 0B74  
                   u2090 082E                     u1611 1262                     u2171 0B70  
                   u2091 082A                     u1364 1056                     u1284 0F66  
                   u1380 1954                     u1365 1052                     u1285 0F62  
                   u1381 1950                     u1630 12AA                     u1374 1076  
                   u1294 0F86                     u1550 0DDC                     u1534 0D8C  
                   u1470 0CEC                     u1454 0C9C                     u1390 0C04  
                   u1710 17D8                     u1631 12A6                     u1375 1072  
                   u1295 0F82                     u1551 0DD8                     u1535 0D88  
                   u1471 0CE8                     u1455 0C98                     u1391 0C00  
                   u1711 17D4                     u1704 1398                     u1624 1278  
                   u1800 1430                     u1560 0DEE                     u1544 0DB0  
                   u1480 0CFE                     u1464 0CC0                     u1720 17FA  
                   u1705 1394                     u1625 1274                     u1801 142C  
                   u1561 0DEA                     u1545 0DAC                     u1481 0CFA  
                   u1465 0CBC                     u1721 17F6                     u1650 12F2  
                   u1730 1818                     u1651 12EE                     u1731 1814  
                   u1900 1516                     u1644 12C0                     u1820 1474  
                   u1740 199C                     u1901 1512                     u1645 12BC  
                   u1821 1470                     u1741 1998                     u1910 153C  
                   u1670 133A                     u1814 1448                     u1574 0E04  
                   u1494 0D14                     u1590 1AFE                     u1750 1106  
                   u1911 1538                     u1671 1336                     u1815 1442  
                   u1575 0E00                     u1495 0D10                     u1591 1AFA  
                   u1751 1102                     u1920 155A                     u1664 1308  
                   u1840 14BE                     u1584 0E28                     u1760 114E  
                   u1921 1556                     u1665 1304                     u1841 14BA  
                   u1585 0E24                     u1761 114A                     u1930 1576  
                   u1690 1382                     u1850 14E0                     u1834 1490  
                   u1770 11BC                     u1931 1572                     u1691 137E  
                   u1851 14DC                     u1835 148A                     u1771 11B8  
                   u1940 159C                     u1684 1350                     u1780 13E0  
                   u1860 1670                     u1941 1598                     u1685 134C  
                   u1781 13DC                     u1861 166C                     u1950 1724  
                   u1870 16AA                     u1951 1720                     u1871 16A6  
                   u1960 173E                     u1880 16E4                     u1961 173A  
                   u1881 16E0                     u1890 14FC                     u1970 1758  
                   u1794 1400                     u1891 14F8                     u1971 1754  
                   u1795 13FA                     u1980 1776                     u1981 1772  
                   u1990 178C                     u1991 1788              main@jogando 01DA  
                   _main 061C                     _keys 0021         ??_PulseClockData 0007  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     start 0000          pushNibble@value 000C  
           ___param_bank 000000   __end_of_pulseEnablePin 1A22                    ?_main 0001  
        __end_of___awdiv 15AE          __end_of___awmod 17C2                    _T0CON 000FD5  
        ___awdiv@divisor 0003          __end_of___llmod 184A          ___awdiv@counter 0005  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84          __end_of_charKey 061B                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_lcdChar 1BBA          __end_of_lcdInit 1662  
        __end_of_rgbInit 1A60          __end_of_pinMode 0E36                    _valor 0601  
           main@terminou 01D4          __end_of_soWrite 195A                    tablat 000FF5  
                  plusw1 000FE3                    plusw2 000FDB                    status 000FD8  
           pushNibble@rs 000A     __end_of_digitalWrite 1084          __initialization 199E  
        ?_pulseEnablePin 0001             __end_of_main 0BE8           sacaCarta@valor 000F  
                 ??_main 0019            __activetblptr 000002     __size_of_digitalRead 016A  
                 _ADCON1 000FC1         ___llmod@dividend 0001         ___awdiv@dividend 0001  
            rgbColor@led 0007                   _INTCON 000FF2                ??___awdiv 0005  
              ??___awmod 000D                ??___llmod 0009                   _kpInit 1A9E  
                 _kpRead 1BE8         __end_of_rgbColor 1712                   clear_0 19C4  
                 clear_1 19D0                   _soInit 1A60         ___awdiv@quotient 0007  
        ___awmod@divisor 000B                ??_lcdChar 000E                   isa$std 000001  
              ??_lcdInit 000F          ___awmod@counter 000D                ??_rgbInit 0007  
              ??_pinMode 0005             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_soWrite 0009  
       __end_of_pushByte 190C               __accesstop 0080  __end_of__initialization 19D6  
          ___rparam_used 000001            pushByte@value 000D              pinMode@type 0003  
         __pcstackCOMRAM 0001             __pidataBANK0 184A            __end_of_valor 0611  
     __size_of_delayMili 0030          sacaCarta@namesa 0011               __pbssBANK2 0200  
     __size_of_sacaCarta 01C6    __size_of_digitalWrite 024E       __size_of_mesaReset 0044  
             _delayMicro 1BFA               _lcdCommand 1BBA                  ?_kpInit 0001  
                ?_kpRead 0001                  ?_soInit 0001               _kpDebounce 13B4  
     __size_of_timerInit 0008       __size_of_timerWait 0010             _digitalWrite 0E36  
      __end_of_delayMili 1B00                ?_rgbColor 0007         ??_pulseEnablePin 0007  
                __Hparam 0000                  __Lparam 0000          kpDebounce@tempo 0028  
                ___awdiv 14EA                  ___awmod 1712                ?_pushByte 000A  
                ___llmod 17C2             __psmallconst 0600          __size_of_kpInit 0032  
        __size_of_kpRead 000A                  _charKey 0611                  __pcinit 199E  
                _lcdChar 1B9C                  __ramtop 0600          __size_of_soInit 003E  
      __end_of_sacaCarta 124A                  _lcdInit 15AE                  __ptext0 061C  
                __ptext1 1BF2                  __ptext2 1084                  __ptext3 1BD8  
                __ptext4 1B7A                  __ptext5 1B9C                  __ptext6 17C2  
                __ptext7 1A22                  __ptext8 1662                  __ptext9 195A  
                _display 0027        __end_of_mesaReset 199E                  _rgbInit 1A22  
                _pinMode 0BE8         ___awmod@dividend 0009               delayMili@a 0001  
             delayMili@i 0004                  _soWrite 190C                  main@max 01DC  
   end_of_initialization 19D6            ?_PulseEnClock 0001               ??_rgbColor 0009  
          __Lmediumconst 0000           digitalRead@pin 0001              ?_delayMicro 0001  
      __end_of_timerInit 1BFA        __end_of_timerWait 1BE8                  postdec1 000FE5  
                postdec2 000FDD              ?_lcdCommand 0001                  postinc0 000FEE  
                postinc2 000FDE               ??_pushByte 000C  __size_of_PulseClockData 002A  
          ??_digitalRead 0003               _timerReset 1B7A              ?_kpDebounce 0001  
             _pushNibble 1B54           ??_PulseEnClock 0007               main@aposta 01E0  
             main@namesa 0168           __end_of_kpInit 1AD0           __end_of_kpRead 1BF2  
         __end_of_soInit 1A9E      __size_of_delayMicro 0002      start_initialization 199E  
    __end_of_digitalRead 13B4            sacaCarta@cont 0013      __size_of_lcdCommand 001E  
    __size_of_kpDebounce 0136          ___llmod@divisor 0005               mesaReset@i 0003  
        ___llmod@counter 0009        kpDebounce@oldRead 001D        kpDebounce@newRead 001F  
               ??_kpInit 0007                 ??_kpRead 0003              __pdataBANK0 0080  
            ?_timerReset 000A                 ??_soInit 0007              __pbssCOMRAM 001D  
          __pcstackBANK1 0100              ?_pushNibble 000A               pinMode@pin 0001  
      __size_of_rgbColor 00B0                _delayMili 1AD0                 ?___awdiv 0001  
               ?___awmod 0009                 ?___llmod 0001           _PulseClockData 1B2A  
   __end_of_PulseEnClock 1B2A              _digitalRead 124A                 ?_lcdChar 0001  
      __size_of_pushByte 005A                 ?_lcdInit 0001              __smallconst 0600  
               ?_rgbInit 0001                 ?_pinMode 0001                _sacaCarta 1084  
               ?_soWrite 0007                _mesaReset 195A      __size_of_timerReset 0022  
           ??_delayMicro 0003               ?_delayMili 0001   __end_of_PulseClockData 1B54  
    __size_of_pushNibble 0026             ??_lcdCommand 000E                main@F2395 0080  
              main@F2397 0200                _timerInit 1BF2                _timerWait 1BD8  
           ??_kpDebounce 000A          lcdCommand@value 000E                main@tecla 01D6  
             ?_sacaCarta 000F                main@valor 0100       __end_of_delayMicro 1BFC  
             ?_mesaReset 0001         timerReset@ciclos 000C                copy_data0 19B2  
     __end_of_lcdCommand 1BD8               pushByte@rs 000A             lcdChar@value 000E  
     __end_of_kpDebounce 14EA                 __Hrparam 0000                 __Lrparam 0000  
        ?_PulseClockData 0001               ?_timerInit 0001               ?_timerWait 0001  
       __size_of___awdiv 00C4         __size_of___awmod 00B0  __size_of_pulseEnablePin 0042  
       __size_of___llmod 0088         __size_of_lcdChar 001E         __size_of_lcdInit 00B4  
       __size_of_rgbInit 003E         __size_of_pinMode 024E                 __ptext10 15AE  
               __ptext11 1B54                 __ptext20 0BE8                 __ptext12 1BBA  
               __ptext21 13B4                 __ptext13 18B2                 __ptext22 190C  
               __ptext14 19E0                 __ptext23 1B00                 __ptext15 1BFA  
               __ptext24 1B2A                 __ptext16 1AD0                 __ptext25 0E36  
               __ptext17 1BE8                 __ptext26 124A                 __ptext18 1A9E  
               __ptext27 1712                 __ptext19 1A60                 __ptext28 14EA  
       __size_of_soWrite 004E                 _rgbColor 1662          mesaReset@namesa 0001  
          __size_of_main 05CC              ??_delayMili 0003    __size_of_PulseEnClock 002A  
            delayMicro@a 0001                 isa$xinst 000000             soWrite@value 0007  
               _pushByte 18B2             ??_timerReset 000C                 main@cont 01D0  
               main@soma 01DE          timerReset@tempo 000A              ??_sacaCarta 0017  
           ??_pushNibble 000C            ?_digitalWrite 0001              ??_mesaReset 0003  
           _PulseEnClock 1B00        digitalWrite@value 0003       __end_of_timerReset 1B9C  
               soWrite@i 0009              ??_timerInit 0001              ??_timerWait 0001  
     __end_of_pushNibble 1B7A             ?_digitalRead 0001              kpDebounce@i 000D  
         ??_digitalWrite 0005          digitalWrite@pin 0001  
