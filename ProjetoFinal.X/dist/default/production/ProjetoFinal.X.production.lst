

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Dec 16 14:39:39 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4520 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataBANK0
    84  00186E                     __pidataBANK0:
    85                           	callstack 0
    86                           
    87                           ;initializer for main@F2395
    88  00186E  0001               	dw	1
    89  001870  0001               	dw	1
    90  001872  0001               	dw	1
    91  001874  0001               	dw	1
    92  001876  0002               	dw	2
    93  001878  0002               	dw	2
    94  00187A  0002               	dw	2
    95  00187C  0002               	dw	2
    96  00187E  0003               	dw	3
    97  001880  0003               	dw	3
    98  001882  0003               	dw	3
    99  001884  0003               	dw	3
   100  001886  0004               	dw	4
   101  001888  0004               	dw	4
   102  00188A  0004               	dw	4
   103  00188C  0004               	dw	4
   104  00188E  0005               	dw	5
   105  001890  0005               	dw	5
   106  001892  0005               	dw	5
   107  001894  0005               	dw	5
   108  001896  0006               	dw	6
   109  001898  0006               	dw	6
   110  00189A  0006               	dw	6
   111  00189C  0006               	dw	6
   112  00189E  0007               	dw	7
   113  0018A0  0007               	dw	7
   114  0018A2  0007               	dw	7
   115  0018A4  0007               	dw	7
   116  0018A6  0008               	dw	8
   117  0018A8  0008               	dw	8
   118  0018AA  0008               	dw	8
   119  0018AC  0008               	dw	8
   120  0018AE  0009               	dw	9
   121  0018B0  0009               	dw	9
   122  0018B2  0009               	dw	9
   123  0018B4  0009               	dw	9
   124  0018B6  000A               	dw	10
   125  0018B8  000A               	dw	10
   126  0018BA  000A               	dw	10
   127  0018BC  000A               	dw	10
   128  0018BE  000B               	dw	11
   129  0018C0  000B               	dw	11
   130  0018C2  000B               	dw	11
   131  0018C4  000B               	dw	11
   132  0018C6  000C               	dw	12
   133  0018C8  000C               	dw	12
   134  0018CA  000C               	dw	12
   135  0018CC  000C               	dw	12
   136  0018CE  000D               	dw	13
   137  0018D0  000D               	dw	13
   138  0018D2  000D               	dw	13
   139  0018D4  000D               	dw	13
   140                           
   141                           	psect	smallconst
   142  000600                     __psmallconst:
   143                           	callstack 0
   144  000600  00                 	db	0
   145  000601                     _valor:
   146                           	callstack 0
   147  000601  3F                 	db	63
   148  000602  06                 	db	6
   149  000603  5B                 	db	91
   150  000604  4F                 	db	79
   151  000605  66                 	db	102
   152  000606  6D                 	db	109
   153  000607  7D                 	db	125
   154  000608  07                 	db	7
   155  000609  7F                 	db	127
   156  00060A  6F                 	db	111
   157  00060B  77                 	db	119
   158  00060C  7C                 	db	124
   159  00060D  39                 	db	57
   160  00060E  5E                 	db	94
   161  00060F  79                 	db	121
   162  000610  71                 	db	113
   163  000611                     __end_of_valor:
   164                           	callstack 0
   165  000611  55                 	db	85
   166  000612  4C                 	db	76
   167  000613  44                 	db	68
   168  000614  52                 	db	82
   169  000615  53                 	db	83
   170  000616  58                 	db	88
   171  000617  41                 	db	65
   172  000618  42                 	db	66
   173  000619  59                 	db	89
   174  00061A  73                 	db	115
   175  00061B                     __end_of_charKey:
   176                           	callstack 0
   177  0000                     _T0CON	set	4053
   178  0000                     _TMR0L	set	4054
   179  0000                     _TMR0H	set	4055
   180  0000                     _INTCON	set	4082
   181  0000                     _TRISE	set	3990
   182  0000                     _TRISD	set	3989
   183  0000                     _TRISC	set	3988
   184  0000                     _TRISB	set	3987
   185  0000                     _TRISA	set	3986
   186  0000                     _PORTE	set	3972
   187  0000                     _PORTD	set	3971
   188  0000                     _PORTC	set	3970
   189  0000                     _PORTB	set	3969
   190  0000                     _PORTA	set	3968
   191  0000                     _ADCON1	set	4033
   192  00061B  00                 	db	0	; dummy byte at the end
   193  0000                     
   194                           ; #config settings
   195                           
   196                           	psect	cinit
   197  0019C2                     __pcinit:
   198                           	callstack 0
   199  0019C2                     start_initialization:
   200                           	callstack 0
   201  0019C2                     __initialization:
   202                           	callstack 0
   203                           
   204                           ; Initialize objects allocated to BANK0 (104 bytes)
   205                           ; load TBLPTR registers with __pidataBANK0
   206  0019C2  0E6E               	movlw	low __pidataBANK0
   207  0019C4  6EF6               	movwf	tblptrl,c
   208  0019C6  0E18               	movlw	high __pidataBANK0
   209  0019C8  6EF7               	movwf	tblptrh,c
   210  0019CA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   211  0019CC  6EF8               	movwf	tblptru,c
   212  0019CE  EE00  F080         	lfsr	0,__pdataBANK0
   213  0019D2  EE10 F068          	lfsr	1,104
   214  0019D6                     copy_data0:
   215  0019D6  0009               	tblrd		*+
   216  0019D8  CFF5 FFEE          	movff	tablat,postinc0
   217  0019DC  50E5               	movf	postdec1,w,c
   218  0019DE  50E1               	movf	fsr1l,w,c
   219  0019E0  E1FA               	bnz	copy_data0
   220                           
   221                           ; Clear objects allocated to BANK2 (104 bytes)
   222  0019E2  EE02  F000         	lfsr	0,__pbssBANK2
   223  0019E6  0E68               	movlw	104
   224  0019E8                     clear_0:
   225  0019E8  6AEE               	clrf	postinc0,c
   226  0019EA  06E8               	decf	wreg,f,c
   227  0019EC  E1FD               	bnz	clear_0
   228                           
   229                           ; Clear objects allocated to COMRAM (12 bytes)
   230  0019EE  EE00  F01D         	lfsr	0,__pbssCOMRAM
   231  0019F2  0E0C               	movlw	12
   232  0019F4                     clear_1:
   233  0019F4  6AEE               	clrf	postinc0,c
   234  0019F6  06E8               	decf	wreg,f,c
   235  0019F8  E1FD               	bnz	clear_1
   236  0019FA                     end_of_initialization:
   237                           	callstack 0
   238  0019FA                     __end_of__initialization:
   239                           	callstack 0
   240  0019FA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   241  0019FC  6EF8               	movwf	tblptru,c
   242  0019FE  0100               	movlb	0
   243  001A00  EF0E  F003         	goto	_main	;jump to C main() function
   244                           
   245                           	psect	bssCOMRAM
   246  00001D                     __pbssCOMRAM:
   247                           	callstack 0
   248  00001D                     kpDebounce@oldRead:
   249                           	callstack 0
   250  00001D                     	ds	2
   251  00001F                     kpDebounce@newRead:
   252                           	callstack 0
   253  00001F                     	ds	2
   254  000021                     _keys:
   255                           	callstack 0
   256  000021                     	ds	2
   257  000023                     _v3:
   258                           	callstack 0
   259  000023                     	ds	1
   260  000024                     _v2:
   261                           	callstack 0
   262  000024                     	ds	1
   263  000025                     _v1:
   264                           	callstack 0
   265  000025                     	ds	1
   266  000026                     _v0:
   267                           	callstack 0
   268  000026                     	ds	1
   269  000027                     _display:
   270                           	callstack 0
   271  000027                     	ds	1
   272  000028                     kpDebounce@tempo:
   273                           	callstack 0
   274  000028                     	ds	1
   275                           
   276                           	psect	dataBANK0
   277  000080                     __pdataBANK0:
   278                           	callstack 0
   279  000080                     main@F2395:
   280                           	callstack 0
   281  000080                     	ds	104
   282                           
   283                           	psect	bssBANK2
   284  000200                     __pbssBANK2:
   285                           	callstack 0
   286  000200                     	ds	104
   287                           
   288                           	psect	cstackBANK1
   289  000100                     __pcstackBANK1:
   290                           	callstack 0
   291  000100                     main@valor:
   292                           	callstack 0
   293                           
   294                           ; 104 bytes @ 0x0
   295  000100                     	ds	104
   296  000168                     main@namesa:
   297                           	callstack 0
   298                           
   299                           ; 104 bytes @ 0x68
   300  000168                     	ds	104
   301  0001D0                     main@cont:
   302                           	callstack 0
   303                           
   304                           ; 4 bytes @ 0xD0
   305  0001D0                     	ds	4
   306  0001D4                     main@terminou:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0xD4
   310  0001D4                     	ds	2
   311  0001D6                     main@tecla:
   312                           	callstack 0
   313                           
   314                           ; 4 bytes @ 0xD6
   315  0001D6                     	ds	4
   316  0001DA                     main@jogando:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0xDA
   320  0001DA                     	ds	2
   321  0001DC                     main@max:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0xDC
   325  0001DC                     	ds	2
   326  0001DE                     main@soma:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0xDE
   330  0001DE                     	ds	2
   331  0001E0                     main@aposta:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0xE0
   335  0001E0                     	ds	2
   336                           
   337                           	psect	cstackCOMRAM
   338  000001                     __pcstackCOMRAM:
   339                           	callstack 0
   340  000001                     ?_kpRead:
   341                           	callstack 0
   342  000001                     ?_digitalRead:
   343                           	callstack 0
   344  000001                     ?___awdiv:
   345                           	callstack 0
   346  000001                     ?___llmod:
   347                           	callstack 0
   348  000001                     mesaReset@namesa:
   349                           	callstack 0
   350  000001                     delayMicro@a:
   351                           	callstack 0
   352  000001                     delayMili@a:
   353                           	callstack 0
   354  000001                     digitalWrite@pin:
   355                           	callstack 0
   356  000001                     digitalRead@pin:
   357                           	callstack 0
   358  000001                     pinMode@pin:
   359                           	callstack 0
   360  000001                     ___awdiv@dividend:
   361                           	callstack 0
   362  000001                     ___llmod@dividend:
   363                           	callstack 0
   364                           
   365                           ; 4 bytes @ 0x0
   366  000001                     	ds	2
   367  000003                     ??_digitalRead:
   368  000003                     ??_delayMili:
   369  000003                     mesaReset@i:
   370                           	callstack 0
   371  000003                     digitalWrite@value:
   372                           	callstack 0
   373  000003                     pinMode@type:
   374                           	callstack 0
   375  000003                     ___awdiv@divisor:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x2
   379  000003                     	ds	1
   380  000004                     delayMili@i:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x3
   384  000004                     	ds	1
   385  000005                     ??_pinMode:
   386  000005                     ??_digitalWrite:
   387  000005                     ___awdiv@counter:
   388                           	callstack 0
   389  000005                     ___llmod@divisor:
   390                           	callstack 0
   391                           
   392                           ; 4 bytes @ 0x4
   393  000005                     	ds	1
   394  000006                     ___awdiv@sign:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x5
   398  000006                     	ds	1
   399  000007                     soWrite@value:
   400                           	callstack 0
   401  000007                     rgbColor@led:
   402                           	callstack 0
   403  000007                     ___awdiv@quotient:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x6
   407  000007                     	ds	2
   408  000009                     ?___wmul:
   409                           	callstack 0
   410  000009                     ?___awmod:
   411                           	callstack 0
   412  000009                     soWrite@i:
   413                           	callstack 0
   414  000009                     ___llmod@counter:
   415                           	callstack 0
   416  000009                     ___wmul@multiplier:
   417                           	callstack 0
   418  000009                     ___awmod@dividend:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x8
   422  000009                     	ds	1
   423  00000A                     ??_kpDebounce:
   424  00000A                     pushNibble@rs:
   425                           	callstack 0
   426  00000A                     pushByte@rs:
   427                           	callstack 0
   428  00000A                     timerReset@tempo:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x9
   432  00000A                     	ds	1
   433  00000B                     ___wmul@multiplicand:
   434                           	callstack 0
   435  00000B                     ___awmod@divisor:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0xA
   439  00000B                     	ds	1
   440  00000C                     ??_pushByte:
   441  00000C                     pushNibble@value:
   442                           	callstack 0
   443  00000C                     timerReset@ciclos:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0xB
   447  00000C                     	ds	1
   448  00000D                     pushByte@value:
   449                           	callstack 0
   450  00000D                     ___awmod@counter:
   451                           	callstack 0
   452  00000D                     kpDebounce@i:
   453                           	callstack 0
   454  00000D                     ___wmul@product:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0xC
   458  00000D                     	ds	1
   459  00000E                     lcdCommand@value:
   460                           	callstack 0
   461  00000E                     lcdChar@value:
   462                           	callstack 0
   463  00000E                     ___awmod@sign:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0xD
   467  00000E                     	ds	1
   468  00000F                     ?_sacaCarta:
   469                           	callstack 0
   470  00000F                     sacaCarta@valor:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xE
   474  00000F                     	ds	2
   475  000011                     sacaCarta@namesa:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x10
   479  000011                     	ds	2
   480  000013                     sacaCarta@cont:
   481                           	callstack 0
   482                           
   483                           ; 4 bytes @ 0x12
   484  000013                     	ds	4
   485  000017                     
   486                           ; 1 bytes @ 0x16
   487  000017                     	ds	2
   488  000019                     ??_main:
   489                           
   490                           ; 1 bytes @ 0x18
   491  000019                     	ds	4
   492                           
   493 ;;
   494 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   495 ;;
   496 ;; *************** function _main *****************
   497 ;; Defined at:
   498 ;;		line 54 in file "main.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;  namesa        104  104[BANK1 ] int [52]
   503 ;;  valor         104    0[BANK1 ] int [52]
   504 ;;  tecla           4  214[BANK1 ] unsigned long 
   505 ;;  cont            4  208[BANK1 ] unsigned long 
   506 ;;  aposta          2  224[BANK1 ] int 
   507 ;;  soma            2  222[BANK1 ] int 
   508 ;;  max             2  220[BANK1 ] int 
   509 ;;  jogando         2  218[BANK1 ] int 
   510 ;;  terminou        2  212[BANK1 ] int 
   511 ;; Return value:  Size  Location     Type
   512 ;;                  2   39[None  ] int 
   513 ;; Registers used:
   514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   520 ;;      Params:         0       0       0       0       0       0       0
   521 ;;      Locals:         0       0     226       0       0       0       0
   522 ;;      Temps:          4       0       0       0       0       0       0
   523 ;;      Totals:         4       0     226       0       0       0       0
   524 ;;Total ram usage:      230 bytes
   525 ;; Hardware stack levels required when called: 6
   526 ;; This function calls:
   527 ;;		___awdiv
   528 ;;		___awmod
   529 ;;		___wmul
   530 ;;		_kpDebounce
   531 ;;		_kpInit
   532 ;;		_kpRead
   533 ;;		_lcdChar
   534 ;;		_lcdCommand
   535 ;;		_lcdInit
   536 ;;		_mesaReset
   537 ;;		_rgbColor
   538 ;;		_rgbInit
   539 ;;		_sacaCarta
   540 ;;		_timerInit
   541 ;; This function is called by:
   542 ;;		Startup code after reset
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           	psect	text0
   547  00061C                     __ptext0:
   548                           	callstack 0
   549  00061C                     _main:
   550                           	callstack 25
   551  00061C                     
   552                           ;main.c: 55:     rgbInit();
   553  00061C  EC23  F00D         	call	_rgbInit	;wreg free
   554                           
   555                           ;main.c: 56:     kpInit();
   556  000620  EC61  F00D         	call	_kpInit	;wreg free
   557                           
   558                           ;main.c: 57:     lcdInit();
   559  000624  ECE9  F00A         	call	_lcdInit	;wreg free
   560                           
   561                           ;main.c: 58:     timerInit();
   562  000628  EC1E  F00E         	call	_timerInit	;wreg free
   563  00062C                     
   564                           ;main.c: 59:     int valor[52]={1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,
      +                          8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13};
   565  00062C  EE20  F080         	lfsr	2,main@F2395
   566  000630  EE11  F000         	lfsr	1,main@valor
   567  000634  0E67               	movlw	103
   568  000636                     u2011:
   569  000636  CFDB FFE3          	movff	plusw2,plusw1
   570  00063A  06E8               	decf	wreg,f,c
   571  00063C  E2FC               	bc	u2011
   572  00063E                     
   573                           ;main.c: 60:     int namesa[52]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
      +                          ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
   574  00063E  EE21  F068         	lfsr	2,main@namesa
   575  000642  0E67               	movlw	103
   576  000644                     u2021:
   577  000644  6ADE               	clrf	postinc2,c
   578  000646  06E8               	decf	wreg,f,c
   579  000648  E2FD               	bc	u2021
   580  00064A                     
   581                           ;main.c: 61:     int soma=0;
   582  00064A  0E00               	movlw	0
   583  00064C  0101               	movlb	1	; () banked
   584  00064E  6FDF               	movwf	(main@soma+1)& (0+255),b
   585  000650  0E00               	movlw	0
   586  000652  6FDE               	movwf	main@soma& (0+255),b
   587  000654                     
   588                           ; BSR set to: 1
   589                           ;main.c: 62:     int aposta;;main.c: 63:     int max=100;
   590  000654  0E00               	movlw	0
   591  000656  6FDD               	movwf	(main@max+1)& (0+255),b
   592  000658  0E64               	movlw	100
   593  00065A  6FDC               	movwf	main@max& (0+255),b
   594  00065C                     
   595                           ; BSR set to: 1
   596                           ;main.c: 64:     int jogando;;main.c: 65:     int terminou=0;
   597  00065C  0E00               	movlw	0
   598  00065E  6FD5               	movwf	(main@terminou+1)& (0+255),b
   599  000660  0E00               	movlw	0
   600  000662  6FD4               	movwf	main@terminou& (0+255),b
   601  000664                     
   602                           ; BSR set to: 1
   603                           ;main.c: 66:     unsigned long int tecla=16;
   604  000664  0E10               	movlw	16
   605  000666  6FD6               	movwf	main@tecla& (0+255),b
   606  000668  0E00               	movlw	0
   607  00066A  6FD7               	movwf	(main@tecla+1)& (0+255),b
   608  00066C  0E00               	movlw	0
   609  00066E  6FD8               	movwf	(main@tecla+2)& (0+255),b
   610  000670  0E00               	movlw	0
   611  000672  6FD9               	movwf	(main@tecla+3)& (0+255),b
   612  000674                     
   613                           ; BSR set to: 1
   614                           ;main.c: 67:     unsigned long int cont=0;
   615  000674  0E00               	movlw	0
   616  000676  6FD0               	movwf	main@cont& (0+255),b
   617  000678  0E00               	movlw	0
   618  00067A  6FD1               	movwf	(main@cont+1)& (0+255),b
   619  00067C  0E00               	movlw	0
   620  00067E  6FD2               	movwf	(main@cont+2)& (0+255),b
   621  000680  0E00               	movlw	0
   622  000682  6FD3               	movwf	(main@cont+3)& (0+255),b
   623  000684                     l2049:
   624                           
   625                           ; BSR set to: 1
   626                           ;main.c: 69:         kpDebounce();
   627  000684  ECEC  F009         	call	_kpDebounce	;wreg free
   628  000688                     
   629                           ;main.c: 70:         if(kpRead()!=tecla){
   630  000688  EC19  F00E         	call	_kpRead	;wreg free
   631  00068C  5001               	movf	?_kpRead^0,w,c
   632  00068E  6E19               	movwf	??_main^0,c
   633  000690  5002               	movf	(?_kpRead+1)^0,w,c
   634  000692  6E1A               	movwf	(??_main+1)^0,c
   635  000694  6A1B               	clrf	(??_main+2)^0,c
   636  000696  6A1C               	clrf	(??_main+3)^0,c
   637  000698  0101               	movlb	1	; () banked
   638  00069A  51D6               	movf	main@tecla& (0+255),w,b
   639  00069C  1819               	xorwf	??_main^0,w,c
   640  00069E  E10F               	bnz	u2030
   641  0006A0  51D7               	movf	(main@tecla+1)& (0+255),w,b
   642  0006A2  181A               	xorwf	(??_main+1)^0,w,c
   643  0006A4  E10C               	bnz	u2030
   644  0006A6  51D8               	movf	(main@tecla+2)& (0+255),w,b
   645  0006A8  181B               	xorwf	(??_main+2)^0,w,c
   646  0006AA  E109               	bnz	u2030
   647  0006AC  51D9               	movf	(main@tecla+3)& (0+255),w,b
   648  0006AE  181C               	xorwf	(??_main+3)^0,w,c
   649  0006B0  B4D8               	btfsc	status,2,c
   650  0006B2  EF5D  F003         	goto	u2031
   651  0006B6  EF5F  F003         	goto	u2030
   652  0006BA                     u2031:
   653  0006BA  EFC5  F004         	goto	l2113
   654  0006BE                     u2030:
   655  0006BE                     
   656                           ; BSR set to: 1
   657                           ;main.c: 71:             tecla=kpRead();
   658  0006BE  EC19  F00E         	call	_kpRead	;wreg free
   659  0006C2  C001  F1D6         	movff	?_kpRead,main@tecla
   660  0006C6  C002  F1D7         	movff	?_kpRead+1,main@tecla+1
   661  0006CA  0101               	movlb	1	; () banked
   662  0006CC  6BD8               	clrf	(main@tecla+2)& (0+255),b
   663  0006CE  6BD9               	clrf	(main@tecla+3)& (0+255),b
   664  0006D0                     
   665                           ; BSR set to: 1
   666                           ;main.c: 72:             if(((tecla) & (1<<(0)))){if(jogando){jogando=0;lcdCommand(0x01)
      +                          ;terminou=1;}else{jogando=1;lcdCommand(0x01);terminou=0;}}
   667  0006D0  A1D6               	btfss	main@tecla& (0+255),0,b
   668  0006D2  EF6D  F003         	goto	u2041
   669  0006D6  EF6F  F003         	goto	u2040
   670  0006DA                     u2041:
   671  0006DA  EF92  F003         	goto	l2071
   672  0006DE                     u2040:
   673  0006DE                     
   674                           ; BSR set to: 1
   675  0006DE  51DA               	movf	main@jogando& (0+255),w,b
   676  0006E0  11DB               	iorwf	(main@jogando+1)& (0+255),w,b
   677  0006E2  B4D8               	btfsc	status,2,c
   678  0006E4  EF76  F003         	goto	u2051
   679  0006E8  EF78  F003         	goto	u2050
   680  0006EC                     u2051:
   681  0006EC  EF86  F003         	goto	l2065
   682  0006F0                     u2050:
   683  0006F0                     
   684                           ; BSR set to: 1
   685  0006F0  0E00               	movlw	0
   686  0006F2  6FDB               	movwf	(main@jogando+1)& (0+255),b
   687  0006F4  0E00               	movlw	0
   688  0006F6  6FDA               	movwf	main@jogando& (0+255),b
   689  0006F8                     
   690                           ; BSR set to: 1
   691  0006F8  0E01               	movlw	1
   692  0006FA  EC02  F00E         	call	_lcdCommand
   693  0006FE  0E00               	movlw	0
   694  000700  0101               	movlb	1	; () banked
   695  000702  6FD5               	movwf	(main@terminou+1)& (0+255),b
   696  000704  0E01               	movlw	1
   697  000706  6FD4               	movwf	main@terminou& (0+255),b
   698  000708  EF92  F003         	goto	l2071
   699  00070C                     l2065:
   700                           
   701                           ; BSR set to: 1
   702  00070C  0E00               	movlw	0
   703  00070E  6FDB               	movwf	(main@jogando+1)& (0+255),b
   704  000710  0E01               	movlw	1
   705  000712  6FDA               	movwf	main@jogando& (0+255),b
   706  000714                     
   707                           ; BSR set to: 1
   708  000714  0E01               	movlw	1
   709  000716  EC02  F00E         	call	_lcdCommand
   710  00071A  0E00               	movlw	0
   711  00071C  0101               	movlb	1	; () banked
   712  00071E  6FD5               	movwf	(main@terminou+1)& (0+255),b
   713  000720  0E00               	movlw	0
   714  000722  6FD4               	movwf	main@terminou& (0+255),b
   715  000724                     l2071:
   716                           
   717                           ; BSR set to: 1
   718                           ;main.c: 73:             if(((tecla) & (1<<(3)))){if((!jogando)&&(aposta>10)){aposta=apo
      +                          sta-10;lcdCommand(0x01);lcdChar((aposta / 1000) % 10 + 48);lcdChar((aposta / 100) % 10 +
      +                           48);lcdChar((aposta / 10) % 10 + 48);lcdChar(aposta % 10 + 48);}}
   719  000724  A7D6               	btfss	main@tecla& (0+255),3,b
   720  000726  EF97  F003         	goto	u2061
   721  00072A  EF99  F003         	goto	u2060
   722  00072E                     u2061:
   723  00072E  EF0F  F004         	goto	l2089
   724  000732                     u2060:
   725  000732                     
   726                           ; BSR set to: 1
   727  000732  51DA               	movf	main@jogando& (0+255),w,b
   728  000734  11DB               	iorwf	(main@jogando+1)& (0+255),w,b
   729  000736  A4D8               	btfss	status,2,c
   730  000738  EFA0  F003         	goto	u2071
   731  00073C  EFA2  F003         	goto	u2070
   732  000740                     u2071:
   733  000740  EF0F  F004         	goto	l2089
   734  000744                     u2070:
   735  000744                     
   736                           ; BSR set to: 1
   737  000744  BFE1               	btfsc	(main@aposta+1)& (0+255),7,b
   738  000746  EFAE  F003         	goto	u2081
   739  00074A  51E1               	movf	(main@aposta+1)& (0+255),w,b
   740  00074C  E109               	bnz	u2080
   741  00074E  0E0B               	movlw	11
   742  000750  5DE0               	subwf	main@aposta& (0+255),w,b
   743  000752  A0D8               	btfss	status,0,c
   744  000754  EFAE  F003         	goto	u2081
   745  000758  EFB0  F003         	goto	u2080
   746  00075C                     u2081:
   747  00075C  EF0F  F004         	goto	l2089
   748  000760                     u2080:
   749  000760                     
   750                           ; BSR set to: 1
   751  000760  0EF6               	movlw	246
   752  000762  25E0               	addwf	main@aposta& (0+255),w,b
   753  000764  6FE0               	movwf	main@aposta& (0+255),b
   754  000766  0EFF               	movlw	255
   755  000768  21E1               	addwfc	(main@aposta+1)& (0+255),w,b
   756  00076A  6FE1               	movwf	(main@aposta+1)& (0+255),b
   757  00076C                     
   758                           ; BSR set to: 1
   759  00076C  0E01               	movlw	1
   760  00076E  EC02  F00E         	call	_lcdCommand
   761  000772  0E03               	movlw	3
   762  000774  6E04               	movwf	(___awdiv@divisor+1)^0,c
   763  000776  0EE8               	movlw	232
   764  000778  6E03               	movwf	___awdiv@divisor^0,c
   765  00077A  C1E0  F001         	movff	main@aposta,___awdiv@dividend
   766  00077E  C1E1  F002         	movff	main@aposta+1,___awdiv@dividend+1
   767  000782  EC87  F00A         	call	___awdiv	;wreg free
   768  000786  C001  F009         	movff	?___awdiv,___awmod@dividend
   769  00078A  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   770  00078E  0E00               	movlw	0
   771  000790  6E0C               	movwf	(___awmod@divisor+1)^0,c
   772  000792  0E0A               	movlw	10
   773  000794  6E0B               	movwf	___awmod@divisor^0,c
   774  000796  EC9B  F00B         	call	___awmod	;wreg free
   775  00079A  5009               	movf	?___awmod^0,w,c
   776  00079C  0F30               	addlw	48
   777  00079E  ECF3  F00D         	call	_lcdChar
   778  0007A2  0E00               	movlw	0
   779  0007A4  6E04               	movwf	(___awdiv@divisor+1)^0,c
   780  0007A6  0E64               	movlw	100
   781  0007A8  6E03               	movwf	___awdiv@divisor^0,c
   782  0007AA  C1E0  F001         	movff	main@aposta,___awdiv@dividend
   783  0007AE  C1E1  F002         	movff	main@aposta+1,___awdiv@dividend+1
   784  0007B2  EC87  F00A         	call	___awdiv	;wreg free
   785  0007B6  C001  F009         	movff	?___awdiv,___awmod@dividend
   786  0007BA  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   787  0007BE  0E00               	movlw	0
   788  0007C0  6E0C               	movwf	(___awmod@divisor+1)^0,c
   789  0007C2  0E0A               	movlw	10
   790  0007C4  6E0B               	movwf	___awmod@divisor^0,c
   791  0007C6  EC9B  F00B         	call	___awmod	;wreg free
   792  0007CA  5009               	movf	?___awmod^0,w,c
   793  0007CC  0F30               	addlw	48
   794  0007CE  ECF3  F00D         	call	_lcdChar
   795  0007D2  0E00               	movlw	0
   796  0007D4  6E04               	movwf	(___awdiv@divisor+1)^0,c
   797  0007D6  0E0A               	movlw	10
   798  0007D8  6E03               	movwf	___awdiv@divisor^0,c
   799  0007DA  C1E0  F001         	movff	main@aposta,___awdiv@dividend
   800  0007DE  C1E1  F002         	movff	main@aposta+1,___awdiv@dividend+1
   801  0007E2  EC87  F00A         	call	___awdiv	;wreg free
   802  0007E6  C001  F009         	movff	?___awdiv,___awmod@dividend
   803  0007EA  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   804  0007EE  0E00               	movlw	0
   805  0007F0  6E0C               	movwf	(___awmod@divisor+1)^0,c
   806  0007F2  0E0A               	movlw	10
   807  0007F4  6E0B               	movwf	___awmod@divisor^0,c
   808  0007F6  EC9B  F00B         	call	___awmod	;wreg free
   809  0007FA  5009               	movf	?___awmod^0,w,c
   810  0007FC  0F30               	addlw	48
   811  0007FE  ECF3  F00D         	call	_lcdChar
   812  000802  C1E0  F009         	movff	main@aposta,___awmod@dividend
   813  000806  C1E1  F00A         	movff	main@aposta+1,___awmod@dividend+1
   814  00080A  0E00               	movlw	0
   815  00080C  6E0C               	movwf	(___awmod@divisor+1)^0,c
   816  00080E  0E0A               	movlw	10
   817  000810  6E0B               	movwf	___awmod@divisor^0,c
   818  000812  EC9B  F00B         	call	___awmod	;wreg free
   819  000816  5009               	movf	?___awmod^0,w,c
   820  000818  0F30               	addlw	48
   821  00081A  ECF3  F00D         	call	_lcdChar
   822  00081E                     l2089:
   823                           
   824                           ;main.c: 74:             if(((tecla) & (1<<(1)))){if((!jogando)&&(aposta+10<=max)){apost
      +                          a=aposta+10;lcdCommand(0x01);lcdChar((aposta / 1000) % 10 + 48);lcdChar((aposta / 100) %
      +                           10 + 48);lcdChar((aposta / 10) % 10 + 48);lcdChar(aposta % 10 + 48);}if(jogando&&soma<2
      +                          1){soma=soma+sacaCarta(valor,namesa,cont);}}
   825  00081E  0101               	movlb	1	; () banked
   826  000820  A3D6               	btfss	main@tecla& (0+255),1,b
   827  000822  EF15  F004         	goto	u2091
   828  000826  EF17  F004         	goto	u2090
   829  00082A                     u2091:
   830  00082A  EFC5  F004         	goto	l2113
   831  00082E                     u2090:
   832  00082E                     
   833                           ; BSR set to: 1
   834  00082E  51DA               	movf	main@jogando& (0+255),w,b
   835  000830  11DB               	iorwf	(main@jogando+1)& (0+255),w,b
   836  000832  A4D8               	btfss	status,2,c
   837  000834  EF1E  F004         	goto	u2101
   838  000838  EF20  F004         	goto	u2100
   839  00083C                     u2101:
   840  00083C  EF94  F004         	goto	l2107
   841  000840                     u2100:
   842  000840                     
   843                           ; BSR set to: 1
   844  000840  0E0A               	movlw	10
   845  000842  25E0               	addwf	main@aposta& (0+255),w,b
   846  000844  6E19               	movwf	??_main^0,c
   847  000846  0E00               	movlw	0
   848  000848  21E1               	addwfc	(main@aposta+1)& (0+255),w,b
   849  00084A  6E1A               	movwf	(??_main+1)^0,c
   850  00084C  5019               	movf	??_main^0,w,c
   851  00084E  5DDC               	subwf	main@max& (0+255),w,b
   852  000850  51DD               	movf	(main@max+1)& (0+255),w,b
   853  000852  0A80               	xorlw	128
   854  000854  6E1B               	movwf	(??_main+2)^0,c
   855  000856  501A               	movf	(??_main+1)^0,w,c
   856  000858  0A80               	xorlw	128
   857  00085A  581B               	subwfb	(??_main+2)^0,w,c
   858  00085C  A0D8               	btfss	status,0,c
   859  00085E  EF33  F004         	goto	u2111
   860  000862  EF35  F004         	goto	u2110
   861  000866                     u2111:
   862  000866  EF94  F004         	goto	l2107
   863  00086A                     u2110:
   864  00086A                     
   865                           ; BSR set to: 1
   866  00086A  0E0A               	movlw	10
   867  00086C  25E0               	addwf	main@aposta& (0+255),w,b
   868  00086E  6FE0               	movwf	main@aposta& (0+255),b
   869  000870  0E00               	movlw	0
   870  000872  21E1               	addwfc	(main@aposta+1)& (0+255),w,b
   871  000874  6FE1               	movwf	(main@aposta+1)& (0+255),b
   872  000876                     
   873                           ; BSR set to: 1
   874  000876  0E01               	movlw	1
   875  000878  EC02  F00E         	call	_lcdCommand
   876  00087C  0E03               	movlw	3
   877  00087E  6E04               	movwf	(___awdiv@divisor+1)^0,c
   878  000880  0EE8               	movlw	232
   879  000882  6E03               	movwf	___awdiv@divisor^0,c
   880  000884  C1E0  F001         	movff	main@aposta,___awdiv@dividend
   881  000888  C1E1  F002         	movff	main@aposta+1,___awdiv@dividend+1
   882  00088C  EC87  F00A         	call	___awdiv	;wreg free
   883  000890  C001  F009         	movff	?___awdiv,___awmod@dividend
   884  000894  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   885  000898  0E00               	movlw	0
   886  00089A  6E0C               	movwf	(___awmod@divisor+1)^0,c
   887  00089C  0E0A               	movlw	10
   888  00089E  6E0B               	movwf	___awmod@divisor^0,c
   889  0008A0  EC9B  F00B         	call	___awmod	;wreg free
   890  0008A4  5009               	movf	?___awmod^0,w,c
   891  0008A6  0F30               	addlw	48
   892  0008A8  ECF3  F00D         	call	_lcdChar
   893  0008AC  0E00               	movlw	0
   894  0008AE  6E04               	movwf	(___awdiv@divisor+1)^0,c
   895  0008B0  0E64               	movlw	100
   896  0008B2  6E03               	movwf	___awdiv@divisor^0,c
   897  0008B4  C1E0  F001         	movff	main@aposta,___awdiv@dividend
   898  0008B8  C1E1  F002         	movff	main@aposta+1,___awdiv@dividend+1
   899  0008BC  EC87  F00A         	call	___awdiv	;wreg free
   900  0008C0  C001  F009         	movff	?___awdiv,___awmod@dividend
   901  0008C4  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   902  0008C8  0E00               	movlw	0
   903  0008CA  6E0C               	movwf	(___awmod@divisor+1)^0,c
   904  0008CC  0E0A               	movlw	10
   905  0008CE  6E0B               	movwf	___awmod@divisor^0,c
   906  0008D0  EC9B  F00B         	call	___awmod	;wreg free
   907  0008D4  5009               	movf	?___awmod^0,w,c
   908  0008D6  0F30               	addlw	48
   909  0008D8  ECF3  F00D         	call	_lcdChar
   910  0008DC  0E00               	movlw	0
   911  0008DE  6E04               	movwf	(___awdiv@divisor+1)^0,c
   912  0008E0  0E0A               	movlw	10
   913  0008E2  6E03               	movwf	___awdiv@divisor^0,c
   914  0008E4  C1E0  F001         	movff	main@aposta,___awdiv@dividend
   915  0008E8  C1E1  F002         	movff	main@aposta+1,___awdiv@dividend+1
   916  0008EC  EC87  F00A         	call	___awdiv	;wreg free
   917  0008F0  C001  F009         	movff	?___awdiv,___awmod@dividend
   918  0008F4  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   919  0008F8  0E00               	movlw	0
   920  0008FA  6E0C               	movwf	(___awmod@divisor+1)^0,c
   921  0008FC  0E0A               	movlw	10
   922  0008FE  6E0B               	movwf	___awmod@divisor^0,c
   923  000900  EC9B  F00B         	call	___awmod	;wreg free
   924  000904  5009               	movf	?___awmod^0,w,c
   925  000906  0F30               	addlw	48
   926  000908  ECF3  F00D         	call	_lcdChar
   927  00090C  C1E0  F009         	movff	main@aposta,___awmod@dividend
   928  000910  C1E1  F00A         	movff	main@aposta+1,___awmod@dividend+1
   929  000914  0E00               	movlw	0
   930  000916  6E0C               	movwf	(___awmod@divisor+1)^0,c
   931  000918  0E0A               	movlw	10
   932  00091A  6E0B               	movwf	___awmod@divisor^0,c
   933  00091C  EC9B  F00B         	call	___awmod	;wreg free
   934  000920  5009               	movf	?___awmod^0,w,c
   935  000922  0F30               	addlw	48
   936  000924  ECF3  F00D         	call	_lcdChar
   937  000928                     l2107:
   938  000928  0101               	movlb	1	; () banked
   939  00092A  51DA               	movf	main@jogando& (0+255),w,b
   940  00092C  11DB               	iorwf	(main@jogando+1)& (0+255),w,b
   941  00092E  B4D8               	btfsc	status,2,c
   942  000930  EF9C  F004         	goto	u2121
   943  000934  EF9E  F004         	goto	u2120
   944  000938                     u2121:
   945  000938  EFC5  F004         	goto	l2113
   946  00093C                     u2120:
   947  00093C                     
   948                           ; BSR set to: 1
   949  00093C  BFDF               	btfsc	(main@soma+1)& (0+255),7,b
   950  00093E  EFAC  F004         	goto	u2130
   951  000942  51DF               	movf	(main@soma+1)& (0+255),w,b
   952  000944  E107               	bnz	u2131
   953  000946  0E15               	movlw	21
   954  000948  5DDE               	subwf	main@soma& (0+255),w,b
   955  00094A  B0D8               	btfsc	status,0,c
   956  00094C  EFAA  F004         	goto	u2131
   957  000950  EFAC  F004         	goto	u2130
   958  000954                     u2131:
   959  000954  EFC5  F004         	goto	l2113
   960  000958                     u2130:
   961  000958                     
   962                           ; BSR set to: 1
   963  000958  0E00               	movlw	low main@valor
   964  00095A  6E0F               	movwf	sacaCarta@valor^0,c
   965  00095C  0E01               	movlw	high main@valor
   966  00095E  6E10               	movwf	(sacaCarta@valor+1)^0,c
   967  000960  0E68               	movlw	low main@namesa
   968  000962  6E11               	movwf	sacaCarta@namesa^0,c
   969  000964  0E01               	movlw	high main@namesa
   970  000966  6E12               	movwf	(sacaCarta@namesa+1)^0,c
   971  000968  C1D0  F013         	movff	main@cont,sacaCarta@cont
   972  00096C  C1D1  F014         	movff	main@cont+1,sacaCarta@cont+1
   973  000970  C1D2  F015         	movff	main@cont+2,sacaCarta@cont+2
   974  000974  C1D3  F016         	movff	main@cont+3,sacaCarta@cont+3
   975  000978  EC54  F008         	call	_sacaCarta	;wreg free
   976  00097C  0101               	movlb	1	; () banked
   977  00097E  51DE               	movf	main@soma& (0+255),w,b
   978  000980  240F               	addwf	?_sacaCarta^0,w,c
   979  000982  6FDE               	movwf	main@soma& (0+255),b
   980  000984  51DF               	movf	(main@soma+1)& (0+255),w,b
   981  000986  2010               	addwfc	(?_sacaCarta+1)^0,w,c
   982  000988  6FDF               	movwf	(main@soma+1)& (0+255),b
   983  00098A                     l2113:
   984                           
   985                           ; BSR set to: 1
   986                           ;main.c: 77:         if(jogando){
   987  00098A  51DA               	movf	main@jogando& (0+255),w,b
   988  00098C  11DB               	iorwf	(main@jogando+1)& (0+255),w,b
   989  00098E  B4D8               	btfsc	status,2,c
   990  000990  EFCC  F004         	goto	u2141
   991  000994  EFCE  F004         	goto	u2140
   992  000998                     u2141:
   993  000998  EF32  F005         	goto	l2117
   994  00099C                     u2140:
   995  00099C                     
   996                           ; BSR set to: 1
   997                           ;main.c: 78:             rgbColor(4);
   998  00099C  0E00               	movlw	0
   999  00099E  6E08               	movwf	(rgbColor@led+1)^0,c
  1000  0009A0  0E04               	movlw	4
  1001  0009A2  6E07               	movwf	rgbColor@led^0,c
  1002  0009A4  EC43  F00B         	call	_rgbColor	;wreg free
  1003                           
  1004                           ;main.c: 79:             lcdCommand(0xC0);
  1005  0009A8  0EC0               	movlw	192
  1006  0009AA  EC02  F00E         	call	_lcdCommand
  1007                           
  1008                           ;main.c: 80:             lcdChar((soma / 1000) % 10 + 48);
  1009  0009AE  0E03               	movlw	3
  1010  0009B0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1011  0009B2  0EE8               	movlw	232
  1012  0009B4  6E03               	movwf	___awdiv@divisor^0,c
  1013  0009B6  C1DE  F001         	movff	main@soma,___awdiv@dividend
  1014  0009BA  C1DF  F002         	movff	main@soma+1,___awdiv@dividend+1
  1015  0009BE  EC87  F00A         	call	___awdiv	;wreg free
  1016  0009C2  C001  F009         	movff	?___awdiv,___awmod@dividend
  1017  0009C6  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1018  0009CA  0E00               	movlw	0
  1019  0009CC  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1020  0009CE  0E0A               	movlw	10
  1021  0009D0  6E0B               	movwf	___awmod@divisor^0,c
  1022  0009D2  EC9B  F00B         	call	___awmod	;wreg free
  1023  0009D6  5009               	movf	?___awmod^0,w,c
  1024  0009D8  0F30               	addlw	48
  1025  0009DA  ECF3  F00D         	call	_lcdChar
  1026                           
  1027                           ;main.c: 81:             lcdChar((soma / 100) % 10 + 48);
  1028  0009DE  0E00               	movlw	0
  1029  0009E0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1030  0009E2  0E64               	movlw	100
  1031  0009E4  6E03               	movwf	___awdiv@divisor^0,c
  1032  0009E6  C1DE  F001         	movff	main@soma,___awdiv@dividend
  1033  0009EA  C1DF  F002         	movff	main@soma+1,___awdiv@dividend+1
  1034  0009EE  EC87  F00A         	call	___awdiv	;wreg free
  1035  0009F2  C001  F009         	movff	?___awdiv,___awmod@dividend
  1036  0009F6  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1037  0009FA  0E00               	movlw	0
  1038  0009FC  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1039  0009FE  0E0A               	movlw	10
  1040  000A00  6E0B               	movwf	___awmod@divisor^0,c
  1041  000A02  EC9B  F00B         	call	___awmod	;wreg free
  1042  000A06  5009               	movf	?___awmod^0,w,c
  1043  000A08  0F30               	addlw	48
  1044  000A0A  ECF3  F00D         	call	_lcdChar
  1045                           
  1046                           ;main.c: 82:             lcdChar((soma / 10) % 10 + 48);
  1047  000A0E  0E00               	movlw	0
  1048  000A10  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1049  000A12  0E0A               	movlw	10
  1050  000A14  6E03               	movwf	___awdiv@divisor^0,c
  1051  000A16  C1DE  F001         	movff	main@soma,___awdiv@dividend
  1052  000A1A  C1DF  F002         	movff	main@soma+1,___awdiv@dividend+1
  1053  000A1E  EC87  F00A         	call	___awdiv	;wreg free
  1054  000A22  C001  F009         	movff	?___awdiv,___awmod@dividend
  1055  000A26  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1056  000A2A  0E00               	movlw	0
  1057  000A2C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1058  000A2E  0E0A               	movlw	10
  1059  000A30  6E0B               	movwf	___awmod@divisor^0,c
  1060  000A32  EC9B  F00B         	call	___awmod	;wreg free
  1061  000A36  5009               	movf	?___awmod^0,w,c
  1062  000A38  0F30               	addlw	48
  1063  000A3A  ECF3  F00D         	call	_lcdChar
  1064                           
  1065                           ;main.c: 83:             lcdChar((soma / 1) % 10 + 48);
  1066  000A3E  C1DE  F009         	movff	main@soma,___awmod@dividend
  1067  000A42  C1DF  F00A         	movff	main@soma+1,___awmod@dividend+1
  1068  000A46  0E00               	movlw	0
  1069  000A48  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1070  000A4A  0E0A               	movlw	10
  1071  000A4C  6E0B               	movwf	___awmod@divisor^0,c
  1072  000A4E  EC9B  F00B         	call	___awmod	;wreg free
  1073  000A52  5009               	movf	?___awmod^0,w,c
  1074  000A54  0F30               	addlw	48
  1075  000A56  ECF3  F00D         	call	_lcdChar
  1076                           
  1077                           ;main.c: 84:             lcdCommand(0x80);
  1078  000A5A  0E80               	movlw	128
  1079  000A5C  EC02  F00E         	call	_lcdCommand
  1080                           
  1081                           ;main.c: 85:         }
  1082  000A60  EFFB  F005         	goto	l2141
  1083  000A64                     l2117:
  1084                           
  1085                           ; BSR set to: 1
  1086                           ;main.c: 87:             lcdCommand(0xC0);
  1087  000A64  0EC0               	movlw	192
  1088  000A66  EC02  F00E         	call	_lcdCommand
  1089                           
  1090                           ;main.c: 88:             lcdChar((max / 1000) % 10 + 48);
  1091  000A6A  0E03               	movlw	3
  1092  000A6C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1093  000A6E  0EE8               	movlw	232
  1094  000A70  6E03               	movwf	___awdiv@divisor^0,c
  1095  000A72  C1DC  F001         	movff	main@max,___awdiv@dividend
  1096  000A76  C1DD  F002         	movff	main@max+1,___awdiv@dividend+1
  1097  000A7A  EC87  F00A         	call	___awdiv	;wreg free
  1098  000A7E  C001  F009         	movff	?___awdiv,___awmod@dividend
  1099  000A82  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1100  000A86  0E00               	movlw	0
  1101  000A88  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1102  000A8A  0E0A               	movlw	10
  1103  000A8C  6E0B               	movwf	___awmod@divisor^0,c
  1104  000A8E  EC9B  F00B         	call	___awmod	;wreg free
  1105  000A92  5009               	movf	?___awmod^0,w,c
  1106  000A94  0F30               	addlw	48
  1107  000A96  ECF3  F00D         	call	_lcdChar
  1108                           
  1109                           ;main.c: 89:             lcdChar((max / 100) % 10 + 48);
  1110  000A9A  0E00               	movlw	0
  1111  000A9C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1112  000A9E  0E64               	movlw	100
  1113  000AA0  6E03               	movwf	___awdiv@divisor^0,c
  1114  000AA2  C1DC  F001         	movff	main@max,___awdiv@dividend
  1115  000AA6  C1DD  F002         	movff	main@max+1,___awdiv@dividend+1
  1116  000AAA  EC87  F00A         	call	___awdiv	;wreg free
  1117  000AAE  C001  F009         	movff	?___awdiv,___awmod@dividend
  1118  000AB2  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1119  000AB6  0E00               	movlw	0
  1120  000AB8  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1121  000ABA  0E0A               	movlw	10
  1122  000ABC  6E0B               	movwf	___awmod@divisor^0,c
  1123  000ABE  EC9B  F00B         	call	___awmod	;wreg free
  1124  000AC2  5009               	movf	?___awmod^0,w,c
  1125  000AC4  0F30               	addlw	48
  1126  000AC6  ECF3  F00D         	call	_lcdChar
  1127                           
  1128                           ;main.c: 90:             lcdChar((max / 10) % 10 + 48);
  1129  000ACA  0E00               	movlw	0
  1130  000ACC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1131  000ACE  0E0A               	movlw	10
  1132  000AD0  6E03               	movwf	___awdiv@divisor^0,c
  1133  000AD2  C1DC  F001         	movff	main@max,___awdiv@dividend
  1134  000AD6  C1DD  F002         	movff	main@max+1,___awdiv@dividend+1
  1135  000ADA  EC87  F00A         	call	___awdiv	;wreg free
  1136  000ADE  C001  F009         	movff	?___awdiv,___awmod@dividend
  1137  000AE2  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1138  000AE6  0E00               	movlw	0
  1139  000AE8  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1140  000AEA  0E0A               	movlw	10
  1141  000AEC  6E0B               	movwf	___awmod@divisor^0,c
  1142  000AEE  EC9B  F00B         	call	___awmod	;wreg free
  1143  000AF2  5009               	movf	?___awmod^0,w,c
  1144  000AF4  0F30               	addlw	48
  1145  000AF6  ECF3  F00D         	call	_lcdChar
  1146                           
  1147                           ;main.c: 91:             lcdChar((max / 1) % 10 + 48);
  1148  000AFA  C1DC  F009         	movff	main@max,___awmod@dividend
  1149  000AFE  C1DD  F00A         	movff	main@max+1,___awmod@dividend+1
  1150  000B02  0E00               	movlw	0
  1151  000B04  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1152  000B06  0E0A               	movlw	10
  1153  000B08  6E0B               	movwf	___awmod@divisor^0,c
  1154  000B0A  EC9B  F00B         	call	___awmod	;wreg free
  1155  000B0E  5009               	movf	?___awmod^0,w,c
  1156  000B10  0F30               	addlw	48
  1157  000B12  ECF3  F00D         	call	_lcdChar
  1158                           
  1159                           ;main.c: 92:             lcdCommand(0x80);
  1160  000B16  0E80               	movlw	128
  1161  000B18  EC02  F00E         	call	_lcdCommand
  1162  000B1C                     
  1163                           ;main.c: 93:             mesaReset(namesa);
  1164  000B1C  0E68               	movlw	low main@namesa
  1165  000B1E  6E01               	movwf	mesaReset@namesa^0,c
  1166  000B20  0E01               	movlw	high main@namesa
  1167  000B22  6E02               	movwf	(mesaReset@namesa+1)^0,c
  1168  000B24  ECBF  F00C         	call	_mesaReset	;wreg free
  1169  000B28                     
  1170                           ;main.c: 94:             if(terminou){
  1171  000B28  0101               	movlb	1	; () banked
  1172  000B2A  51D4               	movf	main@terminou& (0+255),w,b
  1173  000B2C  11D5               	iorwf	(main@terminou+1)& (0+255),w,b
  1174  000B2E  B4D8               	btfsc	status,2,c
  1175  000B30  EF9C  F005         	goto	u2151
  1176  000B34  EF9E  F005         	goto	u2150
  1177  000B38                     u2151:
  1178  000B38  EFFB  F005         	goto	l2141
  1179  000B3C                     u2150:
  1180  000B3C                     
  1181                           ; BSR set to: 1
  1182                           ;main.c: 95:                 if((soma>21)||(soma<18)){
  1183  000B3C  BFDF               	btfsc	(main@soma+1)& (0+255),7,b
  1184  000B3E  EFAC  F005         	goto	u2160
  1185  000B42  51DF               	movf	(main@soma+1)& (0+255),w,b
  1186  000B44  E107               	bnz	u2161
  1187  000B46  0E16               	movlw	22
  1188  000B48  5DDE               	subwf	main@soma& (0+255),w,b
  1189  000B4A  B0D8               	btfsc	status,0,c
  1190  000B4C  EFAA  F005         	goto	u2161
  1191  000B50  EFAC  F005         	goto	u2160
  1192  000B54                     u2161:
  1193  000B54  EFBA  F005         	goto	l2127
  1194  000B58                     u2160:
  1195  000B58                     
  1196                           ; BSR set to: 1
  1197  000B58  BFDF               	btfsc	(main@soma+1)& (0+255),7,b
  1198  000B5A  EFBA  F005         	goto	u2170
  1199  000B5E  51DF               	movf	(main@soma+1)& (0+255),w,b
  1200  000B60  E107               	bnz	u2171
  1201  000B62  0E12               	movlw	18
  1202  000B64  5DDE               	subwf	main@soma& (0+255),w,b
  1203  000B66  B0D8               	btfsc	status,0,c
  1204  000B68  EFB8  F005         	goto	u2171
  1205  000B6C  EFBA  F005         	goto	u2170
  1206  000B70                     u2171:
  1207  000B70  EFC9  F005         	goto	l2131
  1208  000B74                     u2170:
  1209  000B74                     l2127:
  1210                           
  1211                           ; BSR set to: 1
  1212                           ;main.c: 96:                     rgbColor(1);
  1213  000B74  0E00               	movlw	0
  1214  000B76  6E08               	movwf	(rgbColor@led+1)^0,c
  1215  000B78  0E01               	movlw	1
  1216  000B7A  6E07               	movwf	rgbColor@led^0,c
  1217  000B7C  EC43  F00B         	call	_rgbColor	;wreg free
  1218  000B80                     
  1219                           ;main.c: 97:                     max=max-aposta;
  1220  000B80  0101               	movlb	1	; () banked
  1221  000B82  51E0               	movf	main@aposta& (0+255),w,b
  1222  000B84  5DDC               	subwf	main@max& (0+255),w,b
  1223  000B86  6FDC               	movwf	main@max& (0+255),b
  1224  000B88  51E1               	movf	(main@aposta+1)& (0+255),w,b
  1225  000B8A  59DD               	subwfb	(main@max+1)& (0+255),w,b
  1226  000B8C  6FDD               	movwf	(main@max+1)& (0+255),b
  1227                           
  1228                           ;main.c: 98:                 }else{
  1229  000B8E  EFEE  F005         	goto	l2135
  1230  000B92                     l2131:
  1231                           
  1232                           ; BSR set to: 1
  1233                           ;main.c: 99:                     max=max+2*aposta*((soma/21)+1);
  1234  000B92  0E00               	movlw	0
  1235  000B94  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1236  000B96  0E15               	movlw	21
  1237  000B98  6E03               	movwf	___awdiv@divisor^0,c
  1238  000B9A  C1DE  F001         	movff	main@soma,___awdiv@dividend
  1239  000B9E  C1DF  F002         	movff	main@soma+1,___awdiv@dividend+1
  1240  000BA2  EC87  F00A         	call	___awdiv	;wreg free
  1241  000BA6  0E01               	movlw	1
  1242  000BA8  2401               	addwf	?___awdiv^0,w,c
  1243  000BAA  6E09               	movwf	___wmul@multiplier^0,c
  1244  000BAC  0E00               	movlw	0
  1245  000BAE  2002               	addwfc	(?___awdiv+1)^0,w,c
  1246  000BB0  6E0A               	movwf	(___wmul@multiplier+1)^0,c
  1247  000BB2  90D8               	bcf	status,0,c
  1248  000BB4  0101               	movlb	1	; () banked
  1249  000BB6  35E0               	rlcf	main@aposta& (0+255),w,b
  1250  000BB8  6E0B               	movwf	___wmul@multiplicand^0,c
  1251  000BBA  35E1               	rlcf	(main@aposta+1)& (0+255),w,b
  1252  000BBC  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
  1253  000BBE  ECCF  F00D         	call	___wmul	;wreg free
  1254  000BC2  0101               	movlb	1	; () banked
  1255  000BC4  51DC               	movf	main@max& (0+255),w,b
  1256  000BC6  2409               	addwf	?___wmul^0,w,c
  1257  000BC8  6FDC               	movwf	main@max& (0+255),b
  1258  000BCA  51DD               	movf	(main@max+1)& (0+255),w,b
  1259  000BCC  200A               	addwfc	(?___wmul+1)^0,w,c
  1260  000BCE  6FDD               	movwf	(main@max+1)& (0+255),b
  1261  000BD0                     
  1262                           ; BSR set to: 1
  1263                           ;main.c: 100:                     rgbColor(2);
  1264  000BD0  0E00               	movlw	0
  1265  000BD2  6E08               	movwf	(rgbColor@led+1)^0,c
  1266  000BD4  0E02               	movlw	2
  1267  000BD6  6E07               	movwf	rgbColor@led^0,c
  1268  000BD8  EC43  F00B         	call	_rgbColor	;wreg free
  1269  000BDC                     l2135:
  1270                           
  1271                           ;main.c: 102:                 aposta=0;
  1272  000BDC  0E00               	movlw	0
  1273  000BDE  0101               	movlb	1	; () banked
  1274  000BE0  6FE1               	movwf	(main@aposta+1)& (0+255),b
  1275  000BE2  0E00               	movlw	0
  1276  000BE4  6FE0               	movwf	main@aposta& (0+255),b
  1277  000BE6                     
  1278                           ; BSR set to: 1
  1279                           ;main.c: 103:                 soma=0;
  1280  000BE6  0E00               	movlw	0
  1281  000BE8  6FDF               	movwf	(main@soma+1)& (0+255),b
  1282  000BEA  0E00               	movlw	0
  1283  000BEC  6FDE               	movwf	main@soma& (0+255),b
  1284  000BEE                     
  1285                           ; BSR set to: 1
  1286                           ;main.c: 104:                 terminou=0;
  1287  000BEE  0E00               	movlw	0
  1288  000BF0  6FD5               	movwf	(main@terminou+1)& (0+255),b
  1289  000BF2  0E00               	movlw	0
  1290  000BF4  6FD4               	movwf	main@terminou& (0+255),b
  1291  000BF6                     l2141:
  1292                           
  1293                           ;main.c: 107:         cont++;
  1294  000BF6  0E01               	movlw	1
  1295  000BF8  0101               	movlb	1	; () banked
  1296  000BFA  27D0               	addwf	main@cont& (0+255),f,b
  1297  000BFC  0E00               	movlw	0
  1298  000BFE  23D1               	addwfc	(main@cont+1)& (0+255),f,b
  1299  000C00  23D2               	addwfc	(main@cont+2)& (0+255),f,b
  1300  000C02  23D3               	addwfc	(main@cont+3)& (0+255),f,b
  1301                           
  1302                           ;main.c: 108:     }
  1303  000C04  EF42  F003         	goto	l2049
  1304  000C08  EF00  F000         	goto	start
  1305  000C0C                     __end_of_main:
  1306                           	callstack 0
  1307                           
  1308 ;; *************** function _timerInit *****************
  1309 ;; Defined at:
  1310 ;;		line 55 in file "timer.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, status,2, status,0
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1324 ;;      Params:         0       0       0       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0       0       0
  1326 ;;      Temps:          0       0       0       0       0       0       0
  1327 ;;      Totals:         0       0       0       0       0       0       0
  1328 ;;Total ram usage:        0 bytes
  1329 ;; Hardware stack levels used: 1
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text1
  1338  001C3C                     __ptext1:
  1339                           	callstack 0
  1340  001C3C                     _timerInit:
  1341                           	callstack 30
  1342  001C3C                     
  1343                           ;timer.c: 57:  T0CON = 0b00001000;
  1344  001C3C  0E08               	movlw	8
  1345  001C3E  6ED5               	movwf	213,c	;volatile
  1346  001C40                     
  1347                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
  1348  001C40  8ED5               	bsf	213,7,c	;volatile
  1349  001C42  0012               	return		;funcret
  1350  001C44                     __end_of_timerInit:
  1351                           	callstack 0
  1352                           
  1353 ;; *************** function _sacaCarta *****************
  1354 ;; Defined at:
  1355 ;;		line 32 in file "main.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  valor           2   14[COMRAM] PTR int 
  1358 ;;		 -> main@valor(104), 
  1359 ;;  namesa          2   16[COMRAM] PTR int 
  1360 ;;		 -> main@namesa(104), 
  1361 ;;  cont            4   18[COMRAM] unsigned long 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;		None
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  2   14[COMRAM] int 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1373 ;;      Params:         8       0       0       0       0       0       0
  1374 ;;      Locals:         0       0       0       0       0       0       0
  1375 ;;      Temps:          2       0       0       0       0       0       0
  1376 ;;      Totals:        10       0       0       0       0       0       0
  1377 ;;Total ram usage:       10 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 5
  1380 ;; This function calls:
  1381 ;;		___llmod
  1382 ;;		_lcdChar
  1383 ;;		_timerReset
  1384 ;;		_timerWait
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text2
  1391  0010A8                     __ptext2:
  1392                           	callstack 0
  1393  0010A8                     _sacaCarta:
  1394                           	callstack 25
  1395  0010A8                     
  1396                           ;main.c: 32: int sacaCarta(int *valor,int *namesa,unsigned long int cont);main.c: 33: {;
      +                          main.c: 34:     while(namesa[cont%52]){
  1397  0010A8  EF71  F008         	goto	l1851
  1398  0010AC                     l1847:
  1399                           
  1400                           ;main.c: 35:         timerReset(2*cont%52);
  1401  0010AC  90D8               	bcf	status,0,c
  1402  0010AE  3413               	rlcf	sacaCarta@cont^0,w,c
  1403  0010B0  6E01               	movwf	___llmod@dividend^0,c
  1404  0010B2  3414               	rlcf	(sacaCarta@cont+1)^0,w,c
  1405  0010B4  6E02               	movwf	(___llmod@dividend+1)^0,c
  1406  0010B6  3415               	rlcf	(sacaCarta@cont+2)^0,w,c
  1407  0010B8  6E03               	movwf	(___llmod@dividend+2)^0,c
  1408  0010BA  3416               	rlcf	(sacaCarta@cont+3)^0,w,c
  1409  0010BC  6E04               	movwf	(___llmod@dividend+3)^0,c
  1410  0010BE  0E34               	movlw	52
  1411  0010C0  6E05               	movwf	___llmod@divisor^0,c
  1412  0010C2  0E00               	movlw	0
  1413  0010C4  6E06               	movwf	(___llmod@divisor+1)^0,c
  1414  0010C6  0E00               	movlw	0
  1415  0010C8  6E07               	movwf	(___llmod@divisor+2)^0,c
  1416  0010CA  0E00               	movlw	0
  1417  0010CC  6E08               	movwf	(___llmod@divisor+3)^0,c
  1418  0010CE  ECF3  F00B         	call	___llmod	;wreg free
  1419  0010D2  C001  F00A         	movff	?___llmod,timerReset@tempo
  1420  0010D6  C002  F00B         	movff	?___llmod+1,timerReset@tempo+1
  1421  0010DA  ECE2  F00D         	call	_timerReset	;wreg free
  1422  0010DE                     
  1423                           ;main.c: 36:         timerWait();
  1424  0010DE  EC11  F00E         	call	_timerWait	;wreg free
  1425  0010E2                     l1851:
  1426                           
  1427                           ;main.c: 34:     while(namesa[cont%52]){
  1428  0010E2  C013  F001         	movff	sacaCarta@cont,___llmod@dividend
  1429  0010E6  C014  F002         	movff	sacaCarta@cont+1,___llmod@dividend+1
  1430  0010EA  C015  F003         	movff	sacaCarta@cont+2,___llmod@dividend+2
  1431  0010EE  C016  F004         	movff	sacaCarta@cont+3,___llmod@dividend+3
  1432  0010F2  0E34               	movlw	52
  1433  0010F4  6E05               	movwf	___llmod@divisor^0,c
  1434  0010F6  0E00               	movlw	0
  1435  0010F8  6E06               	movwf	(___llmod@divisor+1)^0,c
  1436  0010FA  0E00               	movlw	0
  1437  0010FC  6E07               	movwf	(___llmod@divisor+2)^0,c
  1438  0010FE  0E00               	movlw	0
  1439  001100  6E08               	movwf	(___llmod@divisor+3)^0,c
  1440  001102  ECF3  F00B         	call	___llmod	;wreg free
  1441  001106  90D8               	bcf	status,0,c
  1442  001108  3601               	rlcf	?___llmod^0,f,c
  1443  00110A  3602               	rlcf	(?___llmod+1)^0,f,c
  1444  00110C  5001               	movf	?___llmod^0,w,c
  1445  00110E  2411               	addwf	sacaCarta@namesa^0,w,c
  1446  001110  6ED9               	movwf	fsr2l,c
  1447  001112  5002               	movf	(?___llmod+1)^0,w,c
  1448  001114  2012               	addwfc	(sacaCarta@namesa+1)^0,w,c
  1449  001116  6EDA               	movwf	fsr2h,c
  1450  001118  50DE               	movf	postinc2,w,c
  1451  00111A  10DE               	iorwf	postinc2,w,c
  1452  00111C  A4D8               	btfss	status,2,c
  1453  00111E  EF93  F008         	goto	u1751
  1454  001122  EF95  F008         	goto	u1750
  1455  001126                     u1751:
  1456  001126  EF56  F008         	goto	l1847
  1457  00112A                     u1750:
  1458  00112A                     
  1459                           ;main.c: 38:     if(valor[cont%52]==1){
  1460  00112A  C013  F001         	movff	sacaCarta@cont,___llmod@dividend
  1461  00112E  C014  F002         	movff	sacaCarta@cont+1,___llmod@dividend+1
  1462  001132  C015  F003         	movff	sacaCarta@cont+2,___llmod@dividend+2
  1463  001136  C016  F004         	movff	sacaCarta@cont+3,___llmod@dividend+3
  1464  00113A  0E34               	movlw	52
  1465  00113C  6E05               	movwf	___llmod@divisor^0,c
  1466  00113E  0E00               	movlw	0
  1467  001140  6E06               	movwf	(___llmod@divisor+1)^0,c
  1468  001142  0E00               	movlw	0
  1469  001144  6E07               	movwf	(___llmod@divisor+2)^0,c
  1470  001146  0E00               	movlw	0
  1471  001148  6E08               	movwf	(___llmod@divisor+3)^0,c
  1472  00114A  ECF3  F00B         	call	___llmod	;wreg free
  1473  00114E  90D8               	bcf	status,0,c
  1474  001150  3601               	rlcf	?___llmod^0,f,c
  1475  001152  3602               	rlcf	(?___llmod+1)^0,f,c
  1476  001154  5001               	movf	?___llmod^0,w,c
  1477  001156  240F               	addwf	sacaCarta@valor^0,w,c
  1478  001158  6ED9               	movwf	fsr2l,c
  1479  00115A  5002               	movf	(?___llmod+1)^0,w,c
  1480  00115C  2010               	addwfc	(sacaCarta@valor+1)^0,w,c
  1481  00115E  6EDA               	movwf	fsr2h,c
  1482  001160  04DE               	decf	postinc2,w,c
  1483  001162  10DE               	iorwf	postinc2,w,c
  1484  001164  A4D8               	btfss	status,2,c
  1485  001166  EFB7  F008         	goto	u1761
  1486  00116A  EFB9  F008         	goto	u1760
  1487  00116E                     u1761:
  1488  00116E  EFC5  F008         	goto	l1861
  1489  001172                     u1760:
  1490  001172                     
  1491                           ;main.c: 39:         lcdChar(49);
  1492  001172  0E31               	movlw	49
  1493  001174  ECF3  F00D         	call	_lcdChar
  1494                           
  1495                           ;main.c: 40:         lcdChar(48);
  1496  001178  0E30               	movlw	48
  1497  00117A  ECF3  F00D         	call	_lcdChar
  1498  00117E                     l1857:
  1499                           
  1500                           ;main.c: 41:         return 10;
  1501  00117E  0E00               	movlw	0
  1502  001180  6E10               	movwf	(?_sacaCarta+1)^0,c
  1503  001182  0E0A               	movlw	10
  1504  001184  6E0F               	movwf	?_sacaCarta^0,c
  1505  001186  EF36  F009         	goto	l34
  1506  00118A                     l1861:
  1507                           
  1508                           ;main.c: 43:     if(valor[cont%52]>=10){
  1509  00118A  C013  F001         	movff	sacaCarta@cont,___llmod@dividend
  1510  00118E  C014  F002         	movff	sacaCarta@cont+1,___llmod@dividend+1
  1511  001192  C015  F003         	movff	sacaCarta@cont+2,___llmod@dividend+2
  1512  001196  C016  F004         	movff	sacaCarta@cont+3,___llmod@dividend+3
  1513  00119A  0E34               	movlw	52
  1514  00119C  6E05               	movwf	___llmod@divisor^0,c
  1515  00119E  0E00               	movlw	0
  1516  0011A0  6E06               	movwf	(___llmod@divisor+1)^0,c
  1517  0011A2  0E00               	movlw	0
  1518  0011A4  6E07               	movwf	(___llmod@divisor+2)^0,c
  1519  0011A6  0E00               	movlw	0
  1520  0011A8  6E08               	movwf	(___llmod@divisor+3)^0,c
  1521  0011AA  ECF3  F00B         	call	___llmod	;wreg free
  1522  0011AE  90D8               	bcf	status,0,c
  1523  0011B0  3601               	rlcf	?___llmod^0,f,c
  1524  0011B2  3602               	rlcf	(?___llmod+1)^0,f,c
  1525  0011B4  5001               	movf	?___llmod^0,w,c
  1526  0011B6  240F               	addwf	sacaCarta@valor^0,w,c
  1527  0011B8  6ED9               	movwf	fsr2l,c
  1528  0011BA  5002               	movf	(?___llmod+1)^0,w,c
  1529  0011BC  2010               	addwfc	(sacaCarta@valor+1)^0,w,c
  1530  0011BE  6EDA               	movwf	fsr2h,c
  1531  0011C0  0E01               	movlw	1
  1532  0011C2  BEDB               	btfsc	plusw2,7,c
  1533  0011C4  EFEE  F008         	goto	u1771
  1534  0011C8  0E01               	movlw	1
  1535  0011CA  50DB               	movf	plusw2,w,c
  1536  0011CC  E109               	bnz	u1770
  1537  0011CE  0E0A               	movlw	10
  1538  0011D0  5CDE               	subwf	postinc2,w,c
  1539  0011D2  A0D8               	btfss	status,0,c
  1540  0011D4  EFEE  F008         	goto	u1771
  1541  0011D8  EFF0  F008         	goto	u1770
  1542  0011DC                     u1771:
  1543  0011DC  EFF8  F008         	goto	l1869
  1544  0011E0                     u1770:
  1545  0011E0                     
  1546                           ;main.c: 44:         lcdChar(49);
  1547  0011E0  0E31               	movlw	49
  1548  0011E2  ECF3  F00D         	call	_lcdChar
  1549                           
  1550                           ;main.c: 45:         lcdChar(48);
  1551  0011E6  0E30               	movlw	48
  1552  0011E8  ECF3  F00D         	call	_lcdChar
  1553  0011EC  EFBF  F008         	goto	l1857
  1554  0011F0                     l1869:
  1555                           
  1556                           ;main.c: 48:     lcdChar(valor[cont%52]+48);
  1557  0011F0  C013  F001         	movff	sacaCarta@cont,___llmod@dividend
  1558  0011F4  C014  F002         	movff	sacaCarta@cont+1,___llmod@dividend+1
  1559  0011F8  C015  F003         	movff	sacaCarta@cont+2,___llmod@dividend+2
  1560  0011FC  C016  F004         	movff	sacaCarta@cont+3,___llmod@dividend+3
  1561  001200  0E34               	movlw	52
  1562  001202  6E05               	movwf	___llmod@divisor^0,c
  1563  001204  0E00               	movlw	0
  1564  001206  6E06               	movwf	(___llmod@divisor+1)^0,c
  1565  001208  0E00               	movlw	0
  1566  00120A  6E07               	movwf	(___llmod@divisor+2)^0,c
  1567  00120C  0E00               	movlw	0
  1568  00120E  6E08               	movwf	(___llmod@divisor+3)^0,c
  1569  001210  ECF3  F00B         	call	___llmod	;wreg free
  1570  001214  90D8               	bcf	status,0,c
  1571  001216  3601               	rlcf	?___llmod^0,f,c
  1572  001218  3602               	rlcf	(?___llmod+1)^0,f,c
  1573  00121A  5001               	movf	?___llmod^0,w,c
  1574  00121C  240F               	addwf	sacaCarta@valor^0,w,c
  1575  00121E  6ED9               	movwf	fsr2l,c
  1576  001220  5002               	movf	(?___llmod+1)^0,w,c
  1577  001222  2010               	addwfc	(sacaCarta@valor+1)^0,w,c
  1578  001224  6EDA               	movwf	fsr2h,c
  1579  001226  50DF               	movf	indf2,w,c
  1580  001228  0F30               	addlw	48
  1581  00122A  ECF3  F00D         	call	_lcdChar
  1582                           
  1583                           ;main.c: 49:     return valor[cont%52];
  1584  00122E  C013  F001         	movff	sacaCarta@cont,___llmod@dividend
  1585  001232  C014  F002         	movff	sacaCarta@cont+1,___llmod@dividend+1
  1586  001236  C015  F003         	movff	sacaCarta@cont+2,___llmod@dividend+2
  1587  00123A  C016  F004         	movff	sacaCarta@cont+3,___llmod@dividend+3
  1588  00123E  0E34               	movlw	52
  1589  001240  6E05               	movwf	___llmod@divisor^0,c
  1590  001242  0E00               	movlw	0
  1591  001244  6E06               	movwf	(___llmod@divisor+1)^0,c
  1592  001246  0E00               	movlw	0
  1593  001248  6E07               	movwf	(___llmod@divisor+2)^0,c
  1594  00124A  0E00               	movlw	0
  1595  00124C  6E08               	movwf	(___llmod@divisor+3)^0,c
  1596  00124E  ECF3  F00B         	call	___llmod	;wreg free
  1597  001252  90D8               	bcf	status,0,c
  1598  001254  3601               	rlcf	?___llmod^0,f,c
  1599  001256  3602               	rlcf	(?___llmod+1)^0,f,c
  1600  001258  5001               	movf	?___llmod^0,w,c
  1601  00125A  240F               	addwf	sacaCarta@valor^0,w,c
  1602  00125C  6ED9               	movwf	fsr2l,c
  1603  00125E  5002               	movf	(?___llmod+1)^0,w,c
  1604  001260  2010               	addwfc	(sacaCarta@valor+1)^0,w,c
  1605  001262  6EDA               	movwf	fsr2h,c
  1606  001264  CFDE F00F          	movff	postinc2,?_sacaCarta
  1607  001268  CFDD F010          	movff	postdec2,?_sacaCarta+1
  1608  00126C                     l34:
  1609  00126C  0012               	return		;funcret
  1610  00126E                     __end_of_sacaCarta:
  1611                           	callstack 0
  1612                           
  1613 ;; *************** function _timerWait *****************
  1614 ;; Defined at:
  1615 ;;		line 31 in file "timer.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		None
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1629 ;;      Params:         0       0       0       0       0       0       0
  1630 ;;      Locals:         0       0       0       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0       0       0
  1632 ;;      Totals:         0       0       0       0       0       0       0
  1633 ;;Total ram usage:        0 bytes
  1634 ;; Hardware stack levels used: 1
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_sacaCarta
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text3
  1643  001C22                     __ptext3:
  1644                           	callstack 0
  1645  001C22                     _timerWait:
  1646                           	callstack 29
  1647  001C22                     l332:
  1648  001C22  A4F2               	btfss	242,2,c	;volatile
  1649  001C24  EF16  F00E         	goto	u1601
  1650  001C28  EF18  F00E         	goto	u1600
  1651  001C2C                     u1601:
  1652  001C2C  EF11  F00E         	goto	l332
  1653  001C30                     u1600:
  1654  001C30  0012               	return		;funcret
  1655  001C32                     __end_of_timerWait:
  1656                           	callstack 0
  1657                           
  1658 ;; *************** function _timerReset *****************
  1659 ;; Defined at:
  1660 ;;		line 37 in file "timer.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  tempo           2    9[COMRAM] unsigned int 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  ciclos          2   11[COMRAM] unsigned int 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2, status,0
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1674 ;;      Params:         2       0       0       0       0       0       0
  1675 ;;      Locals:         2       0       0       0       0       0       0
  1676 ;;      Temps:          0       0       0       0       0       0       0
  1677 ;;      Totals:         4       0       0       0       0       0       0
  1678 ;;Total ram usage:        4 bytes
  1679 ;; Hardware stack levels used: 1
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_sacaCarta
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           	psect	text4
  1688  001BC4                     __ptext4:
  1689                           	callstack 0
  1690  001BC4                     _timerReset:
  1691                           	callstack 29
  1692  001BC4                     
  1693                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 39:     unsign
      +                          ed int ciclos;;timer.c: 42:     ciclos = tempo * 2;
  1694  001BC4  90D8               	bcf	status,0,c
  1695  001BC6  340A               	rlcf	timerReset@tempo^0,w,c
  1696  001BC8  6E0C               	movwf	timerReset@ciclos^0,c
  1697  001BCA  340B               	rlcf	(timerReset@tempo+1)^0,w,c
  1698  001BCC  6E0D               	movwf	(timerReset@ciclos+1)^0,c
  1699  001BCE                     
  1700                           ;timer.c: 44:  ciclos = 65535 - ciclos;
  1701  001BCE  1E0C               	comf	timerReset@ciclos^0,f,c
  1702  001BD0  1E0D               	comf	(timerReset@ciclos+1)^0,f,c
  1703  001BD2                     
  1704                           ;timer.c: 47:     ciclos -=50;
  1705  001BD2  0E32               	movlw	50
  1706  001BD4  5E0C               	subwf	timerReset@ciclos^0,f,c
  1707  001BD6  0E00               	movlw	0
  1708  001BD8  5A0D               	subwfb	(timerReset@ciclos+1)^0,f,c
  1709  001BDA                     
  1710                           ;timer.c: 49:  TMR0H = (ciclos >> 8);
  1711  001BDA  500D               	movf	(timerReset@ciclos+1)^0,w,c
  1712  001BDC  6ED7               	movwf	215,c	;volatile
  1713  001BDE                     
  1714                           ;timer.c: 50:  TMR0L = (ciclos & 0x00FF);
  1715  001BDE  C00C  FFD6         	movff	timerReset@ciclos,4054	;volatile
  1716  001BE2                     
  1717                           ;timer.c: 52:  ((INTCON) &= ~(1<<(2)));
  1718  001BE2  94F2               	bcf	242,2,c	;volatile
  1719  001BE4  0012               	return		;funcret
  1720  001BE6                     __end_of_timerReset:
  1721                           	callstack 0
  1722                           
  1723 ;; *************** function _lcdChar *****************
  1724 ;; Defined at:
  1725 ;;		line 52 in file "lcd.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  value           1    wreg     unsigned char 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  value           1   13[COMRAM] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1739 ;;      Params:         0       0       0       0       0       0       0
  1740 ;;      Locals:         1       0       0       0       0       0       0
  1741 ;;      Temps:          0       0       0       0       0       0       0
  1742 ;;      Totals:         1       0       0       0       0       0       0
  1743 ;;Total ram usage:        1 bytes
  1744 ;; Hardware stack levels used: 1
  1745 ;; Hardware stack levels required when called: 4
  1746 ;; This function calls:
  1747 ;;		_delayMicro
  1748 ;;		_pushByte
  1749 ;; This function is called by:
  1750 ;;		_sacaCarta
  1751 ;;		_main
  1752 ;;		_lcdString
  1753 ;;		_lcdNumber
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text5
  1758  001BE6                     __ptext5:
  1759                           	callstack 0
  1760  001BE6                     _lcdChar:
  1761                           	callstack 25
  1762                           
  1763                           ;incstack = 0
  1764                           ;lcdChar@value stored from wreg
  1765  001BE6  6E0E               	movwf	lcdChar@value^0,c
  1766  001BE8                     
  1767                           ;lcd.c: 53:  pushByte(value, 1);
  1768  001BE8  0E00               	movlw	0
  1769  001BEA  6E0B               	movwf	(pushByte@rs+1)^0,c
  1770  001BEC  0E01               	movlw	1
  1771  001BEE  6E0A               	movwf	pushByte@rs^0,c
  1772  001BF0  500E               	movf	lcdChar@value^0,w,c
  1773  001BF2  EC6B  F00C         	call	_pushByte
  1774  001BF6                     
  1775                           ;lcd.c: 54:  delayMicro(80);
  1776  001BF6  0E00               	movlw	0
  1777  001BF8  6E02               	movwf	(delayMicro@a+1)^0,c
  1778  001BFA  0E50               	movlw	80
  1779  001BFC  6E01               	movwf	delayMicro@a^0,c
  1780  001BFE  EC22  F00E         	call	_delayMicro	;wreg free
  1781  001C02  0012               	return		;funcret
  1782  001C04                     __end_of_lcdChar:
  1783                           	callstack 0
  1784                           
  1785 ;; *************** function ___llmod *****************
  1786 ;; Defined at:
  1787 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  dividend        4    0[COMRAM] unsigned long 
  1790 ;;  divisor         4    4[COMRAM] unsigned long 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  counter         1    8[COMRAM] unsigned char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  4    0[COMRAM] unsigned long 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2, status,0
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1802 ;;      Params:         8       0       0       0       0       0       0
  1803 ;;      Locals:         1       0       0       0       0       0       0
  1804 ;;      Temps:          0       0       0       0       0       0       0
  1805 ;;      Totals:         9       0       0       0       0       0       0
  1806 ;;Total ram usage:        9 bytes
  1807 ;; Hardware stack levels used: 1
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_sacaCarta
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text6
  1816  0017E6                     __ptext6:
  1817                           	callstack 0
  1818  0017E6                     ___llmod:
  1819                           	callstack 29
  1820  0017E6  5005               	movf	___llmod@divisor^0,w,c
  1821  0017E8  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  1822  0017EA  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  1823  0017EC  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  1824  0017EE  B4D8               	btfsc	status,2,c
  1825  0017F0  EFFC  F00B         	goto	u1711
  1826  0017F4  EFFE  F00B         	goto	u1710
  1827  0017F8                     u1711:
  1828  0017F8  EF2E  F00C         	goto	l764
  1829  0017FC                     u1710:
  1830  0017FC  0E01               	movlw	1
  1831  0017FE  6E09               	movwf	___llmod@counter^0,c
  1832  001800  EF08  F00C         	goto	l1823
  1833  001804                     l1821:
  1834  001804  90D8               	bcf	status,0,c
  1835  001806  3605               	rlcf	___llmod@divisor^0,f,c
  1836  001808  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  1837  00180A  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  1838  00180C  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  1839  00180E  2A09               	incf	___llmod@counter^0,f,c
  1840  001810                     l1823:
  1841  001810  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  1842  001812  EF0D  F00C         	goto	u1721
  1843  001816  EF0F  F00C         	goto	u1720
  1844  00181A                     u1721:
  1845  00181A  EF02  F00C         	goto	l1821
  1846  00181E                     u1720:
  1847  00181E                     l1825:
  1848  00181E  5005               	movf	___llmod@divisor^0,w,c
  1849  001820  5C01               	subwf	___llmod@dividend^0,w,c
  1850  001822  5006               	movf	(___llmod@divisor+1)^0,w,c
  1851  001824  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  1852  001826  5007               	movf	(___llmod@divisor+2)^0,w,c
  1853  001828  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  1854  00182A  5008               	movf	(___llmod@divisor+3)^0,w,c
  1855  00182C  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  1856  00182E  A0D8               	btfss	status,0,c
  1857  001830  EF1C  F00C         	goto	u1731
  1858  001834  EF1E  F00C         	goto	u1730
  1859  001838                     u1731:
  1860  001838  EF26  F00C         	goto	l1829
  1861  00183C                     u1730:
  1862  00183C  5005               	movf	___llmod@divisor^0,w,c
  1863  00183E  5E01               	subwf	___llmod@dividend^0,f,c
  1864  001840  5006               	movf	(___llmod@divisor+1)^0,w,c
  1865  001842  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  1866  001844  5007               	movf	(___llmod@divisor+2)^0,w,c
  1867  001846  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  1868  001848  5008               	movf	(___llmod@divisor+3)^0,w,c
  1869  00184A  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  1870  00184C                     l1829:
  1871  00184C  90D8               	bcf	status,0,c
  1872  00184E  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  1873  001850  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  1874  001852  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  1875  001854  3205               	rrcf	___llmod@divisor^0,f,c
  1876  001856  2E09               	decfsz	___llmod@counter^0,f,c
  1877  001858  EF0F  F00C         	goto	l1825
  1878  00185C                     l764:
  1879  00185C  C001  F001         	movff	___llmod@dividend,?___llmod
  1880  001860  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  1881  001864  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  1882  001868  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  1883  00186C  0012               	return		;funcret
  1884  00186E                     __end_of___llmod:
  1885                           	callstack 0
  1886                           
  1887 ;; *************** function _rgbInit *****************
  1888 ;; Defined at:
  1889 ;;		line 45 in file "rgb.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1903 ;;      Params:         0       0       0       0       0       0       0
  1904 ;;      Locals:         0       0       0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0
  1906 ;;      Totals:         0       0       0       0       0       0       0
  1907 ;;Total ram usage:        0 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 1
  1910 ;; This function calls:
  1911 ;;		_pinMode
  1912 ;; This function is called by:
  1913 ;;		_main
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text7
  1918  001A46                     __ptext7:
  1919                           	callstack 0
  1920  001A46                     _rgbInit:
  1921                           	callstack 29
  1922  001A46                     
  1923                           ;rgb.c: 46:  pinMode(PIN_D0, 0);
  1924  001A46  0E00               	movlw	0
  1925  001A48  6E02               	movwf	(pinMode@pin+1)^0,c
  1926  001A4A  0E18               	movlw	24
  1927  001A4C  6E01               	movwf	pinMode@pin^0,c
  1928  001A4E  0E00               	movlw	0
  1929  001A50  6E04               	movwf	(pinMode@type+1)^0,c
  1930  001A52  0E00               	movlw	0
  1931  001A54  6E03               	movwf	pinMode@type^0,c
  1932  001A56  EC06  F006         	call	_pinMode	;wreg free
  1933                           
  1934                           ;rgb.c: 47:  pinMode(PIN_D1, 0);
  1935  001A5A  0E00               	movlw	0
  1936  001A5C  6E02               	movwf	(pinMode@pin+1)^0,c
  1937  001A5E  0E19               	movlw	25
  1938  001A60  6E01               	movwf	pinMode@pin^0,c
  1939  001A62  0E00               	movlw	0
  1940  001A64  6E04               	movwf	(pinMode@type+1)^0,c
  1941  001A66  0E00               	movlw	0
  1942  001A68  6E03               	movwf	pinMode@type^0,c
  1943  001A6A  EC06  F006         	call	_pinMode	;wreg free
  1944                           
  1945                           ;rgb.c: 48:  pinMode(PIN_D2, 0);
  1946  001A6E  0E00               	movlw	0
  1947  001A70  6E02               	movwf	(pinMode@pin+1)^0,c
  1948  001A72  0E1A               	movlw	26
  1949  001A74  6E01               	movwf	pinMode@pin^0,c
  1950  001A76  0E00               	movlw	0
  1951  001A78  6E04               	movwf	(pinMode@type+1)^0,c
  1952  001A7A  0E00               	movlw	0
  1953  001A7C  6E03               	movwf	pinMode@type^0,c
  1954  001A7E  EC06  F006         	call	_pinMode	;wreg free
  1955  001A82  0012               	return		;funcret
  1956  001A84                     __end_of_rgbInit:
  1957                           	callstack 0
  1958                           
  1959 ;; *************** function _rgbColor *****************
  1960 ;; Defined at:
  1961 ;;		line 3 in file "rgb.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  led             2    6[COMRAM] int 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1975 ;;      Params:         2       0       0       0       0       0       0
  1976 ;;      Locals:         0       0       0       0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0       0       0
  1978 ;;      Totals:         2       0       0       0       0       0       0
  1979 ;;Total ram usage:        2 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 1
  1982 ;; This function calls:
  1983 ;;		_digitalWrite
  1984 ;; This function is called by:
  1985 ;;		_main
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text8
  1990  001686                     __ptext8:
  1991                           	callstack 0
  1992  001686                     _rgbColor:
  1993                           	callstack 29
  1994  001686                     
  1995                           ;rgb.c: 4:  if (led & 1) {
  1996  001686  A007               	btfss	rgbColor@led^0,0,c
  1997  001688  EF48  F00B         	goto	u1861
  1998  00168C  EF4A  F00B         	goto	u1860
  1999  001690                     u1861:
  2000  001690  EF56  F00B         	goto	l1933
  2001  001694                     u1860:
  2002  001694                     
  2003                           ;rgb.c: 5:   digitalWrite(PIN_D0, 1);
  2004  001694  0E00               	movlw	0
  2005  001696  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2006  001698  0E18               	movlw	24
  2007  00169A  6E01               	movwf	digitalWrite@pin^0,c
  2008  00169C  0E00               	movlw	0
  2009  00169E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2010  0016A0  0E01               	movlw	1
  2011  0016A2  6E03               	movwf	digitalWrite@value^0,c
  2012  0016A4  EC2D  F007         	call	_digitalWrite	;wreg free
  2013                           
  2014                           ;rgb.c: 6:  } else {
  2015  0016A8  EF60  F00B         	goto	l1935
  2016  0016AC                     l1933:
  2017                           
  2018                           ;rgb.c: 7:   digitalWrite(PIN_D0, 0);
  2019  0016AC  0E00               	movlw	0
  2020  0016AE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2021  0016B0  0E18               	movlw	24
  2022  0016B2  6E01               	movwf	digitalWrite@pin^0,c
  2023  0016B4  0E00               	movlw	0
  2024  0016B6  6E04               	movwf	(digitalWrite@value+1)^0,c
  2025  0016B8  0E00               	movlw	0
  2026  0016BA  6E03               	movwf	digitalWrite@value^0,c
  2027  0016BC  EC2D  F007         	call	_digitalWrite	;wreg free
  2028  0016C0                     l1935:
  2029                           
  2030                           ;rgb.c: 9:  if (led & 2) {
  2031  0016C0  A207               	btfss	rgbColor@led^0,1,c
  2032  0016C2  EF65  F00B         	goto	u1871
  2033  0016C6  EF67  F00B         	goto	u1870
  2034  0016CA                     u1871:
  2035  0016CA  EF73  F00B         	goto	l1939
  2036  0016CE                     u1870:
  2037  0016CE                     
  2038                           ;rgb.c: 10:   digitalWrite(PIN_D1, 1);
  2039  0016CE  0E00               	movlw	0
  2040  0016D0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2041  0016D2  0E19               	movlw	25
  2042  0016D4  6E01               	movwf	digitalWrite@pin^0,c
  2043  0016D6  0E00               	movlw	0
  2044  0016D8  6E04               	movwf	(digitalWrite@value+1)^0,c
  2045  0016DA  0E01               	movlw	1
  2046  0016DC  6E03               	movwf	digitalWrite@value^0,c
  2047  0016DE  EC2D  F007         	call	_digitalWrite	;wreg free
  2048                           
  2049                           ;rgb.c: 11:  } else {
  2050  0016E2  EF7D  F00B         	goto	l1941
  2051  0016E6                     l1939:
  2052                           
  2053                           ;rgb.c: 12:   digitalWrite(PIN_D1, 0);
  2054  0016E6  0E00               	movlw	0
  2055  0016E8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2056  0016EA  0E19               	movlw	25
  2057  0016EC  6E01               	movwf	digitalWrite@pin^0,c
  2058  0016EE  0E00               	movlw	0
  2059  0016F0  6E04               	movwf	(digitalWrite@value+1)^0,c
  2060  0016F2  0E00               	movlw	0
  2061  0016F4  6E03               	movwf	digitalWrite@value^0,c
  2062  0016F6  EC2D  F007         	call	_digitalWrite	;wreg free
  2063  0016FA                     l1941:
  2064                           
  2065                           ;rgb.c: 14:  if (led & 4) {
  2066  0016FA  A407               	btfss	rgbColor@led^0,2,c
  2067  0016FC  EF82  F00B         	goto	u1881
  2068  001700  EF84  F00B         	goto	u1880
  2069  001704                     u1881:
  2070  001704  EF90  F00B         	goto	l1945
  2071  001708                     u1880:
  2072  001708                     
  2073                           ;rgb.c: 15:   digitalWrite(PIN_D2, 1);
  2074  001708  0E00               	movlw	0
  2075  00170A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2076  00170C  0E1A               	movlw	26
  2077  00170E  6E01               	movwf	digitalWrite@pin^0,c
  2078  001710  0E00               	movlw	0
  2079  001712  6E04               	movwf	(digitalWrite@value+1)^0,c
  2080  001714  0E01               	movlw	1
  2081  001716  6E03               	movwf	digitalWrite@value^0,c
  2082  001718  EC2D  F007         	call	_digitalWrite	;wreg free
  2083                           
  2084                           ;rgb.c: 16:  } else {
  2085  00171C  EF9A  F00B         	goto	l303
  2086  001720                     l1945:
  2087                           
  2088                           ;rgb.c: 17:   digitalWrite(PIN_D2, 0);
  2089  001720  0E00               	movlw	0
  2090  001722  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2091  001724  0E1A               	movlw	26
  2092  001726  6E01               	movwf	digitalWrite@pin^0,c
  2093  001728  0E00               	movlw	0
  2094  00172A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2095  00172C  0E00               	movlw	0
  2096  00172E  6E03               	movwf	digitalWrite@value^0,c
  2097  001730  EC2D  F007         	call	_digitalWrite	;wreg free
  2098  001734                     l303:
  2099  001734  0012               	return		;funcret
  2100  001736                     __end_of_rgbColor:
  2101                           	callstack 0
  2102                           
  2103 ;; *************** function _mesaReset *****************
  2104 ;; Defined at:
  2105 ;;		line 24 in file "main.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  namesa          2    0[COMRAM] PTR int 
  2108 ;;		 -> main@namesa(104), 
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  i               2    2[COMRAM] int 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2120 ;;      Params:         2       0       0       0       0       0       0
  2121 ;;      Locals:         2       0       0       0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0
  2123 ;;      Totals:         4       0       0       0       0       0       0
  2124 ;;Total ram usage:        4 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_main
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text9
  2134  00197E                     __ptext9:
  2135                           	callstack 0
  2136  00197E                     _mesaReset:
  2137                           	callstack 30
  2138  00197E                     
  2139                           ;main.c: 24: void mesaReset(int *namesa);main.c: 25: {;main.c: 26:     int i;;main.c: 27
      +                          :     for(i=0;i<52;i++){
  2140  00197E  0E00               	movlw	0
  2141  001980  6E04               	movwf	(mesaReset@i+1)^0,c
  2142  001982  0E00               	movlw	0
  2143  001984  6E03               	movwf	mesaReset@i^0,c
  2144  001986                     l1839:
  2145                           
  2146                           ;main.c: 28:         namesa[i]=0;
  2147  001986  90D8               	bcf	status,0,c
  2148  001988  3403               	rlcf	mesaReset@i^0,w,c
  2149  00198A  6ED9               	movwf	fsr2l,c
  2150  00198C  3404               	rlcf	(mesaReset@i+1)^0,w,c
  2151  00198E  6EDA               	movwf	fsr2h,c
  2152  001990  5001               	movf	mesaReset@namesa^0,w,c
  2153  001992  26D9               	addwf	fsr2l,f,c
  2154  001994  5002               	movf	(mesaReset@namesa+1)^0,w,c
  2155  001996  22DA               	addwfc	fsr2h,f,c
  2156  001998  0E00               	movlw	0
  2157  00199A  6EDE               	movwf	postinc2,c
  2158  00199C  0E00               	movlw	0
  2159  00199E  6EDD               	movwf	postdec2,c
  2160  0019A0                     
  2161                           ;main.c: 29:     }
  2162  0019A0  4A03               	infsnz	mesaReset@i^0,f,c
  2163  0019A2  2A04               	incf	(mesaReset@i+1)^0,f,c
  2164  0019A4  BE04               	btfsc	(mesaReset@i+1)^0,7,c
  2165  0019A6  EFDE  F00C         	goto	u1741
  2166  0019AA  5004               	movf	(mesaReset@i+1)^0,w,c
  2167  0019AC  E109               	bnz	u1740
  2168  0019AE  0E34               	movlw	52
  2169  0019B0  5C03               	subwf	mesaReset@i^0,w,c
  2170  0019B2  A0D8               	btfss	status,0,c
  2171  0019B4  EFDE  F00C         	goto	u1741
  2172  0019B8  EFE0  F00C         	goto	u1740
  2173  0019BC                     u1741:
  2174  0019BC  EFC3  F00C         	goto	l1839
  2175  0019C0                     u1740:
  2176  0019C0  0012               	return		;funcret
  2177  0019C2                     __end_of_mesaReset:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function _lcdInit *****************
  2181 ;; Defined at:
  2182 ;;		line 72 in file "lcd.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;		None
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2196 ;;      Params:         0       0       0       0       0       0       0
  2197 ;;      Locals:         0       0       0       0       0       0       0
  2198 ;;      Temps:          0       0       0       0       0       0       0
  2199 ;;      Totals:         0       0       0       0       0       0       0
  2200 ;;Total ram usage:        0 bytes
  2201 ;; Hardware stack levels used: 1
  2202 ;; Hardware stack levels required when called: 5
  2203 ;; This function calls:
  2204 ;;		_delayMicro
  2205 ;;		_delayMili
  2206 ;;		_lcdCommand
  2207 ;;		_pinMode
  2208 ;;		_pushNibble
  2209 ;;		_soInit
  2210 ;; This function is called by:
  2211 ;;		_main
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text10
  2216  0015D2                     __ptext10:
  2217                           	callstack 0
  2218  0015D2                     _lcdInit:
  2219                           	callstack 25
  2220  0015D2                     
  2221                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  2222  0015D2  0E00               	movlw	0
  2223  0015D4  6E02               	movwf	(pinMode@pin+1)^0,c
  2224  0015D6  0E1C               	movlw	28
  2225  0015D8  6E01               	movwf	pinMode@pin^0,c
  2226  0015DA  0E00               	movlw	0
  2227  0015DC  6E04               	movwf	(pinMode@type+1)^0,c
  2228  0015DE  0E00               	movlw	0
  2229  0015E0  6E03               	movwf	pinMode@type^0,c
  2230  0015E2  EC06  F006         	call	_pinMode	;wreg free
  2231                           
  2232                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  2233  0015E6  0E00               	movlw	0
  2234  0015E8  6E02               	movwf	(pinMode@pin+1)^0,c
  2235  0015EA  0E1D               	movlw	29
  2236  0015EC  6E01               	movwf	pinMode@pin^0,c
  2237  0015EE  0E00               	movlw	0
  2238  0015F0  6E04               	movwf	(pinMode@type+1)^0,c
  2239  0015F2  0E00               	movlw	0
  2240  0015F4  6E03               	movwf	pinMode@type^0,c
  2241  0015F6  EC06  F006         	call	_pinMode	;wreg free
  2242                           
  2243                           ;lcd.c: 75:  soInit();
  2244  0015FA  EC42  F00D         	call	_soInit	;wreg free
  2245                           
  2246                           ;lcd.c: 76:  delayMili(15);
  2247  0015FE  0E00               	movlw	0
  2248  001600  6E02               	movwf	(delayMili@a+1)^0,c
  2249  001602  0E0F               	movlw	15
  2250  001604  6E01               	movwf	delayMili@a^0,c
  2251  001606  EC7A  F00D         	call	_delayMili	;wreg free
  2252                           
  2253                           ;lcd.c: 78:  pushNibble(0x03, 0);
  2254  00160A  0E00               	movlw	0
  2255  00160C  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2256  00160E  0E00               	movlw	0
  2257  001610  6E0A               	movwf	pushNibble@rs^0,c
  2258  001612  0E03               	movlw	3
  2259  001614  ECBC  F00D         	call	_pushNibble
  2260                           
  2261                           ;lcd.c: 79:  delayMili(5);
  2262  001618  0E00               	movlw	0
  2263  00161A  6E02               	movwf	(delayMili@a+1)^0,c
  2264  00161C  0E05               	movlw	5
  2265  00161E  6E01               	movwf	delayMili@a^0,c
  2266  001620  EC7A  F00D         	call	_delayMili	;wreg free
  2267                           
  2268                           ;lcd.c: 80:  pushNibble(0x03, 0);
  2269  001624  0E00               	movlw	0
  2270  001626  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2271  001628  0E00               	movlw	0
  2272  00162A  6E0A               	movwf	pushNibble@rs^0,c
  2273  00162C  0E03               	movlw	3
  2274  00162E  ECBC  F00D         	call	_pushNibble
  2275  001632                     
  2276                           ;lcd.c: 81:  delayMicro(160);
  2277  001632  0E00               	movlw	0
  2278  001634  6E02               	movwf	(delayMicro@a+1)^0,c
  2279  001636  0EA0               	movlw	160
  2280  001638  6E01               	movwf	delayMicro@a^0,c
  2281  00163A  EC22  F00E         	call	_delayMicro	;wreg free
  2282  00163E                     
  2283                           ;lcd.c: 82:  pushNibble(0x03, 0);
  2284  00163E  0E00               	movlw	0
  2285  001640  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2286  001642  0E00               	movlw	0
  2287  001644  6E0A               	movwf	pushNibble@rs^0,c
  2288  001646  0E03               	movlw	3
  2289  001648  ECBC  F00D         	call	_pushNibble
  2290                           
  2291                           ;lcd.c: 83:  delayMicro(160);
  2292  00164C  0E00               	movlw	0
  2293  00164E  6E02               	movwf	(delayMicro@a+1)^0,c
  2294  001650  0EA0               	movlw	160
  2295  001652  6E01               	movwf	delayMicro@a^0,c
  2296  001654  EC22  F00E         	call	_delayMicro	;wreg free
  2297  001658                     
  2298                           ;lcd.c: 85:  pushNibble(0x02, 0);
  2299  001658  0E00               	movlw	0
  2300  00165A  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2301  00165C  0E00               	movlw	0
  2302  00165E  6E0A               	movwf	pushNibble@rs^0,c
  2303  001660  0E02               	movlw	2
  2304  001662  ECBC  F00D         	call	_pushNibble
  2305  001666                     
  2306                           ;lcd.c: 86:  delayMili(10);
  2307  001666  0E00               	movlw	0
  2308  001668  6E02               	movwf	(delayMili@a+1)^0,c
  2309  00166A  0E0A               	movlw	10
  2310  00166C  6E01               	movwf	delayMili@a^0,c
  2311  00166E  EC7A  F00D         	call	_delayMili	;wreg free
  2312  001672                     
  2313                           ;lcd.c: 88:  lcdCommand(0x28);
  2314  001672  0E28               	movlw	40
  2315  001674  EC02  F00E         	call	_lcdCommand
  2316  001678                     
  2317                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  2318  001678  0E0C               	movlw	12
  2319  00167A  EC02  F00E         	call	_lcdCommand
  2320  00167E                     
  2321                           ;lcd.c: 90:  lcdCommand(0x01);
  2322  00167E  0E01               	movlw	1
  2323  001680  EC02  F00E         	call	_lcdCommand
  2324  001684  0012               	return		;funcret
  2325  001686                     __end_of_lcdInit:
  2326                           	callstack 0
  2327                           
  2328 ;; *************** function _pushNibble *****************
  2329 ;; Defined at:
  2330 ;;		line 25 in file "lcd.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  value           1    wreg     unsigned char 
  2333 ;;  rs              2    9[COMRAM] int 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  value           1   11[COMRAM] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2345 ;;      Params:         2       0       0       0       0       0       0
  2346 ;;      Locals:         1       0       0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0
  2348 ;;      Totals:         3       0       0       0       0       0       0
  2349 ;;Total ram usage:        3 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 3
  2352 ;; This function calls:
  2353 ;;		_digitalWrite
  2354 ;;		_pulseEnablePin
  2355 ;;		_soWrite
  2356 ;; This function is called by:
  2357 ;;		_lcdInit
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text11
  2362  001B78                     __ptext11:
  2363                           	callstack 0
  2364  001B78                     _pushNibble:
  2365                           	callstack 26
  2366                           
  2367                           ;incstack = 0
  2368                           ;pushNibble@value stored from wreg
  2369  001B78  6E0C               	movwf	pushNibble@value^0,c
  2370  001B7A                     
  2371                           ;lcd.c: 26:  soWrite(value);
  2372  001B7A  C00C  F007         	movff	pushNibble@value,soWrite@value
  2373  001B7E  6A08               	clrf	(soWrite@value+1)^0,c
  2374  001B80  EC98  F00C         	call	_soWrite	;wreg free
  2375                           
  2376                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  2377  001B84  0E00               	movlw	0
  2378  001B86  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2379  001B88  0E1D               	movlw	29
  2380  001B8A  6E01               	movwf	digitalWrite@pin^0,c
  2381  001B8C  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  2382  001B90  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  2383  001B94  EC2D  F007         	call	_digitalWrite	;wreg free
  2384                           
  2385                           ;lcd.c: 28:  pulseEnablePin();
  2386  001B98  EC02  F00D         	call	_pulseEnablePin	;wreg free
  2387  001B9C  0012               	return		;funcret
  2388  001B9E                     __end_of_pushNibble:
  2389                           	callstack 0
  2390                           
  2391 ;; *************** function _lcdCommand *****************
  2392 ;; Defined at:
  2393 ;;		line 40 in file "lcd.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  value           1    wreg     unsigned char 
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  value           1   13[COMRAM] unsigned char 
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, status,2, status,0, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2407 ;;      Params:         0       0       0       0       0       0       0
  2408 ;;      Locals:         1       0       0       0       0       0       0
  2409 ;;      Temps:          0       0       0       0       0       0       0
  2410 ;;      Totals:         1       0       0       0       0       0       0
  2411 ;;Total ram usage:        1 bytes
  2412 ;; Hardware stack levels used: 1
  2413 ;; Hardware stack levels required when called: 4
  2414 ;; This function calls:
  2415 ;;		_delayMili
  2416 ;;		_pushByte
  2417 ;; This function is called by:
  2418 ;;		_main
  2419 ;;		_lcdInit
  2420 ;;		_lcdPosition
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text12
  2425  001C04                     __ptext12:
  2426                           	callstack 0
  2427  001C04                     _lcdCommand:
  2428                           	callstack 25
  2429                           
  2430                           ;incstack = 0
  2431                           ;lcdCommand@value stored from wreg
  2432  001C04  6E0E               	movwf	lcdCommand@value^0,c
  2433  001C06                     
  2434                           ;lcd.c: 41:  pushByte(value, 0);
  2435  001C06  0E00               	movlw	0
  2436  001C08  6E0B               	movwf	(pushByte@rs+1)^0,c
  2437  001C0A  0E00               	movlw	0
  2438  001C0C  6E0A               	movwf	pushByte@rs^0,c
  2439  001C0E  500E               	movf	lcdCommand@value^0,w,c
  2440  001C10  EC6B  F00C         	call	_pushByte
  2441                           
  2442                           ;lcd.c: 42:  delayMili(2);
  2443  001C14  0E00               	movlw	0
  2444  001C16  6E02               	movwf	(delayMili@a+1)^0,c
  2445  001C18  0E02               	movlw	2
  2446  001C1A  6E01               	movwf	delayMili@a^0,c
  2447  001C1C  EC7A  F00D         	call	_delayMili	;wreg free
  2448  001C20  0012               	return		;funcret
  2449  001C22                     __end_of_lcdCommand:
  2450                           	callstack 0
  2451                           
  2452 ;; *************** function _pushByte *****************
  2453 ;; Defined at:
  2454 ;;		line 31 in file "lcd.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  value           1    wreg     unsigned char 
  2457 ;;  rs              2    9[COMRAM] int 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  value           1   12[COMRAM] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2469 ;;      Params:         2       0       0       0       0       0       0
  2470 ;;      Locals:         1       0       0       0       0       0       0
  2471 ;;      Temps:          1       0       0       0       0       0       0
  2472 ;;      Totals:         4       0       0       0       0       0       0
  2473 ;;Total ram usage:        4 bytes
  2474 ;; Hardware stack levels used: 1
  2475 ;; Hardware stack levels required when called: 3
  2476 ;; This function calls:
  2477 ;;		_digitalWrite
  2478 ;;		_pulseEnablePin
  2479 ;;		_soWrite
  2480 ;; This function is called by:
  2481 ;;		_lcdCommand
  2482 ;;		_lcdChar
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text13
  2487  0018D6                     __ptext13:
  2488                           	callstack 0
  2489  0018D6                     _pushByte:
  2490                           	callstack 25
  2491                           
  2492                           ;incstack = 0
  2493                           ;pushByte@value stored from wreg
  2494  0018D6  6E0D               	movwf	pushByte@value^0,c
  2495  0018D8                     
  2496                           ;lcd.c: 32:  soWrite(value >> 4);
  2497  0018D8  C00D  F00C         	movff	pushByte@value,??_pushByte
  2498  0018DC  3A0C               	swapf	??_pushByte^0,f,c
  2499  0018DE  0E0F               	movlw	15
  2500  0018E0  160C               	andwf	??_pushByte^0,f,c
  2501  0018E2  500C               	movf	??_pushByte^0,w,c
  2502  0018E4  6E07               	movwf	soWrite@value^0,c
  2503  0018E6  6A08               	clrf	(soWrite@value+1)^0,c
  2504  0018E8  EC98  F00C         	call	_soWrite	;wreg free
  2505                           
  2506                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  2507  0018EC  0E00               	movlw	0
  2508  0018EE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2509  0018F0  0E1D               	movlw	29
  2510  0018F2  6E01               	movwf	digitalWrite@pin^0,c
  2511  0018F4  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  2512  0018F8  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  2513  0018FC  EC2D  F007         	call	_digitalWrite	;wreg free
  2514                           
  2515                           ;lcd.c: 34:  pulseEnablePin();
  2516  001900  EC02  F00D         	call	_pulseEnablePin	;wreg free
  2517                           
  2518                           ;lcd.c: 36:  soWrite(value & 0x0F);
  2519  001904  C00D  F00C         	movff	pushByte@value,??_pushByte
  2520  001908  0E0F               	movlw	15
  2521  00190A  160C               	andwf	??_pushByte^0,f,c
  2522  00190C  500C               	movf	??_pushByte^0,w,c
  2523  00190E  6E07               	movwf	soWrite@value^0,c
  2524  001910  6A08               	clrf	(soWrite@value+1)^0,c
  2525  001912  EC98  F00C         	call	_soWrite	;wreg free
  2526                           
  2527                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  2528  001916  0E00               	movlw	0
  2529  001918  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2530  00191A  0E1D               	movlw	29
  2531  00191C  6E01               	movwf	digitalWrite@pin^0,c
  2532  00191E  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  2533  001922  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  2534  001926  EC2D  F007         	call	_digitalWrite	;wreg free
  2535                           
  2536                           ;lcd.c: 38:  pulseEnablePin();
  2537  00192A  EC02  F00D         	call	_pulseEnablePin	;wreg free
  2538  00192E  0012               	return		;funcret
  2539  001930                     __end_of_pushByte:
  2540                           	callstack 0
  2541                           
  2542 ;; *************** function _pulseEnablePin *****************
  2543 ;; Defined at:
  2544 ;;		line 18 in file "lcd.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;		None
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;		None
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg, status,2, status,0, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2558 ;;      Params:         0       0       0       0       0       0       0
  2559 ;;      Locals:         0       0       0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0       0       0
  2561 ;;      Totals:         0       0       0       0       0       0       0
  2562 ;;Total ram usage:        0 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; Hardware stack levels required when called: 1
  2565 ;; This function calls:
  2566 ;;		_delayMicro
  2567 ;;		_digitalWrite
  2568 ;; This function is called by:
  2569 ;;		_pushNibble
  2570 ;;		_pushByte
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text14
  2575  001A04                     __ptext14:
  2576                           	callstack 0
  2577  001A04                     _pulseEnablePin:
  2578                           	callstack 26
  2579  001A04                     
  2580                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  2581  001A04  0E00               	movlw	0
  2582  001A06  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2583  001A08  0E1C               	movlw	28
  2584  001A0A  6E01               	movwf	digitalWrite@pin^0,c
  2585  001A0C  0E00               	movlw	0
  2586  001A0E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2587  001A10  0E01               	movlw	1
  2588  001A12  6E03               	movwf	digitalWrite@value^0,c
  2589  001A14  EC2D  F007         	call	_digitalWrite	;wreg free
  2590  001A18                     
  2591                           ;lcd.c: 20:  delayMicro(5);
  2592  001A18  0E00               	movlw	0
  2593  001A1A  6E02               	movwf	(delayMicro@a+1)^0,c
  2594  001A1C  0E05               	movlw	5
  2595  001A1E  6E01               	movwf	delayMicro@a^0,c
  2596  001A20  EC22  F00E         	call	_delayMicro	;wreg free
  2597  001A24                     
  2598                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  2599  001A24  0E00               	movlw	0
  2600  001A26  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2601  001A28  0E1C               	movlw	28
  2602  001A2A  6E01               	movwf	digitalWrite@pin^0,c
  2603  001A2C  0E00               	movlw	0
  2604  001A2E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2605  001A30  0E00               	movlw	0
  2606  001A32  6E03               	movwf	digitalWrite@value^0,c
  2607  001A34  EC2D  F007         	call	_digitalWrite	;wreg free
  2608                           
  2609                           ;lcd.c: 22:  delayMicro(5);
  2610  001A38  0E00               	movlw	0
  2611  001A3A  6E02               	movwf	(delayMicro@a+1)^0,c
  2612  001A3C  0E05               	movlw	5
  2613  001A3E  6E01               	movwf	delayMicro@a^0,c
  2614  001A40  EC22  F00E         	call	_delayMicro	;wreg free
  2615  001A44  0012               	return		;funcret
  2616  001A46                     __end_of_pulseEnablePin:
  2617                           	callstack 0
  2618                           
  2619 ;; *************** function _delayMicro *****************
  2620 ;; Defined at:
  2621 ;;		line 5 in file "lcd.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  a               2    0[COMRAM] int 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  i               2    0        volatile int 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		None
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2635 ;;      Params:         2       0       0       0       0       0       0
  2636 ;;      Locals:         0       0       0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0
  2638 ;;      Totals:         2       0       0       0       0       0       0
  2639 ;;Total ram usage:        2 bytes
  2640 ;; Hardware stack levels used: 1
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_pulseEnablePin
  2645 ;;		_lcdChar
  2646 ;;		_lcdInit
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           	psect	text15
  2651  001C44                     __ptext15:
  2652                           	callstack 0
  2653  001C44                     _delayMicro:
  2654                           	callstack 26
  2655  001C44  0012               	return		;funcret
  2656  001C46                     __end_of_delayMicro:
  2657                           	callstack 0
  2658                           
  2659 ;; *************** function _delayMili *****************
  2660 ;; Defined at:
  2661 ;;		line 10 in file "lcd.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  a               2    0[COMRAM] int 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  i               2    3[COMRAM] volatile int 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      void 
  2668 ;; Registers used:
  2669 ;;		wreg, status,2, status,0
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2675 ;;      Params:         2       0       0       0       0       0       0
  2676 ;;      Locals:         2       0       0       0       0       0       0
  2677 ;;      Temps:          1       0       0       0       0       0       0
  2678 ;;      Totals:         5       0       0       0       0       0       0
  2679 ;;Total ram usage:        5 bytes
  2680 ;; Hardware stack levels used: 1
  2681 ;; This function calls:
  2682 ;;		Nothing
  2683 ;; This function is called by:
  2684 ;;		_lcdCommand
  2685 ;;		_lcdInit
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text16
  2690  001AF4                     __ptext16:
  2691                           	callstack 0
  2692  001AF4                     _delayMili:
  2693                           	callstack 28
  2694  001AF4                     
  2695                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  2696  001AF4  0E00               	movlw	0
  2697  001AF6  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  2698  001AF8  0E00               	movlw	0
  2699  001AFA  6E04               	movwf	delayMili@i^0,c	;volatile
  2700  001AFC  EF82  F00D         	goto	l1751
  2701  001B00                     l1749:
  2702                           
  2703                           ;lcd.c: 15:  }
  2704  001B00  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  2705  001B02  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  2706  001B04                     l1751:
  2707  001B04  5001               	movf	delayMili@a^0,w,c
  2708  001B06  5C04               	subwf	delayMili@i^0,w,c	;volatile
  2709  001B08  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  2710  001B0A  0A80               	xorlw	128
  2711  001B0C  6E03               	movwf	??_delayMili^0,c
  2712  001B0E  5002               	movf	(delayMili@a+1)^0,w,c
  2713  001B10  0A80               	xorlw	128
  2714  001B12  5803               	subwfb	??_delayMili^0,w,c
  2715  001B14  A0D8               	btfss	status,0,c
  2716  001B16  EF8F  F00D         	goto	u1591
  2717  001B1A  EF91  F00D         	goto	u1590
  2718  001B1E                     u1591:
  2719  001B1E  EF80  F00D         	goto	l1749
  2720  001B22                     u1590:
  2721  001B22  0012               	return		;funcret
  2722  001B24                     __end_of_delayMili:
  2723                           	callstack 0
  2724                           
  2725 ;; *************** function _kpRead *****************
  2726 ;; Defined at:
  2727 ;;		line 14 in file "keypad.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  2    0[COMRAM] unsigned int 
  2734 ;; Registers used:
  2735 ;;		None
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2741 ;;      Params:         2       0       0       0       0       0       0
  2742 ;;      Locals:         0       0       0       0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0       0       0
  2744 ;;      Totals:         2       0       0       0       0       0       0
  2745 ;;Total ram usage:        2 bytes
  2746 ;; Hardware stack levels used: 1
  2747 ;; This function calls:
  2748 ;;		Nothing
  2749 ;; This function is called by:
  2750 ;;		_main
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text17
  2755  001C32                     __ptext17:
  2756                           	callstack 0
  2757  001C32                     _kpRead:
  2758                           	callstack 30
  2759  001C32                     
  2760                           ;keypad.c: 15:     return keys;
  2761  001C32  C021  F001         	movff	_keys,?_kpRead
  2762  001C36  C022  F002         	movff	_keys+1,?_kpRead+1
  2763  001C3A  0012               	return		;funcret
  2764  001C3C                     __end_of_kpRead:
  2765                           	callstack 0
  2766                           
  2767 ;; *************** function _kpInit *****************
  2768 ;; Defined at:
  2769 ;;		line 54 in file "keypad.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;		None
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2783 ;;      Params:         0       0       0       0       0       0       0
  2784 ;;      Locals:         0       0       0       0       0       0       0
  2785 ;;      Temps:          0       0       0       0       0       0       0
  2786 ;;      Totals:         0       0       0       0       0       0       0
  2787 ;;Total ram usage:        0 bytes
  2788 ;; Hardware stack levels used: 1
  2789 ;; Hardware stack levels required when called: 2
  2790 ;; This function calls:
  2791 ;;		_pinMode
  2792 ;;		_soInit
  2793 ;; This function is called by:
  2794 ;;		_main
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text18
  2799  001AC2                     __ptext18:
  2800                           	callstack 0
  2801  001AC2                     _kpInit:
  2802                           	callstack 28
  2803  001AC2                     
  2804                           ;keypad.c: 55:   soInit();
  2805  001AC2  EC42  F00D         	call	_soInit	;wreg free
  2806                           
  2807                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  2808  001AC6  0E00               	movlw	0
  2809  001AC8  6E02               	movwf	(pinMode@pin+1)^0,c
  2810  001ACA  0E0A               	movlw	10
  2811  001ACC  6E01               	movwf	pinMode@pin^0,c
  2812  001ACE  0E00               	movlw	0
  2813  001AD0  6E04               	movwf	(pinMode@type+1)^0,c
  2814  001AD2  0E01               	movlw	1
  2815  001AD4  6E03               	movwf	pinMode@type^0,c
  2816  001AD6  EC06  F006         	call	_pinMode	;wreg free
  2817                           
  2818                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  2819  001ADA  0E00               	movlw	0
  2820  001ADC  6E02               	movwf	(pinMode@pin+1)^0,c
  2821  001ADE  0E09               	movlw	9
  2822  001AE0  6E01               	movwf	pinMode@pin^0,c
  2823  001AE2  0E00               	movlw	0
  2824  001AE4  6E04               	movwf	(pinMode@type+1)^0,c
  2825  001AE6  0E01               	movlw	1
  2826  001AE8  6E03               	movwf	pinMode@type^0,c
  2827  001AEA  EC06  F006         	call	_pinMode	;wreg free
  2828  001AEE                     
  2829                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  2830  001AEE  0E0C               	movlw	12
  2831  001AF0  6EC1               	movwf	193,c	;volatile
  2832  001AF2  0012               	return		;funcret
  2833  001AF4                     __end_of_kpInit:
  2834                           	callstack 0
  2835                           
  2836 ;; *************** function _soInit *****************
  2837 ;; Defined at:
  2838 ;;		line 3 in file "so.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;		None
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;		None
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      void 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2852 ;;      Params:         0       0       0       0       0       0       0
  2853 ;;      Locals:         0       0       0       0       0       0       0
  2854 ;;      Temps:          0       0       0       0       0       0       0
  2855 ;;      Totals:         0       0       0       0       0       0       0
  2856 ;;Total ram usage:        0 bytes
  2857 ;; Hardware stack levels used: 1
  2858 ;; Hardware stack levels required when called: 1
  2859 ;; This function calls:
  2860 ;;		_pinMode
  2861 ;; This function is called by:
  2862 ;;		_kpInit
  2863 ;;		_lcdInit
  2864 ;;		_ssdInit
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text19
  2869  001A84                     __ptext19:
  2870                           	callstack 0
  2871  001A84                     _soInit:
  2872                           	callstack 28
  2873  001A84                     
  2874                           ;so.c: 4:  pinMode(PIN_D7, 0);
  2875  001A84  0E00               	movlw	0
  2876  001A86  6E02               	movwf	(pinMode@pin+1)^0,c
  2877  001A88  0E1F               	movlw	31
  2878  001A8A  6E01               	movwf	pinMode@pin^0,c
  2879  001A8C  0E00               	movlw	0
  2880  001A8E  6E04               	movwf	(pinMode@type+1)^0,c
  2881  001A90  0E00               	movlw	0
  2882  001A92  6E03               	movwf	pinMode@type^0,c
  2883  001A94  EC06  F006         	call	_pinMode	;wreg free
  2884                           
  2885                           ;so.c: 5:  pinMode(PIN_B0, 0);
  2886  001A98  0E00               	movlw	0
  2887  001A9A  6E02               	movwf	(pinMode@pin+1)^0,c
  2888  001A9C  0E08               	movlw	8
  2889  001A9E  6E01               	movwf	pinMode@pin^0,c
  2890  001AA0  0E00               	movlw	0
  2891  001AA2  6E04               	movwf	(pinMode@type+1)^0,c
  2892  001AA4  0E00               	movlw	0
  2893  001AA6  6E03               	movwf	pinMode@type^0,c
  2894  001AA8  EC06  F006         	call	_pinMode	;wreg free
  2895                           
  2896                           ;so.c: 6:  pinMode(PIN_D6, 0);
  2897  001AAC  0E00               	movlw	0
  2898  001AAE  6E02               	movwf	(pinMode@pin+1)^0,c
  2899  001AB0  0E1E               	movlw	30
  2900  001AB2  6E01               	movwf	pinMode@pin^0,c
  2901  001AB4  0E00               	movlw	0
  2902  001AB6  6E04               	movwf	(pinMode@type+1)^0,c
  2903  001AB8  0E00               	movlw	0
  2904  001ABA  6E03               	movwf	pinMode@type^0,c
  2905  001ABC  EC06  F006         	call	_pinMode	;wreg free
  2906  001AC0  0012               	return		;funcret
  2907  001AC2                     __end_of_soInit:
  2908                           	callstack 0
  2909                           
  2910 ;; *************** function _pinMode *****************
  2911 ;; Defined at:
  2912 ;;		line 54 in file "io.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;  pin             2    0[COMRAM] int 
  2915 ;;  type            2    2[COMRAM] int 
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2927 ;;      Params:         4       0       0       0       0       0       0
  2928 ;;      Locals:         0       0       0       0       0       0       0
  2929 ;;      Temps:          2       0       0       0       0       0       0
  2930 ;;      Totals:         6       0       0       0       0       0       0
  2931 ;;Total ram usage:        6 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; This function calls:
  2934 ;;		Nothing
  2935 ;; This function is called by:
  2936 ;;		_kpInit
  2937 ;;		_lcdInit
  2938 ;;		_soInit
  2939 ;;		_rgbInit
  2940 ;;		_ssdInit
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text20
  2945  000C0C                     __ptext20:
  2946                           	callstack 0
  2947  000C0C                     _pinMode:
  2948                           	callstack 29
  2949  000C0C                     
  2950                           ;io.c: 56:     if(pin <8){
  2951  000C0C  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2952  000C0E  EF14  F006         	goto	u1390
  2953  000C12  5002               	movf	(pinMode@pin+1)^0,w,c
  2954  000C14  E107               	bnz	u1391
  2955  000C16  0E08               	movlw	8
  2956  000C18  5C01               	subwf	pinMode@pin^0,w,c
  2957  000C1A  B0D8               	btfsc	status,0,c
  2958  000C1C  EF12  F006         	goto	u1391
  2959  000C20  EF14  F006         	goto	u1390
  2960  000C24                     u1391:
  2961  000C24  EF3E  F006         	goto	l1715
  2962  000C28                     u1390:
  2963  000C28                     
  2964                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  2965  000C28  5003               	movf	pinMode@type^0,w,c
  2966  000C2A  1004               	iorwf	(pinMode@type+1)^0,w,c
  2967  000C2C  B4D8               	btfsc	status,2,c
  2968  000C2E  EF1B  F006         	goto	u1401
  2969  000C32  EF1D  F006         	goto	u1400
  2970  000C36                     u1401:
  2971  000C36  EF2D  F006         	goto	l1713
  2972  000C3A                     u1400:
  2973  000C3A  C001  F005         	movff	pinMode@pin,??_pinMode
  2974  000C3E  0E01               	movlw	1
  2975  000C40  6E06               	movwf	(??_pinMode+1)^0,c
  2976  000C42  2A05               	incf	??_pinMode^0,f,c
  2977  000C44  EF26  F006         	goto	u1414
  2978  000C48                     u1415:
  2979  000C48  90D8               	bcf	status,0,c
  2980  000C4A  3606               	rlcf	(??_pinMode+1)^0,f,c
  2981  000C4C                     u1414:
  2982  000C4C  2E05               	decfsz	??_pinMode^0,f,c
  2983  000C4E  EF24  F006         	goto	u1415
  2984  000C52  5006               	movf	(??_pinMode+1)^0,w,c
  2985  000C54  1292               	iorwf	146,f,c	;volatile
  2986  000C56  EF2C  F007         	goto	l272
  2987  000C5A                     l1713:
  2988  000C5A  C001  F005         	movff	pinMode@pin,??_pinMode
  2989  000C5E  0E01               	movlw	1
  2990  000C60  6E06               	movwf	(??_pinMode+1)^0,c
  2991  000C62  2A05               	incf	??_pinMode^0,f,c
  2992  000C64  EF36  F006         	goto	u1424
  2993  000C68                     u1425:
  2994  000C68  90D8               	bcf	status,0,c
  2995  000C6A  3606               	rlcf	(??_pinMode+1)^0,f,c
  2996  000C6C                     u1424:
  2997  000C6C  2E05               	decfsz	??_pinMode^0,f,c
  2998  000C6E  EF34  F006         	goto	u1425
  2999  000C72  5006               	movf	(??_pinMode+1)^0,w,c
  3000  000C74  0AFF               	xorlw	255
  3001  000C76  1692               	andwf	146,f,c	;volatile
  3002  000C78  EF2C  F007         	goto	l272
  3003  000C7C                     l1715:
  3004  000C7C  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3005  000C7E  EF4C  F006         	goto	u1430
  3006  000C82  5002               	movf	(pinMode@pin+1)^0,w,c
  3007  000C84  E107               	bnz	u1431
  3008  000C86  0E10               	movlw	16
  3009  000C88  5C01               	subwf	pinMode@pin^0,w,c
  3010  000C8A  B0D8               	btfsc	status,0,c
  3011  000C8C  EF4A  F006         	goto	u1431
  3012  000C90  EF4C  F006         	goto	u1430
  3013  000C94                     u1431:
  3014  000C94  EF7A  F006         	goto	l1723
  3015  000C98                     u1430:
  3016  000C98                     
  3017                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  3018  000C98  5003               	movf	pinMode@type^0,w,c
  3019  000C9A  1004               	iorwf	(pinMode@type+1)^0,w,c
  3020  000C9C  B4D8               	btfsc	status,2,c
  3021  000C9E  EF53  F006         	goto	u1441
  3022  000CA2  EF55  F006         	goto	u1440
  3023  000CA6                     u1441:
  3024  000CA6  EF67  F006         	goto	l1721
  3025  000CAA                     u1440:
  3026  000CAA  C001  F005         	movff	pinMode@pin,??_pinMode
  3027  000CAE  0EF8               	movlw	-8
  3028  000CB0  2605               	addwf	??_pinMode^0,f,c
  3029  000CB2  0E01               	movlw	1
  3030  000CB4  6E06               	movwf	(??_pinMode+1)^0,c
  3031  000CB6  2A05               	incf	??_pinMode^0,f,c
  3032  000CB8  EF60  F006         	goto	u1454
  3033  000CBC                     u1455:
  3034  000CBC  90D8               	bcf	status,0,c
  3035  000CBE  3606               	rlcf	(??_pinMode+1)^0,f,c
  3036  000CC0                     u1454:
  3037  000CC0  2E05               	decfsz	??_pinMode^0,f,c
  3038  000CC2  EF5E  F006         	goto	u1455
  3039  000CC6  5006               	movf	(??_pinMode+1)^0,w,c
  3040  000CC8  1293               	iorwf	147,f,c	;volatile
  3041  000CCA  EF2C  F007         	goto	l272
  3042  000CCE                     l1721:
  3043  000CCE  C001  F005         	movff	pinMode@pin,??_pinMode
  3044  000CD2  0EF8               	movlw	-8
  3045  000CD4  2605               	addwf	??_pinMode^0,f,c
  3046  000CD6  0E01               	movlw	1
  3047  000CD8  6E06               	movwf	(??_pinMode+1)^0,c
  3048  000CDA  2A05               	incf	??_pinMode^0,f,c
  3049  000CDC  EF72  F006         	goto	u1464
  3050  000CE0                     u1465:
  3051  000CE0  90D8               	bcf	status,0,c
  3052  000CE2  3606               	rlcf	(??_pinMode+1)^0,f,c
  3053  000CE4                     u1464:
  3054  000CE4  2E05               	decfsz	??_pinMode^0,f,c
  3055  000CE6  EF70  F006         	goto	u1465
  3056  000CEA  5006               	movf	(??_pinMode+1)^0,w,c
  3057  000CEC  0AFF               	xorlw	255
  3058  000CEE  1693               	andwf	147,f,c	;volatile
  3059  000CF0  EF2C  F007         	goto	l272
  3060  000CF4                     l1723:
  3061  000CF4  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3062  000CF6  EF88  F006         	goto	u1470
  3063  000CFA  5002               	movf	(pinMode@pin+1)^0,w,c
  3064  000CFC  E107               	bnz	u1471
  3065  000CFE  0E18               	movlw	24
  3066  000D00  5C01               	subwf	pinMode@pin^0,w,c
  3067  000D02  B0D8               	btfsc	status,0,c
  3068  000D04  EF86  F006         	goto	u1471
  3069  000D08  EF88  F006         	goto	u1470
  3070  000D0C                     u1471:
  3071  000D0C  EFB6  F006         	goto	l1731
  3072  000D10                     u1470:
  3073  000D10                     
  3074                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  3075  000D10  5003               	movf	pinMode@type^0,w,c
  3076  000D12  1004               	iorwf	(pinMode@type+1)^0,w,c
  3077  000D14  B4D8               	btfsc	status,2,c
  3078  000D16  EF8F  F006         	goto	u1481
  3079  000D1A  EF91  F006         	goto	u1480
  3080  000D1E                     u1481:
  3081  000D1E  EFA3  F006         	goto	l1729
  3082  000D22                     u1480:
  3083  000D22  C001  F005         	movff	pinMode@pin,??_pinMode
  3084  000D26  0EF0               	movlw	-16
  3085  000D28  2605               	addwf	??_pinMode^0,f,c
  3086  000D2A  0E01               	movlw	1
  3087  000D2C  6E06               	movwf	(??_pinMode+1)^0,c
  3088  000D2E  2A05               	incf	??_pinMode^0,f,c
  3089  000D30  EF9C  F006         	goto	u1494
  3090  000D34                     u1495:
  3091  000D34  90D8               	bcf	status,0,c
  3092  000D36  3606               	rlcf	(??_pinMode+1)^0,f,c
  3093  000D38                     u1494:
  3094  000D38  2E05               	decfsz	??_pinMode^0,f,c
  3095  000D3A  EF9A  F006         	goto	u1495
  3096  000D3E  5006               	movf	(??_pinMode+1)^0,w,c
  3097  000D40  1294               	iorwf	148,f,c	;volatile
  3098  000D42  EF2C  F007         	goto	l272
  3099  000D46                     l1729:
  3100  000D46  C001  F005         	movff	pinMode@pin,??_pinMode
  3101  000D4A  0EF0               	movlw	-16
  3102  000D4C  2605               	addwf	??_pinMode^0,f,c
  3103  000D4E  0E01               	movlw	1
  3104  000D50  6E06               	movwf	(??_pinMode+1)^0,c
  3105  000D52  2A05               	incf	??_pinMode^0,f,c
  3106  000D54  EFAE  F006         	goto	u1504
  3107  000D58                     u1505:
  3108  000D58  90D8               	bcf	status,0,c
  3109  000D5A  3606               	rlcf	(??_pinMode+1)^0,f,c
  3110  000D5C                     u1504:
  3111  000D5C  2E05               	decfsz	??_pinMode^0,f,c
  3112  000D5E  EFAC  F006         	goto	u1505
  3113  000D62  5006               	movf	(??_pinMode+1)^0,w,c
  3114  000D64  0AFF               	xorlw	255
  3115  000D66  1694               	andwf	148,f,c	;volatile
  3116  000D68  EF2C  F007         	goto	l272
  3117  000D6C                     l1731:
  3118  000D6C  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3119  000D6E  EFC4  F006         	goto	u1510
  3120  000D72  5002               	movf	(pinMode@pin+1)^0,w,c
  3121  000D74  E107               	bnz	u1511
  3122  000D76  0E20               	movlw	32
  3123  000D78  5C01               	subwf	pinMode@pin^0,w,c
  3124  000D7A  B0D8               	btfsc	status,0,c
  3125  000D7C  EFC2  F006         	goto	u1511
  3126  000D80  EFC4  F006         	goto	u1510
  3127  000D84                     u1511:
  3128  000D84  EFF2  F006         	goto	l1739
  3129  000D88                     u1510:
  3130  000D88                     
  3131                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  3132  000D88  5003               	movf	pinMode@type^0,w,c
  3133  000D8A  1004               	iorwf	(pinMode@type+1)^0,w,c
  3134  000D8C  B4D8               	btfsc	status,2,c
  3135  000D8E  EFCB  F006         	goto	u1521
  3136  000D92  EFCD  F006         	goto	u1520
  3137  000D96                     u1521:
  3138  000D96  EFDF  F006         	goto	l1737
  3139  000D9A                     u1520:
  3140  000D9A  C001  F005         	movff	pinMode@pin,??_pinMode
  3141  000D9E  0EE8               	movlw	-24
  3142  000DA0  2605               	addwf	??_pinMode^0,f,c
  3143  000DA2  0E01               	movlw	1
  3144  000DA4  6E06               	movwf	(??_pinMode+1)^0,c
  3145  000DA6  2A05               	incf	??_pinMode^0,f,c
  3146  000DA8  EFD8  F006         	goto	u1534
  3147  000DAC                     u1535:
  3148  000DAC  90D8               	bcf	status,0,c
  3149  000DAE  3606               	rlcf	(??_pinMode+1)^0,f,c
  3150  000DB0                     u1534:
  3151  000DB0  2E05               	decfsz	??_pinMode^0,f,c
  3152  000DB2  EFD6  F006         	goto	u1535
  3153  000DB6  5006               	movf	(??_pinMode+1)^0,w,c
  3154  000DB8  1295               	iorwf	149,f,c	;volatile
  3155  000DBA  EF2C  F007         	goto	l272
  3156  000DBE                     l1737:
  3157  000DBE  C001  F005         	movff	pinMode@pin,??_pinMode
  3158  000DC2  0EE8               	movlw	-24
  3159  000DC4  2605               	addwf	??_pinMode^0,f,c
  3160  000DC6  0E01               	movlw	1
  3161  000DC8  6E06               	movwf	(??_pinMode+1)^0,c
  3162  000DCA  2A05               	incf	??_pinMode^0,f,c
  3163  000DCC  EFEA  F006         	goto	u1544
  3164  000DD0                     u1545:
  3165  000DD0  90D8               	bcf	status,0,c
  3166  000DD2  3606               	rlcf	(??_pinMode+1)^0,f,c
  3167  000DD4                     u1544:
  3168  000DD4  2E05               	decfsz	??_pinMode^0,f,c
  3169  000DD6  EFE8  F006         	goto	u1545
  3170  000DDA  5006               	movf	(??_pinMode+1)^0,w,c
  3171  000DDC  0AFF               	xorlw	255
  3172  000DDE  1695               	andwf	149,f,c	;volatile
  3173  000DE0  EF2C  F007         	goto	l272
  3174  000DE4                     l1739:
  3175  000DE4  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3176  000DE6  EF00  F007         	goto	u1550
  3177  000DEA  5002               	movf	(pinMode@pin+1)^0,w,c
  3178  000DEC  E107               	bnz	u1551
  3179  000DEE  0E28               	movlw	40
  3180  000DF0  5C01               	subwf	pinMode@pin^0,w,c
  3181  000DF2  B0D8               	btfsc	status,0,c
  3182  000DF4  EFFE  F006         	goto	u1551
  3183  000DF8  EF00  F007         	goto	u1550
  3184  000DFC                     u1551:
  3185  000DFC  EF2C  F007         	goto	l272
  3186  000E00                     u1550:
  3187  000E00                     
  3188                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  3189  000E00  5003               	movf	pinMode@type^0,w,c
  3190  000E02  1004               	iorwf	(pinMode@type+1)^0,w,c
  3191  000E04  B4D8               	btfsc	status,2,c
  3192  000E06  EF07  F007         	goto	u1561
  3193  000E0A  EF09  F007         	goto	u1560
  3194  000E0E                     u1561:
  3195  000E0E  EF1B  F007         	goto	l1745
  3196  000E12                     u1560:
  3197  000E12  C001  F005         	movff	pinMode@pin,??_pinMode
  3198  000E16  0EE0               	movlw	-32
  3199  000E18  2605               	addwf	??_pinMode^0,f,c
  3200  000E1A  0E01               	movlw	1
  3201  000E1C  6E06               	movwf	(??_pinMode+1)^0,c
  3202  000E1E  2A05               	incf	??_pinMode^0,f,c
  3203  000E20  EF14  F007         	goto	u1574
  3204  000E24                     u1575:
  3205  000E24  90D8               	bcf	status,0,c
  3206  000E26  3606               	rlcf	(??_pinMode+1)^0,f,c
  3207  000E28                     u1574:
  3208  000E28  2E05               	decfsz	??_pinMode^0,f,c
  3209  000E2A  EF12  F007         	goto	u1575
  3210  000E2E  5006               	movf	(??_pinMode+1)^0,w,c
  3211  000E30  1296               	iorwf	150,f,c	;volatile
  3212  000E32  EF2C  F007         	goto	l272
  3213  000E36                     l1745:
  3214  000E36  C001  F005         	movff	pinMode@pin,??_pinMode
  3215  000E3A  0EE0               	movlw	-32
  3216  000E3C  2605               	addwf	??_pinMode^0,f,c
  3217  000E3E  0E01               	movlw	1
  3218  000E40  6E06               	movwf	(??_pinMode+1)^0,c
  3219  000E42  2A05               	incf	??_pinMode^0,f,c
  3220  000E44  EF26  F007         	goto	u1584
  3221  000E48                     u1585:
  3222  000E48  90D8               	bcf	status,0,c
  3223  000E4A  3606               	rlcf	(??_pinMode+1)^0,f,c
  3224  000E4C                     u1584:
  3225  000E4C  2E05               	decfsz	??_pinMode^0,f,c
  3226  000E4E  EF24  F007         	goto	u1585
  3227  000E52  5006               	movf	(??_pinMode+1)^0,w,c
  3228  000E54  0AFF               	xorlw	255
  3229  000E56  1696               	andwf	150,f,c	;volatile
  3230  000E58                     l272:
  3231  000E58  0012               	return		;funcret
  3232  000E5A                     __end_of_pinMode:
  3233                           	callstack 0
  3234                           
  3235 ;; *************** function _kpDebounce *****************
  3236 ;; Defined at:
  3237 ;;		line 27 in file "keypad.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;		None
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  i               2   12[COMRAM] int 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3251 ;;      Params:         0       0       0       0       0       0       0
  3252 ;;      Locals:         2       0       0       0       0       0       0
  3253 ;;      Temps:          3       0       0       0       0       0       0
  3254 ;;      Totals:         5       0       0       0       0       0       0
  3255 ;;Total ram usage:        5 bytes
  3256 ;; Hardware stack levels used: 1
  3257 ;; Hardware stack levels required when called: 3
  3258 ;; This function calls:
  3259 ;;		_digitalRead
  3260 ;;		_soWrite
  3261 ;; This function is called by:
  3262 ;;		_main
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	text21
  3267  0013D8                     __ptext21:
  3268                           	callstack 0
  3269  0013D8                     _kpDebounce:
  3270                           	callstack 27
  3271  0013D8                     
  3272                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  3273  0013D8  0E00               	movlw	0
  3274  0013DA  6E20               	movwf	(kpDebounce@newRead+1)^0,c
  3275  0013DC  0E00               	movlw	0
  3276  0013DE  6E1F               	movwf	kpDebounce@newRead^0,c
  3277                           
  3278                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  3279  0013E0  0E00               	movlw	0
  3280  0013E2  6E0E               	movwf	(kpDebounce@i+1)^0,c
  3281  0013E4  0E00               	movlw	0
  3282  0013E6  6E0D               	movwf	kpDebounce@i^0,c
  3283  0013E8                     l1901:
  3284  0013E8  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  3285  0013EA  EF00  F00A         	goto	u1781
  3286  0013EE  500E               	movf	(kpDebounce@i+1)^0,w,c
  3287  0013F0  E109               	bnz	u1780
  3288  0013F2  0E05               	movlw	5
  3289  0013F4  5C0D               	subwf	kpDebounce@i^0,w,c
  3290  0013F6  A0D8               	btfss	status,0,c
  3291  0013F8  EF00  F00A         	goto	u1781
  3292  0013FC  EF02  F00A         	goto	u1780
  3293  001400                     u1781:
  3294  001400  EF04  F00A         	goto	l1905
  3295  001404                     u1780:
  3296  001404  EF65  F00A         	goto	l1917
  3297  001408                     l1905:
  3298                           
  3299                           ;keypad.c: 35:       soWrite(1<<(i+3));
  3300  001408  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3301  00140C  0E03               	movlw	3
  3302  00140E  260A               	addwf	??_kpDebounce^0,f,c
  3303  001410  0E01               	movlw	1
  3304  001412  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3305  001414  0E00               	movlw	0
  3306  001416  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3307  001418  2A0A               	incf	??_kpDebounce^0,f,c
  3308  00141A  EF12  F00A         	goto	u1794
  3309  00141E                     u1795:
  3310  00141E  90D8               	bcf	status,0,c
  3311  001420  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3312  001422  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3313  001424                     u1794:
  3314  001424  2E0A               	decfsz	??_kpDebounce^0,f,c
  3315  001426  EF0F  F00A         	goto	u1795
  3316  00142A  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  3317  00142E  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  3318  001432  EC98  F00C         	call	_soWrite	;wreg free
  3319                           
  3320                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  3321  001436  0E00               	movlw	0
  3322  001438  6E02               	movwf	(digitalRead@pin+1)^0,c
  3323  00143A  0E0A               	movlw	10
  3324  00143C  6E01               	movwf	digitalRead@pin^0,c
  3325  00143E  EC37  F009         	call	_digitalRead	;wreg free
  3326  001442  5001               	movf	?_digitalRead^0,w,c
  3327  001444  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3328  001446  B4D8               	btfsc	status,2,c
  3329  001448  EF28  F00A         	goto	u1801
  3330  00144C  EF2A  F00A         	goto	u1800
  3331  001450                     u1801:
  3332  001450  EF3D  F00A         	goto	l1909
  3333  001454                     u1800:
  3334  001454                     
  3335                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  3336  001454  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3337  001458  0E01               	movlw	1
  3338  00145A  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3339  00145C  0E00               	movlw	0
  3340  00145E  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3341  001460  2A0A               	incf	??_kpDebounce^0,f,c
  3342  001462  EF36  F00A         	goto	u1814
  3343  001466                     u1815:
  3344  001466  90D8               	bcf	status,0,c
  3345  001468  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3346  00146A  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3347  00146C                     u1814:
  3348  00146C  2E0A               	decfsz	??_kpDebounce^0,f,c
  3349  00146E  EF33  F00A         	goto	u1815
  3350  001472  500B               	movf	(??_kpDebounce+1)^0,w,c
  3351  001474  121F               	iorwf	kpDebounce@newRead^0,f,c
  3352  001476  500C               	movf	(??_kpDebounce+2)^0,w,c
  3353  001478  1220               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3354  00147A                     l1909:
  3355                           
  3356                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  3357  00147A  0E00               	movlw	0
  3358  00147C  6E02               	movwf	(digitalRead@pin+1)^0,c
  3359  00147E  0E09               	movlw	9
  3360  001480  6E01               	movwf	digitalRead@pin^0,c
  3361  001482  EC37  F009         	call	_digitalRead	;wreg free
  3362  001486  5001               	movf	?_digitalRead^0,w,c
  3363  001488  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3364  00148A  B4D8               	btfsc	status,2,c
  3365  00148C  EF4A  F00A         	goto	u1821
  3366  001490  EF4C  F00A         	goto	u1820
  3367  001494                     u1821:
  3368  001494  EF61  F00A         	goto	l1913
  3369  001498                     u1820:
  3370  001498                     
  3371                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  3372  001498  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3373  00149C  0E05               	movlw	5
  3374  00149E  260A               	addwf	??_kpDebounce^0,f,c
  3375  0014A0  0E01               	movlw	1
  3376  0014A2  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3377  0014A4  0E00               	movlw	0
  3378  0014A6  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3379  0014A8  2A0A               	incf	??_kpDebounce^0,f,c
  3380  0014AA  EF5A  F00A         	goto	u1834
  3381  0014AE                     u1835:
  3382  0014AE  90D8               	bcf	status,0,c
  3383  0014B0  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3384  0014B2  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3385  0014B4                     u1834:
  3386  0014B4  2E0A               	decfsz	??_kpDebounce^0,f,c
  3387  0014B6  EF57  F00A         	goto	u1835
  3388  0014BA  500B               	movf	(??_kpDebounce+1)^0,w,c
  3389  0014BC  121F               	iorwf	kpDebounce@newRead^0,f,c
  3390  0014BE  500C               	movf	(??_kpDebounce+2)^0,w,c
  3391  0014C0  1220               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3392  0014C2                     l1913:
  3393                           
  3394                           ;keypad.c: 42:     }
  3395  0014C2  4A0D               	infsnz	kpDebounce@i^0,f,c
  3396  0014C4  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  3397  0014C6  EFF4  F009         	goto	l1901
  3398  0014CA                     l1917:
  3399                           
  3400                           ;keypad.c: 43:     if (oldRead == newRead) {
  3401  0014CA  501F               	movf	kpDebounce@newRead^0,w,c
  3402  0014CC  181D               	xorwf	kpDebounce@oldRead^0,w,c
  3403  0014CE  E107               	bnz	u1841
  3404  0014D0  5020               	movf	(kpDebounce@newRead+1)^0,w,c
  3405  0014D2  181E               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  3406  0014D4  A4D8               	btfss	status,2,c
  3407  0014D6  EF6F  F00A         	goto	u1841
  3408  0014DA  EF71  F00A         	goto	u1840
  3409  0014DE                     u1841:
  3410  0014DE  EF74  F00A         	goto	l1921
  3411  0014E2                     u1840:
  3412  0014E2                     
  3413                           ;keypad.c: 44:         tempo--;
  3414  0014E2  0628               	decf	kpDebounce@tempo^0,f,c
  3415                           
  3416                           ;keypad.c: 45:     } else {
  3417  0014E4  EF7A  F00A         	goto	l99
  3418  0014E8                     l1921:
  3419                           
  3420                           ;keypad.c: 46:         tempo = 1;
  3421  0014E8  0E01               	movlw	1
  3422  0014EA  6E28               	movwf	kpDebounce@tempo^0,c
  3423  0014EC                     
  3424                           ;keypad.c: 47:         oldRead = newRead;
  3425  0014EC  C01F  F01D         	movff	kpDebounce@newRead,kpDebounce@oldRead
  3426  0014F0  C020  F01E         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  3427  0014F4                     l99:
  3428                           
  3429                           ;keypad.c: 49:     if (tempo == 0) {
  3430  0014F4  5028               	movf	kpDebounce@tempo^0,w,c
  3431  0014F6  A4D8               	btfss	status,2,c
  3432  0014F8  EF80  F00A         	goto	u1851
  3433  0014FC  EF82  F00A         	goto	u1850
  3434  001500                     u1851:
  3435  001500  EF86  F00A         	goto	l101
  3436  001504                     u1850:
  3437  001504                     
  3438                           ;keypad.c: 50:         keys = oldRead;
  3439  001504  C01D  F021         	movff	kpDebounce@oldRead,_keys
  3440  001508  C01E  F022         	movff	kpDebounce@oldRead+1,_keys+1
  3441  00150C                     l101:
  3442  00150C  0012               	return		;funcret
  3443  00150E                     __end_of_kpDebounce:
  3444                           	callstack 0
  3445                           
  3446 ;; *************** function _soWrite *****************
  3447 ;; Defined at:
  3448 ;;		line 18 in file "so.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;  value           2    6[COMRAM] int 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  i               1    8[COMRAM] unsigned char 
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  1    wreg      void 
  3455 ;; Registers used:
  3456 ;;		wreg, status,2, status,0, cstack
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3462 ;;      Params:         2       0       0       0       0       0       0
  3463 ;;      Locals:         1       0       0       0       0       0       0
  3464 ;;      Temps:          0       0       0       0       0       0       0
  3465 ;;      Totals:         3       0       0       0       0       0       0
  3466 ;;Total ram usage:        3 bytes
  3467 ;; Hardware stack levels used: 1
  3468 ;; Hardware stack levels required when called: 2
  3469 ;; This function calls:
  3470 ;;		_PulseClockData
  3471 ;;		_PulseEnClock
  3472 ;;		_digitalWrite
  3473 ;; This function is called by:
  3474 ;;		_kpDebounce
  3475 ;;		_pushNibble
  3476 ;;		_pushByte
  3477 ;;		_ssdUpdate
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text22
  3482  001930                     __ptext22:
  3483                           	callstack 0
  3484  001930                     _soWrite:
  3485                           	callstack 25
  3486  001930                     
  3487                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  3488  001930  0E00               	movlw	0
  3489  001932  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3490  001934  0E08               	movlw	8
  3491  001936  6E01               	movwf	digitalWrite@pin^0,c
  3492  001938  0E00               	movlw	0
  3493  00193A  6E04               	movwf	(digitalWrite@value+1)^0,c
  3494  00193C  0E00               	movlw	0
  3495  00193E  6E03               	movwf	digitalWrite@value^0,c
  3496  001940  EC2D  F007         	call	_digitalWrite	;wreg free
  3497  001944                     
  3498                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  3499  001944  0E00               	movlw	0
  3500  001946  6E09               	movwf	soWrite@i^0,c
  3501  001948                     l1691:
  3502                           
  3503                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  3504  001948  0E00               	movlw	0
  3505  00194A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3506  00194C  0E1E               	movlw	30
  3507  00194E  6E01               	movwf	digitalWrite@pin^0,c
  3508  001950  0E80               	movlw	128
  3509  001952  1407               	andwf	soWrite@value^0,w,c
  3510  001954  6E03               	movwf	digitalWrite@value^0,c
  3511  001956  6A04               	clrf	(digitalWrite@value+1)^0,c
  3512  001958  EC2D  F007         	call	_digitalWrite	;wreg free
  3513                           
  3514                           ;so.c: 23:   PulseClockData();
  3515  00195C  ECA7  F00D         	call	_PulseClockData	;wreg free
  3516  001960                     
  3517                           ;so.c: 24:   value <<= 1;
  3518  001960  90D8               	bcf	status,0,c
  3519  001962  3607               	rlcf	soWrite@value^0,f,c
  3520  001964  3608               	rlcf	(soWrite@value+1)^0,f,c
  3521  001966                     
  3522                           ;so.c: 25:  }
  3523  001966  2A09               	incf	soWrite@i^0,f,c
  3524  001968  0E07               	movlw	7
  3525  00196A  6409               	cpfsgt	soWrite@i^0,c
  3526  00196C  EFBA  F00C         	goto	u1381
  3527  001970  EFBC  F00C         	goto	u1380
  3528  001974                     u1381:
  3529  001974  EFA4  F00C         	goto	l1691
  3530  001978                     u1380:
  3531  001978                     
  3532                           ;so.c: 26:  PulseEnClock();
  3533  001978  EC92  F00D         	call	_PulseEnClock	;wreg free
  3534  00197C  0012               	return		;funcret
  3535  00197E                     __end_of_soWrite:
  3536                           	callstack 0
  3537                           
  3538 ;; *************** function _PulseEnClock *****************
  3539 ;; Defined at:
  3540 ;;		line 9 in file "so.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3554 ;;      Params:         0       0       0       0       0       0       0
  3555 ;;      Locals:         0       0       0       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0
  3557 ;;      Totals:         0       0       0       0       0       0       0
  3558 ;;Total ram usage:        0 bytes
  3559 ;; Hardware stack levels used: 1
  3560 ;; Hardware stack levels required when called: 1
  3561 ;; This function calls:
  3562 ;;		_digitalWrite
  3563 ;; This function is called by:
  3564 ;;		_soWrite
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text23
  3569  001B24                     __ptext23:
  3570                           	callstack 0
  3571  001B24                     _PulseEnClock:
  3572                           	callstack 25
  3573  001B24                     
  3574                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  3575  001B24  0E00               	movlw	0
  3576  001B26  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3577  001B28  0E1F               	movlw	31
  3578  001B2A  6E01               	movwf	digitalWrite@pin^0,c
  3579  001B2C  0E00               	movlw	0
  3580  001B2E  6E04               	movwf	(digitalWrite@value+1)^0,c
  3581  001B30  0E01               	movlw	1
  3582  001B32  6E03               	movwf	digitalWrite@value^0,c
  3583  001B34  EC2D  F007         	call	_digitalWrite	;wreg free
  3584                           
  3585                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  3586  001B38  0E00               	movlw	0
  3587  001B3A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3588  001B3C  0E1F               	movlw	31
  3589  001B3E  6E01               	movwf	digitalWrite@pin^0,c
  3590  001B40  0E00               	movlw	0
  3591  001B42  6E04               	movwf	(digitalWrite@value+1)^0,c
  3592  001B44  0E00               	movlw	0
  3593  001B46  6E03               	movwf	digitalWrite@value^0,c
  3594  001B48  EC2D  F007         	call	_digitalWrite	;wreg free
  3595  001B4C  0012               	return		;funcret
  3596  001B4E                     __end_of_PulseEnClock:
  3597                           	callstack 0
  3598                           
  3599 ;; *************** function _PulseClockData *****************
  3600 ;; Defined at:
  3601 ;;		line 14 in file "so.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;		None
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;		None
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1    wreg      void 
  3608 ;; Registers used:
  3609 ;;		wreg, status,2, status,0, cstack
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3615 ;;      Params:         0       0       0       0       0       0       0
  3616 ;;      Locals:         0       0       0       0       0       0       0
  3617 ;;      Temps:          0       0       0       0       0       0       0
  3618 ;;      Totals:         0       0       0       0       0       0       0
  3619 ;;Total ram usage:        0 bytes
  3620 ;; Hardware stack levels used: 1
  3621 ;; Hardware stack levels required when called: 1
  3622 ;; This function calls:
  3623 ;;		_digitalWrite
  3624 ;; This function is called by:
  3625 ;;		_soWrite
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text24
  3630  001B4E                     __ptext24:
  3631                           	callstack 0
  3632  001B4E                     _PulseClockData:
  3633                           	callstack 25
  3634  001B4E                     
  3635                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  3636  001B4E  0E00               	movlw	0
  3637  001B50  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3638  001B52  0E08               	movlw	8
  3639  001B54  6E01               	movwf	digitalWrite@pin^0,c
  3640  001B56  0E00               	movlw	0
  3641  001B58  6E04               	movwf	(digitalWrite@value+1)^0,c
  3642  001B5A  0E01               	movlw	1
  3643  001B5C  6E03               	movwf	digitalWrite@value^0,c
  3644  001B5E  EC2D  F007         	call	_digitalWrite	;wreg free
  3645                           
  3646                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  3647  001B62  0E00               	movlw	0
  3648  001B64  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3649  001B66  0E08               	movlw	8
  3650  001B68  6E01               	movwf	digitalWrite@pin^0,c
  3651  001B6A  0E00               	movlw	0
  3652  001B6C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3653  001B6E  0E00               	movlw	0
  3654  001B70  6E03               	movwf	digitalWrite@value^0,c
  3655  001B72  EC2D  F007         	call	_digitalWrite	;wreg free
  3656  001B76  0012               	return		;funcret
  3657  001B78                     __end_of_PulseClockData:
  3658                           	callstack 0
  3659                           
  3660 ;; *************** function _digitalWrite *****************
  3661 ;; Defined at:
  3662 ;;		line 14 in file "io.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  pin             2    0[COMRAM] int 
  3665 ;;  value           2    2[COMRAM] int 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;		None
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      void 
  3670 ;; Registers used:
  3671 ;;		wreg, status,2, status,0
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3677 ;;      Params:         4       0       0       0       0       0       0
  3678 ;;      Locals:         0       0       0       0       0       0       0
  3679 ;;      Temps:          2       0       0       0       0       0       0
  3680 ;;      Totals:         6       0       0       0       0       0       0
  3681 ;;Total ram usage:        6 bytes
  3682 ;; Hardware stack levels used: 1
  3683 ;; This function calls:
  3684 ;;		Nothing
  3685 ;; This function is called by:
  3686 ;;		_pulseEnablePin
  3687 ;;		_pushNibble
  3688 ;;		_pushByte
  3689 ;;		_PulseEnClock
  3690 ;;		_PulseClockData
  3691 ;;		_soWrite
  3692 ;;		_rgbColor
  3693 ;;		_ssdUpdate
  3694 ;;		_turnOn
  3695 ;;		_turnOff
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text25
  3700  000E5A                     __ptext25:
  3701                           	callstack 0
  3702  000E5A                     _digitalWrite:
  3703                           	callstack 26
  3704  000E5A                     
  3705                           ;io.c: 16:     if(pin <8){
  3706  000E5A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3707  000E5C  EF3B  F007         	goto	u1180
  3708  000E60  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3709  000E62  E107               	bnz	u1181
  3710  000E64  0E08               	movlw	8
  3711  000E66  5C01               	subwf	digitalWrite@pin^0,w,c
  3712  000E68  B0D8               	btfsc	status,0,c
  3713  000E6A  EF39  F007         	goto	u1181
  3714  000E6E  EF3B  F007         	goto	u1180
  3715  000E72                     u1181:
  3716  000E72  EF65  F007         	goto	l1647
  3717  000E76                     u1180:
  3718  000E76                     
  3719                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  3720  000E76  5003               	movf	digitalWrite@value^0,w,c
  3721  000E78  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3722  000E7A  B4D8               	btfsc	status,2,c
  3723  000E7C  EF42  F007         	goto	u1191
  3724  000E80  EF44  F007         	goto	u1190
  3725  000E84                     u1191:
  3726  000E84  EF54  F007         	goto	l1645
  3727  000E88                     u1190:
  3728  000E88  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3729  000E8C  0E01               	movlw	1
  3730  000E8E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3731  000E90  2A05               	incf	??_digitalWrite^0,f,c
  3732  000E92  EF4D  F007         	goto	u1204
  3733  000E96                     u1205:
  3734  000E96  90D8               	bcf	status,0,c
  3735  000E98  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3736  000E9A                     u1204:
  3737  000E9A  2E05               	decfsz	??_digitalWrite^0,f,c
  3738  000E9C  EF4B  F007         	goto	u1205
  3739  000EA0  5006               	movf	(??_digitalWrite+1)^0,w,c
  3740  000EA2  1280               	iorwf	128,f,c	;volatile
  3741  000EA4  EF53  F008         	goto	l238
  3742  000EA8                     l1645:
  3743  000EA8  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3744  000EAC  0E01               	movlw	1
  3745  000EAE  6E06               	movwf	(??_digitalWrite+1)^0,c
  3746  000EB0  2A05               	incf	??_digitalWrite^0,f,c
  3747  000EB2  EF5D  F007         	goto	u1214
  3748  000EB6                     u1215:
  3749  000EB6  90D8               	bcf	status,0,c
  3750  000EB8  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3751  000EBA                     u1214:
  3752  000EBA  2E05               	decfsz	??_digitalWrite^0,f,c
  3753  000EBC  EF5B  F007         	goto	u1215
  3754  000EC0  5006               	movf	(??_digitalWrite+1)^0,w,c
  3755  000EC2  0AFF               	xorlw	255
  3756  000EC4  1680               	andwf	128,f,c	;volatile
  3757  000EC6  EF53  F008         	goto	l238
  3758  000ECA                     l1647:
  3759  000ECA  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3760  000ECC  EF73  F007         	goto	u1220
  3761  000ED0  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3762  000ED2  E107               	bnz	u1221
  3763  000ED4  0E10               	movlw	16
  3764  000ED6  5C01               	subwf	digitalWrite@pin^0,w,c
  3765  000ED8  B0D8               	btfsc	status,0,c
  3766  000EDA  EF71  F007         	goto	u1221
  3767  000EDE  EF73  F007         	goto	u1220
  3768  000EE2                     u1221:
  3769  000EE2  EFA1  F007         	goto	l1655
  3770  000EE6                     u1220:
  3771  000EE6                     
  3772                           ;io.c: 20:         pin -=8;
  3773  000EE6  0EF8               	movlw	248
  3774  000EE8  2601               	addwf	digitalWrite@pin^0,f,c
  3775  000EEA  0EFF               	movlw	255
  3776  000EEC  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3777                           
  3778                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  3779  000EEE  5003               	movf	digitalWrite@value^0,w,c
  3780  000EF0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3781  000EF2  B4D8               	btfsc	status,2,c
  3782  000EF4  EF7E  F007         	goto	u1231
  3783  000EF8  EF80  F007         	goto	u1230
  3784  000EFC                     u1231:
  3785  000EFC  EF90  F007         	goto	l1653
  3786  000F00                     u1230:
  3787  000F00  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3788  000F04  0E01               	movlw	1
  3789  000F06  6E06               	movwf	(??_digitalWrite+1)^0,c
  3790  000F08  2A05               	incf	??_digitalWrite^0,f,c
  3791  000F0A  EF89  F007         	goto	u1244
  3792  000F0E                     u1245:
  3793  000F0E  90D8               	bcf	status,0,c
  3794  000F10  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3795  000F12                     u1244:
  3796  000F12  2E05               	decfsz	??_digitalWrite^0,f,c
  3797  000F14  EF87  F007         	goto	u1245
  3798  000F18  5006               	movf	(??_digitalWrite+1)^0,w,c
  3799  000F1A  1281               	iorwf	129,f,c	;volatile
  3800  000F1C  EF53  F008         	goto	l238
  3801  000F20                     l1653:
  3802  000F20  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3803  000F24  0E01               	movlw	1
  3804  000F26  6E06               	movwf	(??_digitalWrite+1)^0,c
  3805  000F28  2A05               	incf	??_digitalWrite^0,f,c
  3806  000F2A  EF99  F007         	goto	u1254
  3807  000F2E                     u1255:
  3808  000F2E  90D8               	bcf	status,0,c
  3809  000F30  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3810  000F32                     u1254:
  3811  000F32  2E05               	decfsz	??_digitalWrite^0,f,c
  3812  000F34  EF97  F007         	goto	u1255
  3813  000F38  5006               	movf	(??_digitalWrite+1)^0,w,c
  3814  000F3A  0AFF               	xorlw	255
  3815  000F3C  1681               	andwf	129,f,c	;volatile
  3816  000F3E  EF53  F008         	goto	l238
  3817  000F42                     l1655:
  3818  000F42  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3819  000F44  EFAF  F007         	goto	u1260
  3820  000F48  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3821  000F4A  E107               	bnz	u1261
  3822  000F4C  0E18               	movlw	24
  3823  000F4E  5C01               	subwf	digitalWrite@pin^0,w,c
  3824  000F50  B0D8               	btfsc	status,0,c
  3825  000F52  EFAD  F007         	goto	u1261
  3826  000F56  EFAF  F007         	goto	u1260
  3827  000F5A                     u1261:
  3828  000F5A  EFDD  F007         	goto	l1663
  3829  000F5E                     u1260:
  3830  000F5E                     
  3831                           ;io.c: 24:         pin -=16;
  3832  000F5E  0EF0               	movlw	240
  3833  000F60  2601               	addwf	digitalWrite@pin^0,f,c
  3834  000F62  0EFF               	movlw	255
  3835  000F64  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3836                           
  3837                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  3838  000F66  5003               	movf	digitalWrite@value^0,w,c
  3839  000F68  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3840  000F6A  B4D8               	btfsc	status,2,c
  3841  000F6C  EFBA  F007         	goto	u1271
  3842  000F70  EFBC  F007         	goto	u1270
  3843  000F74                     u1271:
  3844  000F74  EFCC  F007         	goto	l1661
  3845  000F78                     u1270:
  3846  000F78  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3847  000F7C  0E01               	movlw	1
  3848  000F7E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3849  000F80  2A05               	incf	??_digitalWrite^0,f,c
  3850  000F82  EFC5  F007         	goto	u1284
  3851  000F86                     u1285:
  3852  000F86  90D8               	bcf	status,0,c
  3853  000F88  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3854  000F8A                     u1284:
  3855  000F8A  2E05               	decfsz	??_digitalWrite^0,f,c
  3856  000F8C  EFC3  F007         	goto	u1285
  3857  000F90  5006               	movf	(??_digitalWrite+1)^0,w,c
  3858  000F92  1282               	iorwf	130,f,c	;volatile
  3859  000F94  EF53  F008         	goto	l238
  3860  000F98                     l1661:
  3861  000F98  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3862  000F9C  0E01               	movlw	1
  3863  000F9E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3864  000FA0  2A05               	incf	??_digitalWrite^0,f,c
  3865  000FA2  EFD5  F007         	goto	u1294
  3866  000FA6                     u1295:
  3867  000FA6  90D8               	bcf	status,0,c
  3868  000FA8  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3869  000FAA                     u1294:
  3870  000FAA  2E05               	decfsz	??_digitalWrite^0,f,c
  3871  000FAC  EFD3  F007         	goto	u1295
  3872  000FB0  5006               	movf	(??_digitalWrite+1)^0,w,c
  3873  000FB2  0AFF               	xorlw	255
  3874  000FB4  1682               	andwf	130,f,c	;volatile
  3875  000FB6  EF53  F008         	goto	l238
  3876  000FBA                     l1663:
  3877  000FBA  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3878  000FBC  EFEB  F007         	goto	u1300
  3879  000FC0  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3880  000FC2  E107               	bnz	u1301
  3881  000FC4  0E20               	movlw	32
  3882  000FC6  5C01               	subwf	digitalWrite@pin^0,w,c
  3883  000FC8  B0D8               	btfsc	status,0,c
  3884  000FCA  EFE9  F007         	goto	u1301
  3885  000FCE  EFEB  F007         	goto	u1300
  3886  000FD2                     u1301:
  3887  000FD2  EF19  F008         	goto	l1671
  3888  000FD6                     u1300:
  3889  000FD6                     
  3890                           ;io.c: 28:         pin -=24;
  3891  000FD6  0EE8               	movlw	232
  3892  000FD8  2601               	addwf	digitalWrite@pin^0,f,c
  3893  000FDA  0EFF               	movlw	255
  3894  000FDC  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3895                           
  3896                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  3897  000FDE  5003               	movf	digitalWrite@value^0,w,c
  3898  000FE0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3899  000FE2  B4D8               	btfsc	status,2,c
  3900  000FE4  EFF6  F007         	goto	u1311
  3901  000FE8  EFF8  F007         	goto	u1310
  3902  000FEC                     u1311:
  3903  000FEC  EF08  F008         	goto	l1669
  3904  000FF0                     u1310:
  3905  000FF0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3906  000FF4  0E01               	movlw	1
  3907  000FF6  6E06               	movwf	(??_digitalWrite+1)^0,c
  3908  000FF8  2A05               	incf	??_digitalWrite^0,f,c
  3909  000FFA  EF01  F008         	goto	u1324
  3910  000FFE                     u1325:
  3911  000FFE  90D8               	bcf	status,0,c
  3912  001000  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3913  001002                     u1324:
  3914  001002  2E05               	decfsz	??_digitalWrite^0,f,c
  3915  001004  EFFF  F007         	goto	u1325
  3916  001008  5006               	movf	(??_digitalWrite+1)^0,w,c
  3917  00100A  1283               	iorwf	131,f,c	;volatile
  3918  00100C  EF53  F008         	goto	l238
  3919  001010                     l1669:
  3920  001010  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3921  001014  0E01               	movlw	1
  3922  001016  6E06               	movwf	(??_digitalWrite+1)^0,c
  3923  001018  2A05               	incf	??_digitalWrite^0,f,c
  3924  00101A  EF11  F008         	goto	u1334
  3925  00101E                     u1335:
  3926  00101E  90D8               	bcf	status,0,c
  3927  001020  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3928  001022                     u1334:
  3929  001022  2E05               	decfsz	??_digitalWrite^0,f,c
  3930  001024  EF0F  F008         	goto	u1335
  3931  001028  5006               	movf	(??_digitalWrite+1)^0,w,c
  3932  00102A  0AFF               	xorlw	255
  3933  00102C  1683               	andwf	131,f,c	;volatile
  3934  00102E  EF53  F008         	goto	l238
  3935  001032                     l1671:
  3936  001032  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3937  001034  EF27  F008         	goto	u1340
  3938  001038  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3939  00103A  E107               	bnz	u1341
  3940  00103C  0E28               	movlw	40
  3941  00103E  5C01               	subwf	digitalWrite@pin^0,w,c
  3942  001040  B0D8               	btfsc	status,0,c
  3943  001042  EF25  F008         	goto	u1341
  3944  001046  EF27  F008         	goto	u1340
  3945  00104A                     u1341:
  3946  00104A  EF53  F008         	goto	l238
  3947  00104E                     u1340:
  3948  00104E                     
  3949                           ;io.c: 32:         pin -=32;
  3950  00104E  0EE0               	movlw	224
  3951  001050  2601               	addwf	digitalWrite@pin^0,f,c
  3952  001052  0EFF               	movlw	255
  3953  001054  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3954                           
  3955                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  3956  001056  5003               	movf	digitalWrite@value^0,w,c
  3957  001058  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3958  00105A  B4D8               	btfsc	status,2,c
  3959  00105C  EF32  F008         	goto	u1351
  3960  001060  EF34  F008         	goto	u1350
  3961  001064                     u1351:
  3962  001064  EF44  F008         	goto	l1677
  3963  001068                     u1350:
  3964  001068  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3965  00106C  0E01               	movlw	1
  3966  00106E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3967  001070  2A05               	incf	??_digitalWrite^0,f,c
  3968  001072  EF3D  F008         	goto	u1364
  3969  001076                     u1365:
  3970  001076  90D8               	bcf	status,0,c
  3971  001078  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3972  00107A                     u1364:
  3973  00107A  2E05               	decfsz	??_digitalWrite^0,f,c
  3974  00107C  EF3B  F008         	goto	u1365
  3975  001080  5006               	movf	(??_digitalWrite+1)^0,w,c
  3976  001082  1284               	iorwf	132,f,c	;volatile
  3977  001084  EF53  F008         	goto	l238
  3978  001088                     l1677:
  3979  001088  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3980  00108C  0E01               	movlw	1
  3981  00108E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3982  001090  2A05               	incf	??_digitalWrite^0,f,c
  3983  001092  EF4D  F008         	goto	u1374
  3984  001096                     u1375:
  3985  001096  90D8               	bcf	status,0,c
  3986  001098  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3987  00109A                     u1374:
  3988  00109A  2E05               	decfsz	??_digitalWrite^0,f,c
  3989  00109C  EF4B  F008         	goto	u1375
  3990  0010A0  5006               	movf	(??_digitalWrite+1)^0,w,c
  3991  0010A2  0AFF               	xorlw	255
  3992  0010A4  1684               	andwf	132,f,c	;volatile
  3993  0010A6                     l238:
  3994  0010A6  0012               	return		;funcret
  3995  0010A8                     __end_of_digitalWrite:
  3996                           	callstack 0
  3997                           
  3998 ;; *************** function _digitalRead *****************
  3999 ;; Defined at:
  4000 ;;		line 39 in file "io.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;  pin             2    0[COMRAM] int 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  2    0[COMRAM] int 
  4007 ;; Registers used:
  4008 ;;		wreg, status,2, status,0
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4014 ;;      Params:         2       0       0       0       0       0       0
  4015 ;;      Locals:         0       0       0       0       0       0       0
  4016 ;;      Temps:          3       0       0       0       0       0       0
  4017 ;;      Totals:         5       0       0       0       0       0       0
  4018 ;;Total ram usage:        5 bytes
  4019 ;; Hardware stack levels used: 1
  4020 ;; This function calls:
  4021 ;;		Nothing
  4022 ;; This function is called by:
  4023 ;;		_kpDebounce
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text26
  4028  00126E                     __ptext26:
  4029                           	callstack 0
  4030  00126E                     _digitalRead:
  4031                           	callstack 29
  4032  00126E                     
  4033                           ;io.c: 40:     if(pin <8){
  4034  00126E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4035  001270  EF45  F009         	goto	u1610
  4036  001274  5002               	movf	(digitalRead@pin+1)^0,w,c
  4037  001276  E107               	bnz	u1611
  4038  001278  0E08               	movlw	8
  4039  00127A  5C01               	subwf	digitalRead@pin^0,w,c
  4040  00127C  B0D8               	btfsc	status,0,c
  4041  00127E  EF43  F009         	goto	u1611
  4042  001282  EF45  F009         	goto	u1610
  4043  001286                     u1611:
  4044  001286  EF59  F009         	goto	l1783
  4045  00128A                     u1610:
  4046  00128A                     
  4047                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  4048  00128A  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4049  00128E  0E01               	movlw	1
  4050  001290  6E04               	movwf	(??_digitalRead+1)^0,c
  4051  001292  2A03               	incf	??_digitalRead^0,f,c
  4052  001294  EF4E  F009         	goto	u1624
  4053  001298                     u1625:
  4054  001298  90D8               	bcf	status,0,c
  4055  00129A  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4056  00129C                     u1624:
  4057  00129C  2E03               	decfsz	??_digitalRead^0,f,c
  4058  00129E  EF4C  F009         	goto	u1625
  4059  0012A2  5004               	movf	(??_digitalRead+1)^0,w,c
  4060  0012A4  1480               	andwf	128,w,c	;volatile
  4061  0012A6  6E05               	movwf	(??_digitalRead+2)^0,c
  4062  0012A8  5005               	movf	(??_digitalRead+2)^0,w,c
  4063  0012AA  6E01               	movwf	?_digitalRead^0,c
  4064  0012AC  6A02               	clrf	(?_digitalRead+1)^0,c
  4065  0012AE  EFEB  F009         	goto	l242
  4066  0012B2                     l1783:
  4067  0012B2  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4068  0012B4  EF67  F009         	goto	u1630
  4069  0012B8  5002               	movf	(digitalRead@pin+1)^0,w,c
  4070  0012BA  E107               	bnz	u1631
  4071  0012BC  0E10               	movlw	16
  4072  0012BE  5C01               	subwf	digitalRead@pin^0,w,c
  4073  0012C0  B0D8               	btfsc	status,0,c
  4074  0012C2  EF65  F009         	goto	u1631
  4075  0012C6  EF67  F009         	goto	u1630
  4076  0012CA                     u1631:
  4077  0012CA  EF7D  F009         	goto	l1791
  4078  0012CE                     u1630:
  4079  0012CE                     
  4080                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  4081  0012CE  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4082  0012D2  0EF8               	movlw	-8
  4083  0012D4  2603               	addwf	??_digitalRead^0,f,c
  4084  0012D6  0E01               	movlw	1
  4085  0012D8  6E04               	movwf	(??_digitalRead+1)^0,c
  4086  0012DA  2A03               	incf	??_digitalRead^0,f,c
  4087  0012DC  EF72  F009         	goto	u1644
  4088  0012E0                     u1645:
  4089  0012E0  90D8               	bcf	status,0,c
  4090  0012E2  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4091  0012E4                     u1644:
  4092  0012E4  2E03               	decfsz	??_digitalRead^0,f,c
  4093  0012E6  EF70  F009         	goto	u1645
  4094  0012EA  5004               	movf	(??_digitalRead+1)^0,w,c
  4095  0012EC  1481               	andwf	129,w,c	;volatile
  4096  0012EE  6E05               	movwf	(??_digitalRead+2)^0,c
  4097  0012F0  5005               	movf	(??_digitalRead+2)^0,w,c
  4098  0012F2  6E01               	movwf	?_digitalRead^0,c
  4099  0012F4  6A02               	clrf	(?_digitalRead+1)^0,c
  4100  0012F6  EFEB  F009         	goto	l242
  4101  0012FA                     l1791:
  4102  0012FA  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4103  0012FC  EF8B  F009         	goto	u1650
  4104  001300  5002               	movf	(digitalRead@pin+1)^0,w,c
  4105  001302  E107               	bnz	u1651
  4106  001304  0E18               	movlw	24
  4107  001306  5C01               	subwf	digitalRead@pin^0,w,c
  4108  001308  B0D8               	btfsc	status,0,c
  4109  00130A  EF89  F009         	goto	u1651
  4110  00130E  EF8B  F009         	goto	u1650
  4111  001312                     u1651:
  4112  001312  EFA1  F009         	goto	l1799
  4113  001316                     u1650:
  4114  001316                     
  4115                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  4116  001316  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4117  00131A  0EF0               	movlw	-16
  4118  00131C  2603               	addwf	??_digitalRead^0,f,c
  4119  00131E  0E01               	movlw	1
  4120  001320  6E04               	movwf	(??_digitalRead+1)^0,c
  4121  001322  2A03               	incf	??_digitalRead^0,f,c
  4122  001324  EF96  F009         	goto	u1664
  4123  001328                     u1665:
  4124  001328  90D8               	bcf	status,0,c
  4125  00132A  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4126  00132C                     u1664:
  4127  00132C  2E03               	decfsz	??_digitalRead^0,f,c
  4128  00132E  EF94  F009         	goto	u1665
  4129  001332  5004               	movf	(??_digitalRead+1)^0,w,c
  4130  001334  1482               	andwf	130,w,c	;volatile
  4131  001336  6E05               	movwf	(??_digitalRead+2)^0,c
  4132  001338  5005               	movf	(??_digitalRead+2)^0,w,c
  4133  00133A  6E01               	movwf	?_digitalRead^0,c
  4134  00133C  6A02               	clrf	(?_digitalRead+1)^0,c
  4135  00133E  EFEB  F009         	goto	l242
  4136  001342                     l1799:
  4137  001342  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4138  001344  EFAF  F009         	goto	u1670
  4139  001348  5002               	movf	(digitalRead@pin+1)^0,w,c
  4140  00134A  E107               	bnz	u1671
  4141  00134C  0E20               	movlw	32
  4142  00134E  5C01               	subwf	digitalRead@pin^0,w,c
  4143  001350  B0D8               	btfsc	status,0,c
  4144  001352  EFAD  F009         	goto	u1671
  4145  001356  EFAF  F009         	goto	u1670
  4146  00135A                     u1671:
  4147  00135A  EFC5  F009         	goto	l1807
  4148  00135E                     u1670:
  4149  00135E                     
  4150                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  4151  00135E  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4152  001362  0EE8               	movlw	-24
  4153  001364  2603               	addwf	??_digitalRead^0,f,c
  4154  001366  0E01               	movlw	1
  4155  001368  6E04               	movwf	(??_digitalRead+1)^0,c
  4156  00136A  2A03               	incf	??_digitalRead^0,f,c
  4157  00136C  EFBA  F009         	goto	u1684
  4158  001370                     u1685:
  4159  001370  90D8               	bcf	status,0,c
  4160  001372  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4161  001374                     u1684:
  4162  001374  2E03               	decfsz	??_digitalRead^0,f,c
  4163  001376  EFB8  F009         	goto	u1685
  4164  00137A  5004               	movf	(??_digitalRead+1)^0,w,c
  4165  00137C  1483               	andwf	131,w,c	;volatile
  4166  00137E  6E05               	movwf	(??_digitalRead+2)^0,c
  4167  001380  5005               	movf	(??_digitalRead+2)^0,w,c
  4168  001382  6E01               	movwf	?_digitalRead^0,c
  4169  001384  6A02               	clrf	(?_digitalRead+1)^0,c
  4170  001386  EFEB  F009         	goto	l242
  4171  00138A                     l1807:
  4172  00138A  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4173  00138C  EFD3  F009         	goto	u1690
  4174  001390  5002               	movf	(digitalRead@pin+1)^0,w,c
  4175  001392  E107               	bnz	u1691
  4176  001394  0E28               	movlw	40
  4177  001396  5C01               	subwf	digitalRead@pin^0,w,c
  4178  001398  B0D8               	btfsc	status,0,c
  4179  00139A  EFD1  F009         	goto	u1691
  4180  00139E  EFD3  F009         	goto	u1690
  4181  0013A2                     u1691:
  4182  0013A2  EFE9  F009         	goto	l247
  4183  0013A6                     u1690:
  4184  0013A6                     
  4185                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  4186  0013A6  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4187  0013AA  0EE0               	movlw	-32
  4188  0013AC  2603               	addwf	??_digitalRead^0,f,c
  4189  0013AE  0E01               	movlw	1
  4190  0013B0  6E04               	movwf	(??_digitalRead+1)^0,c
  4191  0013B2  2A03               	incf	??_digitalRead^0,f,c
  4192  0013B4  EFDE  F009         	goto	u1704
  4193  0013B8                     u1705:
  4194  0013B8  90D8               	bcf	status,0,c
  4195  0013BA  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4196  0013BC                     u1704:
  4197  0013BC  2E03               	decfsz	??_digitalRead^0,f,c
  4198  0013BE  EFDC  F009         	goto	u1705
  4199  0013C2  5004               	movf	(??_digitalRead+1)^0,w,c
  4200  0013C4  1484               	andwf	132,w,c	;volatile
  4201  0013C6  6E05               	movwf	(??_digitalRead+2)^0,c
  4202  0013C8  5005               	movf	(??_digitalRead+2)^0,w,c
  4203  0013CA  6E01               	movwf	?_digitalRead^0,c
  4204  0013CC  6A02               	clrf	(?_digitalRead+1)^0,c
  4205  0013CE  EFEB  F009         	goto	l242
  4206  0013D2                     l247:
  4207  0013D2                     
  4208                           ;io.c: 51:     return -1;
  4209  0013D2  6801               	setf	?_digitalRead^0,c
  4210  0013D4  6802               	setf	(?_digitalRead+1)^0,c
  4211  0013D6                     l242:
  4212  0013D6  0012               	return		;funcret
  4213  0013D8                     __end_of_digitalRead:
  4214                           	callstack 0
  4215                           
  4216 ;; *************** function ___wmul *****************
  4217 ;; Defined at:
  4218 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  multiplier      2    8[COMRAM] unsigned int 
  4221 ;;  multiplicand    2   10[COMRAM] unsigned int 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  product         2   12[COMRAM] unsigned int 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  2    8[COMRAM] unsigned int 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0, prodl, prodh
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4233 ;;      Params:         4       0       0       0       0       0       0
  4234 ;;      Locals:         2       0       0       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0       0       0
  4236 ;;      Totals:         6       0       0       0       0       0       0
  4237 ;;Total ram usage:        6 bytes
  4238 ;; Hardware stack levels used: 1
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_main
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text27
  4247  001B9E                     __ptext27:
  4248                           	callstack 0
  4249  001B9E                     ___wmul:
  4250                           	callstack 30
  4251  001B9E  5009               	movf	___wmul@multiplier^0,w,c
  4252  001BA0  020B               	mulwf	___wmul@multiplicand^0,c
  4253  001BA2  CFF3 F00D          	movff	prodl,___wmul@product
  4254  001BA6  CFF4 F00E          	movff	prodh,___wmul@product+1
  4255  001BAA  5009               	movf	___wmul@multiplier^0,w,c
  4256  001BAC  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  4257  001BAE  50F3               	movf	243,w,c
  4258  001BB0  260E               	addwf	(___wmul@product+1)^0,f,c
  4259  001BB2  500A               	movf	(___wmul@multiplier+1)^0,w,c
  4260  001BB4  020B               	mulwf	___wmul@multiplicand^0,c
  4261  001BB6  50F3               	movf	243,w,c
  4262  001BB8  260E               	addwf	(___wmul@product+1)^0,f,c
  4263  001BBA  C00D  F009         	movff	___wmul@product,?___wmul
  4264  001BBE  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  4265  001BC2  0012               	return		;funcret
  4266  001BC4                     __end_of___wmul:
  4267                           	callstack 0
  4268                           
  4269 ;; *************** function ___awmod *****************
  4270 ;; Defined at:
  4271 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;  dividend        2    8[COMRAM] int 
  4274 ;;  divisor         2   10[COMRAM] int 
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;  sign            1   13[COMRAM] unsigned char 
  4277 ;;  counter         1   12[COMRAM] unsigned char 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  2    8[COMRAM] int 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2, status,0
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4287 ;;      Params:         4       0       0       0       0       0       0
  4288 ;;      Locals:         2       0       0       0       0       0       0
  4289 ;;      Temps:          0       0       0       0       0       0       0
  4290 ;;      Totals:         6       0       0       0       0       0       0
  4291 ;;Total ram usage:        6 bytes
  4292 ;; Hardware stack levels used: 1
  4293 ;; This function calls:
  4294 ;;		Nothing
  4295 ;; This function is called by:
  4296 ;;		_main
  4297 ;;		_lcdNumber
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text28
  4302  001736                     __ptext28:
  4303                           	callstack 0
  4304  001736                     ___awmod:
  4305                           	callstack 30
  4306  001736  0E00               	movlw	0
  4307  001738  6E0E               	movwf	___awmod@sign^0,c
  4308  00173A  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  4309  00173C  EFA4  F00B         	goto	u1950
  4310  001740  EFA2  F00B         	goto	u1951
  4311  001744                     u1951:
  4312  001744  EFAA  F00B         	goto	l2005
  4313  001748                     u1950:
  4314  001748  6C09               	negf	___awmod@dividend^0,c
  4315  00174A  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4316  00174C  B0D8               	btfsc	status,0,c
  4317  00174E  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4318  001750  0E01               	movlw	1
  4319  001752  6E0E               	movwf	___awmod@sign^0,c
  4320  001754                     l2005:
  4321  001754  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  4322  001756  EFB1  F00B         	goto	u1960
  4323  00175A  EFAF  F00B         	goto	u1961
  4324  00175E                     u1961:
  4325  00175E  EFB5  F00B         	goto	l2009
  4326  001762                     u1960:
  4327  001762  6C0B               	negf	___awmod@divisor^0,c
  4328  001764  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  4329  001766  B0D8               	btfsc	status,0,c
  4330  001768  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  4331  00176A                     l2009:
  4332  00176A  500B               	movf	___awmod@divisor^0,w,c
  4333  00176C  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  4334  00176E  B4D8               	btfsc	status,2,c
  4335  001770  EFBC  F00B         	goto	u1971
  4336  001774  EFBE  F00B         	goto	u1970
  4337  001778                     u1971:
  4338  001778  EFE2  F00B         	goto	l2025
  4339  00177C                     u1970:
  4340  00177C  0E01               	movlw	1
  4341  00177E  6E0D               	movwf	___awmod@counter^0,c
  4342  001780  EFC6  F00B         	goto	l2015
  4343  001784                     l2013:
  4344  001784  90D8               	bcf	status,0,c
  4345  001786  360B               	rlcf	___awmod@divisor^0,f,c
  4346  001788  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  4347  00178A  2A0D               	incf	___awmod@counter^0,f,c
  4348  00178C                     l2015:
  4349  00178C  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  4350  00178E  EFCB  F00B         	goto	u1981
  4351  001792  EFCD  F00B         	goto	u1980
  4352  001796                     u1981:
  4353  001796  EFC2  F00B         	goto	l2013
  4354  00179A                     u1980:
  4355  00179A                     l2017:
  4356  00179A  500B               	movf	___awmod@divisor^0,w,c
  4357  00179C  5C09               	subwf	___awmod@dividend^0,w,c
  4358  00179E  500C               	movf	(___awmod@divisor+1)^0,w,c
  4359  0017A0  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  4360  0017A2  A0D8               	btfss	status,0,c
  4361  0017A4  EFD6  F00B         	goto	u1991
  4362  0017A8  EFD8  F00B         	goto	u1990
  4363  0017AC                     u1991:
  4364  0017AC  EFDC  F00B         	goto	l2021
  4365  0017B0                     u1990:
  4366  0017B0  500B               	movf	___awmod@divisor^0,w,c
  4367  0017B2  5E09               	subwf	___awmod@dividend^0,f,c
  4368  0017B4  500C               	movf	(___awmod@divisor+1)^0,w,c
  4369  0017B6  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  4370  0017B8                     l2021:
  4371  0017B8  90D8               	bcf	status,0,c
  4372  0017BA  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  4373  0017BC  320B               	rrcf	___awmod@divisor^0,f,c
  4374  0017BE  2E0D               	decfsz	___awmod@counter^0,f,c
  4375  0017C0  EFCD  F00B         	goto	l2017
  4376  0017C4                     l2025:
  4377  0017C4  500E               	movf	___awmod@sign^0,w,c
  4378  0017C6  B4D8               	btfsc	status,2,c
  4379  0017C8  EFE8  F00B         	goto	u2001
  4380  0017CC  EFEA  F00B         	goto	u2000
  4381  0017D0                     u2001:
  4382  0017D0  EFEE  F00B         	goto	l2029
  4383  0017D4                     u2000:
  4384  0017D4  6C09               	negf	___awmod@dividend^0,c
  4385  0017D6  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4386  0017D8  B0D8               	btfsc	status,0,c
  4387  0017DA  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4388  0017DC                     l2029:
  4389  0017DC  C009  F009         	movff	___awmod@dividend,?___awmod
  4390  0017E0  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  4391  0017E4  0012               	return		;funcret
  4392  0017E6                     __end_of___awmod:
  4393                           	callstack 0
  4394                           
  4395 ;; *************** function ___awdiv *****************
  4396 ;; Defined at:
  4397 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  dividend        2    0[COMRAM] int 
  4400 ;;  divisor         2    2[COMRAM] int 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;  quotient        2    6[COMRAM] int 
  4403 ;;  sign            1    5[COMRAM] unsigned char 
  4404 ;;  counter         1    4[COMRAM] unsigned char 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  2    0[COMRAM] int 
  4407 ;; Registers used:
  4408 ;;		wreg, status,2, status,0
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4414 ;;      Params:         4       0       0       0       0       0       0
  4415 ;;      Locals:         4       0       0       0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0
  4417 ;;      Totals:         8       0       0       0       0       0       0
  4418 ;;Total ram usage:        8 bytes
  4419 ;; Hardware stack levels used: 1
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_main
  4424 ;;		_lcdNumber
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text29
  4429  00150E                     __ptext29:
  4430                           	callstack 0
  4431  00150E                     ___awdiv:
  4432                           	callstack 30
  4433  00150E  0E00               	movlw	0
  4434  001510  6E06               	movwf	___awdiv@sign^0,c
  4435  001512  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4436  001514  EF90  F00A         	goto	u1890
  4437  001518  EF8E  F00A         	goto	u1891
  4438  00151C                     u1891:
  4439  00151C  EF96  F00A         	goto	l1961
  4440  001520                     u1890:
  4441  001520  6C03               	negf	___awdiv@divisor^0,c
  4442  001522  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4443  001524  B0D8               	btfsc	status,0,c
  4444  001526  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4445  001528  0E01               	movlw	1
  4446  00152A  6E06               	movwf	___awdiv@sign^0,c
  4447  00152C                     l1961:
  4448  00152C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4449  00152E  EF9D  F00A         	goto	u1900
  4450  001532  EF9B  F00A         	goto	u1901
  4451  001536                     u1901:
  4452  001536  EFA3  F00A         	goto	l1967
  4453  00153A                     u1900:
  4454  00153A  6C01               	negf	___awdiv@dividend^0,c
  4455  00153C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4456  00153E  B0D8               	btfsc	status,0,c
  4457  001540  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4458  001542  0E01               	movlw	1
  4459  001544  1A06               	xorwf	___awdiv@sign^0,f,c
  4460  001546                     l1967:
  4461  001546  0E00               	movlw	0
  4462  001548  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4463  00154A  0E00               	movlw	0
  4464  00154C  6E07               	movwf	___awdiv@quotient^0,c
  4465  00154E  5003               	movf	___awdiv@divisor^0,w,c
  4466  001550  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4467  001552  B4D8               	btfsc	status,2,c
  4468  001554  EFAE  F00A         	goto	u1911
  4469  001558  EFB0  F00A         	goto	u1910
  4470  00155C                     u1911:
  4471  00155C  EFD8  F00A         	goto	l1989
  4472  001560                     u1910:
  4473  001560  0E01               	movlw	1
  4474  001562  6E05               	movwf	___awdiv@counter^0,c
  4475  001564  EFB8  F00A         	goto	l1975
  4476  001568                     l1973:
  4477  001568  90D8               	bcf	status,0,c
  4478  00156A  3603               	rlcf	___awdiv@divisor^0,f,c
  4479  00156C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4480  00156E  2A05               	incf	___awdiv@counter^0,f,c
  4481  001570                     l1975:
  4482  001570  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4483  001572  EFBD  F00A         	goto	u1921
  4484  001576  EFBF  F00A         	goto	u1920
  4485  00157A                     u1921:
  4486  00157A  EFB4  F00A         	goto	l1973
  4487  00157E                     u1920:
  4488  00157E                     l1977:
  4489  00157E  90D8               	bcf	status,0,c
  4490  001580  3607               	rlcf	___awdiv@quotient^0,f,c
  4491  001582  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4492  001584  5003               	movf	___awdiv@divisor^0,w,c
  4493  001586  5C01               	subwf	___awdiv@dividend^0,w,c
  4494  001588  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4495  00158A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4496  00158C  A0D8               	btfss	status,0,c
  4497  00158E  EFCB  F00A         	goto	u1931
  4498  001592  EFCD  F00A         	goto	u1930
  4499  001596                     u1931:
  4500  001596  EFD2  F00A         	goto	l1985
  4501  00159A                     u1930:
  4502  00159A  5003               	movf	___awdiv@divisor^0,w,c
  4503  00159C  5E01               	subwf	___awdiv@dividend^0,f,c
  4504  00159E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4505  0015A0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4506  0015A2  8007               	bsf	___awdiv@quotient^0,0,c
  4507  0015A4                     l1985:
  4508  0015A4  90D8               	bcf	status,0,c
  4509  0015A6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4510  0015A8  3203               	rrcf	___awdiv@divisor^0,f,c
  4511  0015AA  2E05               	decfsz	___awdiv@counter^0,f,c
  4512  0015AC  EFBF  F00A         	goto	l1977
  4513  0015B0                     l1989:
  4514  0015B0  5006               	movf	___awdiv@sign^0,w,c
  4515  0015B2  B4D8               	btfsc	status,2,c
  4516  0015B4  EFDE  F00A         	goto	u1941
  4517  0015B8  EFE0  F00A         	goto	u1940
  4518  0015BC                     u1941:
  4519  0015BC  EFE4  F00A         	goto	l1993
  4520  0015C0                     u1940:
  4521  0015C0  6C07               	negf	___awdiv@quotient^0,c
  4522  0015C2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4523  0015C4  B0D8               	btfsc	status,0,c
  4524  0015C6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4525  0015C8                     l1993:
  4526  0015C8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4527  0015CC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4528  0015D0  0012               	return		;funcret
  4529  0015D2                     __end_of___awdiv:
  4530                           	callstack 0
  4531                           
  4532                           	psect	rparam
  4533  0000                     
  4534                           	psect	idloc
  4535                           
  4536                           ;Config register IDLOC0 @ 0x200000
  4537                           ;	unspecified, using default values
  4538  200000                     	org	2097152
  4539  200000  FF                 	db	255
  4540                           
  4541                           ;Config register IDLOC1 @ 0x200001
  4542                           ;	unspecified, using default values
  4543  200001                     	org	2097153
  4544  200001  FF                 	db	255
  4545                           
  4546                           ;Config register IDLOC2 @ 0x200002
  4547                           ;	unspecified, using default values
  4548  200002                     	org	2097154
  4549  200002  FF                 	db	255
  4550                           
  4551                           ;Config register IDLOC3 @ 0x200003
  4552                           ;	unspecified, using default values
  4553  200003                     	org	2097155
  4554  200003  FF                 	db	255
  4555                           
  4556                           ;Config register IDLOC4 @ 0x200004
  4557                           ;	unspecified, using default values
  4558  200004                     	org	2097156
  4559  200004  FF                 	db	255
  4560                           
  4561                           ;Config register IDLOC5 @ 0x200005
  4562                           ;	unspecified, using default values
  4563  200005                     	org	2097157
  4564  200005  FF                 	db	255
  4565                           
  4566                           ;Config register IDLOC6 @ 0x200006
  4567                           ;	unspecified, using default values
  4568  200006                     	org	2097158
  4569  200006  FF                 	db	255
  4570                           
  4571                           ;Config register IDLOC7 @ 0x200007
  4572                           ;	unspecified, using default values
  4573  200007                     	org	2097159
  4574  200007  FF                 	db	255
  4575                           
  4576                           	psect	config
  4577                           
  4578                           ; Padding undefined space
  4579  300000                     	org	3145728
  4580  300000  FF                 	db	255
  4581                           
  4582                           ;Config register CONFIG1H @ 0x300001
  4583                           ;	Oscillator Selection bits
  4584                           ;	OSC = HS, HS oscillator
  4585                           ;	Fail-Safe Clock Monitor Enable bit
  4586                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4587                           ;	Internal/External Oscillator Switchover bit
  4588                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4589  300001                     	org	3145729
  4590  300001  02                 	db	2
  4591                           
  4592                           ;Config register CONFIG2L @ 0x300002
  4593                           ;	Power-up Timer Enable bit
  4594                           ;	PWRT = OFF, PWRT disabled
  4595                           ;	Brown-out Reset Enable bits
  4596                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4597                           ;	Brown Out Reset Voltage bits
  4598                           ;	BORV = 0x2E, user specified literal
  4599  300002                     	org	3145730
  4600  300002  71                 	db	369
  4601                           
  4602                           ;Config register CONFIG2H @ 0x300003
  4603                           ;	Watchdog Timer Enable bit
  4604                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4605                           ;	Watchdog Timer Postscale Select bits
  4606                           ;	WDTPS = 1, 1:1
  4607  300003                     	org	3145731
  4608  300003  00                 	db	0
  4609                           
  4610                           ; Padding undefined space
  4611  300004                     	org	3145732
  4612  300004  FF                 	db	255
  4613                           
  4614                           ;Config register CONFIG3H @ 0x300005
  4615                           ;	CCP2 MUX bit
  4616                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4617                           ;	PORTB A/D Enable bit
  4618                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4619                           ;	Low-Power Timer1 Oscillator Enable bit
  4620                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4621                           ;	MCLR Pin Enable bit
  4622                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4623  300005                     	org	3145733
  4624  300005  83                 	db	131
  4625                           
  4626                           ;Config register CONFIG4L @ 0x300006
  4627                           ;	Stack Full/Underflow Reset Enable bit
  4628                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4629                           ;	Single-Supply ICSP Enable bit
  4630                           ;	LVP = OFF, Single-Supply ICSP disabled
  4631                           ;	Extended Instruction Set Enable bit
  4632                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4633                           ;	Background Debugger Enable bit
  4634                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4635  300006                     	org	3145734
  4636  300006  80                 	db	128
  4637                           
  4638                           ; Padding undefined space
  4639  300007                     	org	3145735
  4640  300007  FF                 	db	255
  4641                           
  4642                           ;Config register CONFIG5L @ 0x300008
  4643                           ;	Code Protection bit
  4644                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4645                           ;	Code Protection bit
  4646                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4647                           ;	Code Protection bit
  4648                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4649                           ;	Code Protection bit
  4650                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4651  300008                     	org	3145736
  4652  300008  0F                 	db	15
  4653                           
  4654                           ;Config register CONFIG5H @ 0x300009
  4655                           ;	Boot Block Code Protection bit
  4656                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4657                           ;	Data EEPROM Code Protection bit
  4658                           ;	CPD = OFF, Data EEPROM not code-protected
  4659  300009                     	org	3145737
  4660  300009  C0                 	db	192
  4661                           
  4662                           ;Config register CONFIG6L @ 0x30000A
  4663                           ;	Write Protection bit
  4664                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4665                           ;	Write Protection bit
  4666                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4667                           ;	Write Protection bit
  4668                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4669                           ;	Write Protection bit
  4670                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4671  30000A                     	org	3145738
  4672  30000A  0F                 	db	15
  4673                           
  4674                           ;Config register CONFIG6H @ 0x30000B
  4675                           ;	Configuration Register Write Protection bit
  4676                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4677                           ;	Boot Block Write Protection bit
  4678                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4679                           ;	Data EEPROM Write Protection bit
  4680                           ;	WRTD = OFF, Data EEPROM not write-protected
  4681  30000B                     	org	3145739
  4682  30000B  E0                 	db	224
  4683                           
  4684                           ;Config register CONFIG7L @ 0x30000C
  4685                           ;	Table Read Protection bit
  4686                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4687                           ;	Table Read Protection bit
  4688                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4689                           ;	Table Read Protection bit
  4690                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4691                           ;	Table Read Protection bit
  4692                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4693  30000C                     	org	3145740
  4694  30000C  0F                 	db	15
  4695                           
  4696                           ;Config register CONFIG7H @ 0x30000D
  4697                           ;	Boot Block Table Read Protection bit
  4698                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4699  30000D                     	org	3145741
  4700  30000D  40                 	db	64
  4701                           tosu	equ	0xFFF
  4702                           tosh	equ	0xFFE
  4703                           tosl	equ	0xFFD
  4704                           stkptr	equ	0xFFC
  4705                           pclatu	equ	0xFFB
  4706                           pclath	equ	0xFFA
  4707                           pcl	equ	0xFF9
  4708                           tblptru	equ	0xFF8
  4709                           tblptrh	equ	0xFF7
  4710                           tblptrl	equ	0xFF6
  4711                           tablat	equ	0xFF5
  4712                           prodh	equ	0xFF4
  4713                           prodl	equ	0xFF3
  4714                           indf0	equ	0xFEF
  4715                           postinc0	equ	0xFEE
  4716                           postdec0	equ	0xFED
  4717                           preinc0	equ	0xFEC
  4718                           plusw0	equ	0xFEB
  4719                           fsr0h	equ	0xFEA
  4720                           fsr0l	equ	0xFE9
  4721                           wreg	equ	0xFE8
  4722                           indf1	equ	0xFE7
  4723                           postinc1	equ	0xFE6
  4724                           postdec1	equ	0xFE5
  4725                           preinc1	equ	0xFE4
  4726                           plusw1	equ	0xFE3
  4727                           fsr1h	equ	0xFE2
  4728                           fsr1l	equ	0xFE1
  4729                           bsr	equ	0xFE0
  4730                           indf2	equ	0xFDF
  4731                           postinc2	equ	0xFDE
  4732                           postdec2	equ	0xFDD
  4733                           preinc2	equ	0xFDC
  4734                           plusw2	equ	0xFDB
  4735                           fsr2h	equ	0xFDA
  4736                           fsr2l	equ	0xFD9
  4737                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    26
    Data        104
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     28      40
    BANK0           128      0     104
    BANK1           256    226     226
    BANK2           256      0     104
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sacaCarta@valor	PTR int  size(2) Largest target is 104
		 -> main@valor(BANK1[104]), 

    sacaCarta@namesa	PTR int  size(2) Largest target is 104
		 -> main@namesa(BANK1[104]), 

    mesaReset@namesa	PTR int  size(2) Largest target is 104
		 -> main@namesa(BANK1[104]), 


Critical Paths under _main in COMRAM

    _main->_sacaCarta
    _sacaCarta->_lcdChar
    _timerReset->___llmod
    _lcdChar->_pushByte
    _rgbInit->_pinMode
    _rgbColor->_digitalWrite
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    ___wmul->___awdiv
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               230   230      0  181787
                                             24 COMRAM     4     4      0
                                              0 BANK1    226   226      0
                            ___awdiv
                            ___awmod
                             ___wmul
                         _kpDebounce
                             _kpInit
                             _kpRead
                            _lcdChar
                         _lcdCommand
                            _lcdInit
                          _mesaReset
                           _rgbColor
                            _rgbInit
                          _sacaCarta
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sacaCarta                                           10     2      8   29263
                                             14 COMRAM    10     2      8
                            ___llmod
                            _lcdChar
                         _timerReset
                          _timerWait
 ---------------------------------------------------------------------------------
 (2) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timerReset                                           4     2      2     167
                                              9 COMRAM     4     2      2
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0   27555
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1071
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) _rgbInit                                              0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _rgbColor                                             2     0      2    5450
                                              6 COMRAM     2     0      2
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _mesaReset                                            4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   60652
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   27261
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   27525
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   27153
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    5536
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    5136
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    2568
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   16705
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _soWrite                                              3     1      2   16221
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _PulseEnClock                                         0     0      0    5156
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _PulseClockData                                       0     0      0    5156
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _digitalWrite                                         6     2      4    5156
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    2880
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    2580
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___wmul
     ___awdiv (ARG)
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _kpRead
   _lcdChar
     _delayMicro
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
   _lcdCommand
     _delayMili
     _pushByte
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _mesaReset
   _rgbColor
     _digitalWrite
   _rgbInit
     _pinMode
   _sacaCarta
     ___llmod
     _lcdChar
     _timerReset
       ___llmod (ARG)
     _timerWait
   _timerInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      68       9       40.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     E2      E2       7       88.3%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      68       5       81.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1C      28       1       31.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DA      15        0.0%
DATA                 0      0     1DA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Dec 16 14:39:39 2021

         _pulseEnablePin 1A04                       l34 126C                       l27 19C0  
                     l79 1C3A                       l99 14F4             ___awdiv@sign 0006  
                     _v0 0026                       _v1 0025                       _v2 0024  
                     _v3 0023      ___wmul@multiplicand 000B                      l101 150C  
                    l104 1AF2                      l121 1B22                      l130 192E  
                    l115 1C44                      l124 1A44                      l133 1C20  
                    l141 1C02                      l127 1B9C                      l303 1734  
                    l242 13D6                      l243 13D2                      l156 1684  
                    l332 1C22                      l341 1C42                      l238 10A6  
                    l318 1A82                      l247 13D2                      l335 1C30  
                    l344 1BC2                      l272 0E58                      l282 1B4C  
                    l290 197C                      l338 1BE4                      l285 1B76  
                    l279 1AC0                      l575 15D0                      l771 186C  
                    l588 17E4                      l764 185C             ___awmod@sign 000E  
                    wreg 000FE8                     l2001 1748                     l2011 177C  
                   l2003 1750                     l2021 17B8                     l2013 1784  
                   l2005 1754                     l2101 08AC                     l2023 17BE  
                   l2015 178C                     l2007 1762                     l2111 0958  
                   l2103 08DC                     l2017 179A                     l2025 17C4  
                   l2009 176A                     l2121 0B28                     l2105 090C  
                   l2113 098A                     l2041 0654                     l2033 061C  
                   l2027 17D4                     l2019 17B0                     l2131 0B92  
                   l2123 0B3C                     l2115 099C                     l2107 0928  
                   l2051 0688                     l2043 065C                     l2035 062C  
                   l2029 17DC                     l2133 0BD0                     l2125 0B58  
                   l2141 0BF6                     l2117 0A64                     l2109 093C  
                   l2061 06F8                     l2053 06BE                     l2045 0664  
                   l2037 063E                     l2135 0BDC                     l2127 0B74  
                   l2119 0B1C                     l2063 06FE                     l2071 0724  
                   l2055 06D0                     l2047 0674                     l2039 064A  
                   l2137 0BE6                     l2129 0B80                     l2081 0772  
                   l2073 0732                     l2065 070C                     l2057 06DE  
                   l2049 0684                     l2139 0BEE                     l2091 082E  
                   l2083 07A2                     l2075 0744                     l2067 0714  
                   l2059 06F0                     l1701 1A04                     l2093 0840  
                   l2085 07D2                     l2077 0760                     l2069 071A  
                   l1711 0C3A                     l1703 1A18                     l2095 086A  
                   l2087 0802                     l2079 076C                     l1801 135E  
                   l1641 0E76                     l1721 0CCE                     l1713 0C5A  
                   l1705 1A24                     l2097 0876                     l2089 081E  
                   l1651 0F00                     l1643 0E88                     l1731 0D6C  
                   l1723 0CF4                     l1715 0C7C                     l1707 0C0C  
                   l2099 087C                     l1661 0F98                     l1653 0F20  
                   l1645 0EA8                     l1901 13E8                     l1741 0E00  
                   l1733 0D88                     l1725 0D10                     l1717 0C98  
                   l1709 0C28                     l1813 1A84                     l1821 1804  
                   l1807 138A                     l1671 1032                     l1663 0FBA  
                   l1655 0F42                     l1647 0ECA                     l1639 0E5A  
                   l1911 1498                     l1743 0E12                     l1735 0D9A  
                   l1727 0D22                     l1719 0CAA                     l1751 1B04  
                   l1815 1B7A                     l1831 1856                     l1823 1810  
                   l1809 13A6                     l1673 104E                     l1665 0FD6  
                   l1657 0F5E                     l1649 0EE6                     l1681 1B4E  
                   l1921 14E8                     l1913 14C2                     l1905 1408  
                   l1745 0E36                     l1737 0DBE                     l1729 0D46  
                   l1753 18D8                     l1841 19A0                     l1833 197E  
                   l1825 181E                     l1817 17E6                     l1761 1BDA  
                   l1675 1068                     l1667 0FF0                     l1659 0F78  
                   l1691 1948                     l1683 1930                     l1923 14EC  
                   l1907 1454                     l1739 0DE4                     l1747 1AF4  
                   l1843 19A4                     l1931 1694                     l1827 183C  
                   l1819 17FC                     l1771 1BF6                     l1763 1BDE  
                   l1755 1BC4                     l1851 10E2                     l1677 1088  
                   l1669 1010                     l1693 1960                     l1685 1944  
                   l1925 1504                     l1909 147A                     l1917 14CA  
                   l1749 1B00                     l1773 1C06                     l1941 16FA  
                   l1933 16AC                     l1829 184C                     l1765 1BE2  
                   l1757 1BCE                     l1861 118A                     l1853 112A  
                   l1845 10A8                     l1791 12FA                     l1783 12B2  
                   l1775 126E                     l1679 1B24                     l1695 1966  
                   l1919 14E2                     l1927 1C32                     l1839 1986  
                   l1943 1708                     l1935 16C0                     l1759 1BD2  
                   l1767 1C22                     l1863 11E0                     l1855 1172  
                   l1847 10AC                     l1961 152C                     l1953 150E  
                   l1793 1316                     l1785 12CE                     l1777 128A  
                   l1697 1968                     l1881 1632                     l1945 1720  
                   l1937 16CE                     l1929 1686                     l1873 1A46  
                   l1769 1BE8                     l1857 117E                     l1849 10DE  
                   l1971 1560                     l1963 153A                     l1955 1512  
                   l1947 1B9E                     l1699 1978                     l1875 1AC2  
                   l1891 1678                     l1883 163E                     l1939 16E6  
                   l1981 159A                     l1973 1568                     l1965 1542  
                   l1957 1520                     l1949 1BBA                     l1877 1AEE  
                   l1893 167E                     l1885 1658                     l1869 11F0  
                   l1991 15C0                     l1983 15A2                     l1975 1570  
                   l1967 1546                     l1959 1528                     l1799 1342  
                   l1887 1666                     l1879 15D2                     l1895 1C3C  
                   l1993 15C8                     l1985 15A4                     l1977 157E  
                   l1969 154E                     l1889 1672                     l1897 1C40  
                   l1987 15AA                     l1979 1584                     l1899 13D8  
                   l1989 15B0                     l1997 1736                     l1999 173A  
                   u2000 17D4                     u2001 17D0                     u2011 0636  
                   u1300 0FD6                     u1220 0EE6                     u1204 0E9A  
                   u2100 0840                     u1301 0FD2                     u1221 0EE2  
                   u1205 0E96                     u2101 083C                     u2021 0644  
                   u1310 0FF0                     u1230 0F00                     u1214 0EBA  
                   u2110 086A                     u2030 06BE                     u1311 0FEC  
                   u1231 0EFC                     u1215 0EB6                     u2111 0866  
                   u2031 06BA                     u1400 0C3A                     u2120 093C  
                   u2040 06DE                     u1401 0C36                     u2121 0938  
                   u2041 06DA                     u2130 0958                     u2050 06F0  
                   u2131 0954                     u2051 06EC                     u1340 104E  
                   u1324 1002                     u1260 0F5E                     u1244 0F12  
                   u1180 0E76                     u2140 099C                     u2060 0732  
                   u1341 104A                     u1325 0FFE                     u1261 0F5A  
                   u1245 0F0E                     u1181 0E72                     u2141 0998  
                   u2061 072E                     u1350 1068                     u1334 1022  
                   u1270 0F78                     u1254 0F32                     u1190 0E88  
                   u1510 0D88                     u1430 0C98                     u1414 0C4C  
                   u2150 0B3C                     u2070 0744                     u1351 1064  
                   u1335 101E                     u1271 0F74                     u1255 0F2E  
                   u1191 0E84                     u1511 0D84                     u1431 0C94  
                   u1415 0C48                     u2151 0B38                     u2071 0740  
                   u1520 0D9A                     u1504 0D5C                     u1440 0CAA  
                   u1424 0C6C                     u1600 1C30                     u2160 0B58  
                   u2080 0760                     u1521 0D96                     u1505 0D58  
                   u1441 0CA6                     u1425 0C68                     u1601 1C2C  
                   u2161 0B54                     u2081 075C                     u1610 128A  
                   u2170 0B74                     u2090 082E                     u1611 1286  
                   u2171 0B70                     u2091 082A                     u1364 107A  
                   u1284 0F8A                     u1380 1978                     u1365 1076  
                   u1285 0F86                     u1381 1974                     u1630 12CE  
                   u1374 109A                     u1294 0FAA                     u1550 0E00  
                   u1534 0DB0                     u1470 0D10                     u1454 0CC0  
                   u1390 0C28                     u1710 17FC                     u1631 12CA  
                   u1375 1096                     u1295 0FA6                     u1551 0DFC  
                   u1535 0DAC                     u1471 0D0C                     u1455 0CBC  
                   u1391 0C24                     u1711 17F8                     u1704 13BC  
                   u1624 129C                     u1800 1454                     u1560 0E12  
                   u1544 0DD4                     u1480 0D22                     u1464 0CE4  
                   u1720 181E                     u1705 13B8                     u1625 1298  
                   u1801 1450                     u1561 0E0E                     u1545 0DD0  
                   u1481 0D1E                     u1465 0CE0                     u1721 181A  
                   u1650 1316                     u1730 183C                     u1651 1312  
                   u1731 1838                     u1900 153A                     u1644 12E4  
                   u1820 1498                     u1740 19C0                     u1901 1536  
                   u1645 12E0                     u1821 1494                     u1741 19BC  
                   u1910 1560                     u1670 135E                     u1814 146C  
                   u1574 0E28                     u1494 0D38                     u1590 1B22  
                   u1750 112A                     u1911 155C                     u1671 135A  
                   u1815 1466                     u1575 0E24                     u1495 0D34  
                   u1591 1B1E                     u1751 1126                     u1920 157E  
                   u1664 132C                     u1840 14E2                     u1584 0E4C  
                   u1760 1172                     u1921 157A                     u1665 1328  
                   u1841 14DE                     u1585 0E48                     u1761 116E  
                   u1930 159A                     u1690 13A6                     u1850 1504  
                   u1834 14B4                     u1770 11E0                     u1931 1596  
                   u1691 13A2                     u1851 1500                     u1835 14AE  
                   u1771 11DC                     u1940 15C0                     u1684 1374  
                   u1780 1404                     u1860 1694                     u1941 15BC  
                   u1685 1370                     u1781 1400                     u1861 1690  
                   u1950 1748                     u1870 16CE                     u1951 1744  
                   u1871 16CA                     u1960 1762                     u1880 1708  
                   u1961 175E                     u1881 1704                     u1890 1520  
                   u1970 177C                     u1794 1424                     u1891 151C  
                   u1971 1778                     u1795 141E                     u1980 179A  
                   u1981 1796                     u1990 17B0                     u1991 17AC  
            main@jogando 01DA                     _main 061C                     _keys 0021  
       ??_PulseClockData 0007                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     prodh 000FF4  
                   prodl 000FF3                     start 0000          pushNibble@value 000C  
           ___param_bank 000000   __end_of_pulseEnablePin 1A46                    ?_main 0001  
        __end_of___awdiv 15D2          __end_of___awmod 17E6                    _T0CON 000FD5  
        ___awdiv@divisor 0003          __end_of___llmod 186E          ___awdiv@counter 0005  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84          __end_of_charKey 061B                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_lcdChar 1C04          __end_of_lcdInit 1686  
        __end_of_rgbInit 1A84          __end_of_pinMode 0E5A                    _valor 0601  
           main@terminou 01D4          __end_of_soWrite 197E                    tablat 000FF5  
                  plusw1 000FE3                    plusw2 000FDB                    status 000FD8  
           pushNibble@rs 000A     __end_of_digitalWrite 10A8          __initialization 19C2  
        ?_pulseEnablePin 0001             __end_of_main 0C0C           sacaCarta@valor 000F  
                 ??_main 0019            __activetblptr 000002     __size_of_digitalRead 016A  
                 _ADCON1 000FC1         ___llmod@dividend 0001         ___awdiv@dividend 0001  
            rgbColor@led 0007                   _INTCON 000FF2                   ___wmul 1B9E  
              ??___awdiv 0005                ??___awmod 000D                ??___llmod 0009  
                 _kpInit 1AC2                   _kpRead 1C32         __end_of_rgbColor 1736  
                 clear_0 19E8                   clear_1 19F4                   _soInit 1A84  
       ___awdiv@quotient 0007          ___awmod@divisor 000B                ??_lcdChar 000E  
                 isa$std 000001                ??_lcdInit 000F          ___awmod@counter 000D  
              ??_rgbInit 0007                ??_pinMode 0005             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_soWrite 0009         __end_of_pushByte 1930               __accesstop 0080  
__end_of__initialization 19FA            ___rparam_used 000001            pushByte@value 000D  
            pinMode@type 0003           __pcstackCOMRAM 0001             __pidataBANK0 186E  
          __end_of_valor 0611       __size_of_delayMili 0030          sacaCarta@namesa 0011  
             __pbssBANK2 0200       __size_of_sacaCarta 01C6    __size_of_digitalWrite 024E  
     __size_of_mesaReset 0044               _delayMicro 1C44               _lcdCommand 1C04  
                ?___wmul 0009                  ?_kpInit 0001                  ?_kpRead 0001  
                ?_soInit 0001               _kpDebounce 13D8       __size_of_timerInit 0008  
     __size_of_timerWait 0010             _digitalWrite 0E5A        __end_of_delayMili 1B24  
              ?_rgbColor 0007         ??_pulseEnablePin 0007                  __Hparam 0000  
                __Lparam 0000          kpDebounce@tempo 0028                  ___awdiv 150E  
                ___awmod 1736                ?_pushByte 000A          __size_of___wmul 0026  
                ___llmod 17E6             __psmallconst 0600          __size_of_kpInit 0032  
        __size_of_kpRead 000A                  _charKey 0611                  __pcinit 19C2  
                _lcdChar 1BE6                  __ramtop 0600          __size_of_soInit 003E  
      __end_of_sacaCarta 126E                  _lcdInit 15D2                  __ptext0 061C  
                __ptext1 1C3C                  __ptext2 10A8                  __ptext3 1C22  
                __ptext4 1BC4                  __ptext5 1BE6                  __ptext6 17E6  
                __ptext7 1A46                  __ptext8 1686                  __ptext9 197E  
                _display 0027        __end_of_mesaReset 19C2                  _rgbInit 1A46  
                _pinMode 0C0C         ___awmod@dividend 0009               delayMili@a 0001  
             delayMili@i 0004                  _soWrite 1930                  main@max 01DC  
   end_of_initialization 19FA            ?_PulseEnClock 0001               ??_rgbColor 0009  
          __Lmediumconst 0000           digitalRead@pin 0001              ?_delayMicro 0001  
      __end_of_timerInit 1C44        __end_of_timerWait 1C32                  postdec1 000FE5  
                postdec2 000FDD              ?_lcdCommand 0001                  postinc0 000FEE  
                postinc2 000FDE               ??_pushByte 000C  __size_of_PulseClockData 002A  
          ??_digitalRead 0003               _timerReset 1BC4              ?_kpDebounce 0001  
             _pushNibble 1B78           ??_PulseEnClock 0007               main@aposta 01E0  
             main@namesa 0168           __end_of___wmul 1BC4           __end_of_kpInit 1AF4  
         __end_of_kpRead 1C3C           __end_of_soInit 1AC2      __size_of_delayMicro 0002  
    start_initialization 19C2      __end_of_digitalRead 13D8            sacaCarta@cont 0013  
    __size_of_lcdCommand 001E      __size_of_kpDebounce 0136          ___llmod@divisor 0005  
             mesaReset@i 0003          ___llmod@counter 0009        kpDebounce@oldRead 001D  
      kpDebounce@newRead 001F                 ??___wmul 000D                 ??_kpInit 0007  
               ??_kpRead 0003              __pdataBANK0 0080              ?_timerReset 000A  
               ??_soInit 0007              __pbssCOMRAM 001D            __pcstackBANK1 0100  
            ?_pushNibble 000A               pinMode@pin 0001        __size_of_rgbColor 00B0  
              _delayMili 1AF4                 ?___awdiv 0001                 ?___awmod 0009  
               ?___llmod 0001           _PulseClockData 1B4E     __end_of_PulseEnClock 1B4E  
            _digitalRead 126E                 ?_lcdChar 0001        __size_of_pushByte 005A  
               ?_lcdInit 0001              __smallconst 0600                 ?_rgbInit 0001  
               ?_pinMode 0001                _sacaCarta 10A8                 ?_soWrite 0007  
              _mesaReset 197E      __size_of_timerReset 0022           ___wmul@product 000D  
           ??_delayMicro 0003               ?_delayMili 0001   __end_of_PulseClockData 1B78  
    __size_of_pushNibble 0026             ??_lcdCommand 000E                main@F2395 0080  
              main@F2397 0200                _timerInit 1C3C                _timerWait 1C22  
           ??_kpDebounce 000A        ___wmul@multiplier 0009          lcdCommand@value 000E  
              main@tecla 01D6               ?_sacaCarta 000F                main@valor 0100  
     __end_of_delayMicro 1C46               ?_mesaReset 0001         timerReset@ciclos 000C  
              copy_data0 19D6       __end_of_lcdCommand 1C22               pushByte@rs 000A  
           lcdChar@value 000E       __end_of_kpDebounce 150E                 __Hrparam 0000  
               __Lrparam 0000          ?_PulseClockData 0001               ?_timerInit 0001  
             ?_timerWait 0001         __size_of___awdiv 00C4         __size_of___awmod 00B0  
__size_of_pulseEnablePin 0042         __size_of___llmod 0088         __size_of_lcdChar 001E  
       __size_of_lcdInit 00B4         __size_of_rgbInit 003E         __size_of_pinMode 024E  
               __ptext10 15D2                 __ptext11 1B78                 __ptext20 0C0C  
               __ptext12 1C04                 __ptext21 13D8                 __ptext13 18D6  
               __ptext22 1930                 __ptext14 1A04                 __ptext23 1B24  
               __ptext15 1C44                 __ptext24 1B4E                 __ptext16 1AF4  
               __ptext25 0E5A                 __ptext17 1C32                 __ptext26 126E  
               __ptext18 1AC2                 __ptext27 1B9E                 __ptext19 1A84  
               __ptext28 1736                 __ptext29 150E         __size_of_soWrite 004E  
               _rgbColor 1686          mesaReset@namesa 0001            __size_of_main 05F0  
            ??_delayMili 0003    __size_of_PulseEnClock 002A              delayMicro@a 0001  
               isa$xinst 000000             soWrite@value 0007                 _pushByte 18D6  
           ??_timerReset 000C                 main@cont 01D0                 main@soma 01DE  
        timerReset@tempo 000A              ??_sacaCarta 0017             ??_pushNibble 000C  
          ?_digitalWrite 0001              ??_mesaReset 0003             _PulseEnClock 1B24  
      digitalWrite@value 0003       __end_of_timerReset 1BE6                 soWrite@i 0009  
            ??_timerInit 0001              ??_timerWait 0001       __end_of_pushNibble 1B9E  
           ?_digitalRead 0001              kpDebounce@i 000D           ??_digitalWrite 0005  
        digitalWrite@pin 0001  
